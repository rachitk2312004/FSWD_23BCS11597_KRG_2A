{"ast":null,"code":"import React,{createContext,useContext,useState,useCallback}from'react';import{resumeAPI,portfolioAPI}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AutoSaveContext=/*#__PURE__*/createContext();export const useAutoSave=()=>{const context=useContext(AutoSaveContext);if(!context){throw new Error('useAutoSave must be used within an AutoSaveProvider');}return context;};export const AutoSaveProvider=_ref=>{let{children}=_ref;const[autoSaveEnabled,setAutoSaveEnabled]=useState(true);const[lastSaved,setLastSaved]=useState(null);const[isSaving,setIsSaving]=useState(false);const saveResume=useCallback(async(id,data)=>{if(!autoSaveEnabled||!id)return;setIsSaving(true);try{await resumeAPI.updateResume(id,data);setLastSaved(new Date());}catch(error){console.error('Auto-save failed:',error);toast.error('Auto-save failed');}finally{setIsSaving(false);}},[autoSaveEnabled]);const savePortfolio=useCallback(async(id,data)=>{if(!autoSaveEnabled||!id)return;setIsSaving(true);try{await portfolioAPI.updatePortfolio(id,data);setLastSaved(new Date());}catch(error){console.error('Auto-save failed:',error);toast.error('Auto-save failed');}finally{setIsSaving(false);}},[autoSaveEnabled]);const toggleAutoSave=useCallback(()=>{setAutoSaveEnabled(prev=>!prev);toast.success(\"Auto-save \".concat(!autoSaveEnabled?'enabled':'disabled'));},[autoSaveEnabled]);const value={autoSaveEnabled,lastSaved,isSaving,saveResume,savePortfolio,toggleAutoSave};return/*#__PURE__*/_jsx(AutoSaveContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","resumeAPI","portfolioAPI","toast","jsx","_jsx","AutoSaveContext","useAutoSave","context","Error","AutoSaveProvider","_ref","children","autoSaveEnabled","setAutoSaveEnabled","lastSaved","setLastSaved","isSaving","setIsSaving","saveResume","id","data","updateResume","Date","error","console","savePortfolio","updatePortfolio","toggleAutoSave","prev","success","concat","value","Provider"],"sources":["/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/contexts/AutoSaveContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport { resumeAPI, portfolioAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AutoSaveContext = createContext();\n\nexport const useAutoSave = () => {\n  const context = useContext(AutoSaveContext);\n  if (!context) {\n    throw new Error('useAutoSave must be used within an AutoSaveProvider');\n  }\n  return context;\n};\n\nexport const AutoSaveProvider = ({ children }) => {\n  const [autoSaveEnabled, setAutoSaveEnabled] = useState(true);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const saveResume = useCallback(async (id, data) => {\n    if (!autoSaveEnabled || !id) return;\n\n    setIsSaving(true);\n    try {\n      await resumeAPI.updateResume(id, data);\n      setLastSaved(new Date());\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      toast.error('Auto-save failed');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [autoSaveEnabled]);\n\n  const savePortfolio = useCallback(async (id, data) => {\n    if (!autoSaveEnabled || !id) return;\n\n    setIsSaving(true);\n    try {\n      await portfolioAPI.updatePortfolio(id, data);\n      setLastSaved(new Date());\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      toast.error('Auto-save failed');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [autoSaveEnabled]);\n\n  const toggleAutoSave = useCallback(() => {\n    setAutoSaveEnabled(prev => !prev);\n    toast.success(`Auto-save ${!autoSaveEnabled ? 'enabled' : 'disabled'}`);\n  }, [autoSaveEnabled]);\n\n  const value = {\n    autoSaveEnabled,\n    lastSaved,\n    isSaving,\n    saveResume,\n    savePortfolio,\n    toggleAutoSave,\n  };\n\n  return (\n    <AutoSaveContext.Provider value={value}>\n      {children}\n    </AutoSaveContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}