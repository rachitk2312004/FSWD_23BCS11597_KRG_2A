{"ast":null,"code":"import _objectSpread from \"/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport React, { useLayoutEffect as useLayoutEffect$1, useEffect, useRef, useState, useContext } from 'react';\nimport ReactDOM, { flushSync } from 'react-dom';\nimport { createStore as createStore$1, applyMiddleware, compose, bindActionCreators } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { useMemo, useCallback } from 'use-memo-one';\nimport { getRect, expand, offset, withScroll, calculateBox, getBox, createBox } from 'css-box-model';\nimport memoizeOne from 'memoize-one';\nimport rafSchd from 'raf-schd';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nconst isProduction$1 = process.env.NODE_ENV === 'production';\nconst spacesAndTabs = /[ \\t]{2,}/g;\nconst lineStartWithSpaces = /^[ \\t]*/gm;\nconst clean$2 = value => value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();\nconst getDevMessage = message => clean$2(\"\\n  %c@hello-pangea/dnd\\n\\n  %c\".concat(clean$2(message), \"\\n\\n  %c\\uD83D\\uDC77\\u200D This is a development only message. It will be removed in production builds.\\n\"));\nconst getFormattedMessage = message => [getDevMessage(message), 'color: #00C584; font-size: 1.2em; font-weight: bold;', 'line-height: 1.5', 'color: #723874;'];\nconst isDisabledFlag = '__@hello-pangea/dnd-disable-dev-warnings';\nfunction log(type, message) {\n  if (isProduction$1) {\n    return;\n  }\n  if (typeof window !== 'undefined' && window[isDisabledFlag]) {\n    return;\n  }\n  console[type](...getFormattedMessage(message));\n}\nconst warning = log.bind(null, 'warn');\nconst error = log.bind(null, 'error');\nfunction noop$2() {}\nfunction getOptions(shared, fromBinding) {\n  return _objectSpread(_objectSpread({}, shared), fromBinding);\n}\nfunction bindEvents(el, bindings, sharedOptions) {\n  const unbindings = bindings.map(binding => {\n    const options = getOptions(sharedOptions, binding.options);\n    el.addEventListener(binding.eventName, binding.fn, options);\n    return function unbind() {\n      el.removeEventListener(binding.eventName, binding.fn, options);\n    };\n  });\n  return function unbindAll() {\n    unbindings.forEach(unbind => {\n      unbind();\n    });\n  };\n}\nconst isProduction = process.env.NODE_ENV === 'production';\nconst prefix$1 = 'Invariant failed';\nclass RbdInvariant extends Error {}\nRbdInvariant.prototype.toString = function toString() {\n  return this.message;\n};\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (isProduction) {\n    throw new RbdInvariant(prefix$1);\n  } else {\n    throw new RbdInvariant(\"\".concat(prefix$1, \": \").concat(message || ''));\n  }\n}\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.callbacks = null;\n    this.unbind = noop$2;\n    this.onWindowError = event => {\n      const callbacks = this.getCallbacks();\n      if (callbacks.isDragging()) {\n        callbacks.tryAbort();\n        process.env.NODE_ENV !== \"production\" ? warning(\"\\n        An error was caught by our window 'error' event listener while a drag was occurring.\\n        The active drag has been aborted.\\n      \") : void 0;\n      }\n      const err = event.error;\n      if (err instanceof RbdInvariant) {\n        event.preventDefault();\n        if (process.env.NODE_ENV !== 'production') {\n          error(err.message);\n        }\n      }\n    };\n    this.getCallbacks = () => {\n      if (!this.callbacks) {\n        throw new Error('Unable to find AppCallbacks in <ErrorBoundary/>');\n      }\n      return this.callbacks;\n    };\n    this.setCallbacks = callbacks => {\n      this.callbacks = callbacks;\n    };\n  }\n  componentDidMount() {\n    this.unbind = bindEvents(window, [{\n      eventName: 'error',\n      fn: this.onWindowError\n    }]);\n  }\n  componentDidCatch(err) {\n    if (err instanceof RbdInvariant) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(err.message);\n      }\n      this.setState({});\n      return;\n    }\n    throw err;\n  }\n  componentWillUnmount() {\n    this.unbind();\n  }\n  render() {\n    return this.props.children(this.setCallbacks);\n  }\n}\nconst dragHandleUsageInstructions = \"\\n  Press space bar to start a drag.\\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\\n  Some screen readers may require you to be in focus mode or to use your pass through key\\n\";\nconst position = index => index + 1;\nconst onDragStart = start => \"\\n  You have lifted an item in position \".concat(position(start.source.index), \"\\n\");\nconst withLocation = (source, destination) => {\n  const isInHomeList = source.droppableId === destination.droppableId;\n  const startPosition = position(source.index);\n  const endPosition = position(destination.index);\n  if (isInHomeList) {\n    return \"\\n      You have moved the item from position \".concat(startPosition, \"\\n      to position \").concat(endPosition, \"\\n    \");\n  }\n  return \"\\n    You have moved the item from position \".concat(startPosition, \"\\n    in list \").concat(source.droppableId, \"\\n    to list \").concat(destination.droppableId, \"\\n    in position \").concat(endPosition, \"\\n  \");\n};\nconst withCombine = (id, source, combine) => {\n  const inHomeList = source.droppableId === combine.droppableId;\n  if (inHomeList) {\n    return \"\\n      The item \".concat(id, \"\\n      has been combined with \").concat(combine.draggableId);\n  }\n  return \"\\n      The item \".concat(id, \"\\n      in list \").concat(source.droppableId, \"\\n      has been combined with \").concat(combine.draggableId, \"\\n      in list \").concat(combine.droppableId, \"\\n    \");\n};\nconst onDragUpdate = update => {\n  const location = update.destination;\n  if (location) {\n    return withLocation(update.source, location);\n  }\n  const combine = update.combine;\n  if (combine) {\n    return withCombine(update.draggableId, update.source, combine);\n  }\n  return 'You are over an area that cannot be dropped on';\n};\nconst returnedToStart = source => \"\\n  The item has returned to its starting position\\n  of \".concat(position(source.index), \"\\n\");\nconst onDragEnd = result => {\n  if (result.reason === 'CANCEL') {\n    return \"\\n      Movement cancelled.\\n      \".concat(returnedToStart(result.source), \"\\n    \");\n  }\n  const location = result.destination;\n  const combine = result.combine;\n  if (location) {\n    return \"\\n      You have dropped the item.\\n      \".concat(withLocation(result.source, location), \"\\n    \");\n  }\n  if (combine) {\n    return \"\\n      You have dropped the item.\\n      \".concat(withCombine(result.draggableId, result.source, combine), \"\\n    \");\n  }\n  return \"\\n    The item has been dropped while not over a drop area.\\n    \".concat(returnedToStart(result.source), \"\\n  \");\n};\nconst preset = {\n  dragHandleUsageInstructions,\n  onDragStart,\n  onDragUpdate,\n  onDragEnd\n};\nvar preset$1 = preset;\nconst origin = {\n  x: 0,\n  y: 0\n};\nconst add = (point1, point2) => ({\n  x: point1.x + point2.x,\n  y: point1.y + point2.y\n});\nconst subtract = (point1, point2) => ({\n  x: point1.x - point2.x,\n  y: point1.y - point2.y\n});\nconst isEqual$1 = (point1, point2) => point1.x === point2.x && point1.y === point2.y;\nconst negate = point => ({\n  x: point.x !== 0 ? -point.x : 0,\n  y: point.y !== 0 ? -point.y : 0\n});\nconst patch = function (line, value) {\n  let otherValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (line === 'x') {\n    return {\n      x: value,\n      y: otherValue\n    };\n  }\n  return {\n    x: otherValue,\n    y: value\n  };\n};\nconst distance = (point1, point2) => Math.sqrt((point2.x - point1.x) ** 2 + (point2.y - point1.y) ** 2);\nconst closest$1 = (target, points) => Math.min(...points.map(point => distance(target, point)));\nconst apply = fn => point => ({\n  x: fn(point.x),\n  y: fn(point.y)\n});\nvar executeClip = (frame, subject) => {\n  const result = getRect({\n    top: Math.max(subject.top, frame.top),\n    right: Math.min(subject.right, frame.right),\n    bottom: Math.min(subject.bottom, frame.bottom),\n    left: Math.max(subject.left, frame.left)\n  });\n  if (result.width <= 0 || result.height <= 0) {\n    return null;\n  }\n  return result;\n};\nconst offsetByPosition = (spacing, point) => ({\n  top: spacing.top + point.y,\n  left: spacing.left + point.x,\n  bottom: spacing.bottom + point.y,\n  right: spacing.right + point.x\n});\nconst getCorners = spacing => [{\n  x: spacing.left,\n  y: spacing.top\n}, {\n  x: spacing.right,\n  y: spacing.top\n}, {\n  x: spacing.left,\n  y: spacing.bottom\n}, {\n  x: spacing.right,\n  y: spacing.bottom\n}];\nconst noSpacing = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nconst scroll$1 = (target, frame) => {\n  if (!frame) {\n    return target;\n  }\n  return offsetByPosition(target, frame.scroll.diff.displacement);\n};\nconst increase = (target, axis, withPlaceholder) => {\n  if (withPlaceholder && withPlaceholder.increasedBy) {\n    return _objectSpread(_objectSpread({}, target), {}, {\n      [axis.end]: target[axis.end] + withPlaceholder.increasedBy[axis.line]\n    });\n  }\n  return target;\n};\nconst clip = (target, frame) => {\n  if (frame && frame.shouldClipSubject) {\n    return executeClip(frame.pageMarginBox, target);\n  }\n  return getRect(target);\n};\nvar getSubject = _ref => {\n  let {\n    page,\n    withPlaceholder,\n    axis,\n    frame\n  } = _ref;\n  const scrolled = scroll$1(page.marginBox, frame);\n  const increased = increase(scrolled, axis, withPlaceholder);\n  const clipped = clip(increased, frame);\n  return {\n    page,\n    withPlaceholder,\n    active: clipped\n  };\n};\nvar scrollDroppable = (droppable, newScroll) => {\n  !droppable.frame ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  const scrollable = droppable.frame;\n  const scrollDiff = subtract(newScroll, scrollable.scroll.initial);\n  const scrollDisplacement = negate(scrollDiff);\n  const frame = _objectSpread(_objectSpread({}, scrollable), {}, {\n    scroll: {\n      initial: scrollable.scroll.initial,\n      current: newScroll,\n      diff: {\n        value: scrollDiff,\n        displacement: scrollDisplacement\n      },\n      max: scrollable.scroll.max\n    }\n  });\n  const subject = getSubject({\n    page: droppable.subject.page,\n    withPlaceholder: droppable.subject.withPlaceholder,\n    axis: droppable.axis,\n    frame\n  });\n  const result = _objectSpread(_objectSpread({}, droppable), {}, {\n    frame,\n    subject\n  });\n  return result;\n};\nconst toDroppableMap = memoizeOne(droppables => droppables.reduce((previous, current) => {\n  previous[current.descriptor.id] = current;\n  return previous;\n}, {}));\nconst toDraggableMap = memoizeOne(draggables => draggables.reduce((previous, current) => {\n  previous[current.descriptor.id] = current;\n  return previous;\n}, {}));\nconst toDroppableList = memoizeOne(droppables => Object.values(droppables));\nconst toDraggableList = memoizeOne(draggables => Object.values(draggables));\nvar getDraggablesInsideDroppable = memoizeOne((droppableId, draggables) => {\n  const result = toDraggableList(draggables).filter(draggable => droppableId === draggable.descriptor.droppableId).sort((a, b) => a.descriptor.index - b.descriptor.index);\n  return result;\n});\nfunction tryGetDestination(impact) {\n  if (impact.at && impact.at.type === 'REORDER') {\n    return impact.at.destination;\n  }\n  return null;\n}\nfunction tryGetCombine(impact) {\n  if (impact.at && impact.at.type === 'COMBINE') {\n    return impact.at.combine;\n  }\n  return null;\n}\nvar removeDraggableFromList = memoizeOne((remove, list) => list.filter(item => item.descriptor.id !== remove.descriptor.id));\nvar moveToNextCombine = _ref2 => {\n  let {\n    isMovingForward,\n    draggable,\n    destination,\n    insideDestination,\n    previousImpact\n  } = _ref2;\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const location = tryGetDestination(previousImpact);\n  if (!location) {\n    return null;\n  }\n  function getImpact(target) {\n    const at = {\n      type: 'COMBINE',\n      combine: {\n        draggableId: target,\n        droppableId: destination.descriptor.id\n      }\n    };\n    return _objectSpread(_objectSpread({}, previousImpact), {}, {\n      at\n    });\n  }\n  const all = previousImpact.displaced.all;\n  const closestId = all.length ? all[0] : null;\n  if (isMovingForward) {\n    return closestId ? getImpact(closestId) : null;\n  }\n  const withoutDraggable = removeDraggableFromList(draggable, insideDestination);\n  if (!closestId) {\n    if (!withoutDraggable.length) {\n      return null;\n    }\n    const last = withoutDraggable[withoutDraggable.length - 1];\n    return getImpact(last.descriptor.id);\n  }\n  const indexOfClosest = withoutDraggable.findIndex(d => d.descriptor.id === closestId);\n  !(indexOfClosest !== -1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find displaced item in set') : invariant(false) : void 0;\n  const proposedIndex = indexOfClosest - 1;\n  if (proposedIndex < 0) {\n    return null;\n  }\n  const before = withoutDraggable[proposedIndex];\n  return getImpact(before.descriptor.id);\n};\nvar isHomeOf = (draggable, destination) => draggable.descriptor.droppableId === destination.descriptor.id;\nconst noDisplacedBy = {\n  point: origin,\n  value: 0\n};\nconst emptyGroups = {\n  invisible: {},\n  visible: {},\n  all: []\n};\nconst noImpact = {\n  displaced: emptyGroups,\n  displacedBy: noDisplacedBy,\n  at: null\n};\nvar noImpact$1 = noImpact;\nvar isWithin = (lowerBound, upperBound) => value => lowerBound <= value && value <= upperBound;\nvar isPartiallyVisibleThroughFrame = frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    const isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n    if (isContained) {\n      return true;\n    }\n    const isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);\n    const isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);\n    const isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;\n    if (isPartiallyContained) {\n      return true;\n    }\n    const isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;\n    const isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;\n    const isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;\n    if (isTargetBiggerThanFrame) {\n      return true;\n    }\n    const isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;\n    return isTargetBiggerOnOneAxis;\n  };\n};\nvar isTotallyVisibleThroughFrame = frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    const isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n    return isContained;\n  };\n};\nconst vertical = {\n  direction: 'vertical',\n  line: 'y',\n  crossAxisLine: 'x',\n  start: 'top',\n  end: 'bottom',\n  size: 'height',\n  crossAxisStart: 'left',\n  crossAxisEnd: 'right',\n  crossAxisSize: 'width'\n};\nconst horizontal = {\n  direction: 'horizontal',\n  line: 'x',\n  crossAxisLine: 'y',\n  start: 'left',\n  end: 'right',\n  size: 'width',\n  crossAxisStart: 'top',\n  crossAxisEnd: 'bottom',\n  crossAxisSize: 'height'\n};\nvar isTotallyVisibleThroughFrameOnAxis = axis => frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    if (axis === vertical) {\n      return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);\n    }\n    return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n  };\n};\nconst getDroppableDisplaced = (target, destination) => {\n  const displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;\n  return offsetByPosition(target, displacement);\n};\nconst isVisibleInDroppable = (target, destination, isVisibleThroughFrameFn) => {\n  if (!destination.subject.active) {\n    return false;\n  }\n  return isVisibleThroughFrameFn(destination.subject.active)(target);\n};\nconst isVisibleInViewport = (target, viewport, isVisibleThroughFrameFn) => isVisibleThroughFrameFn(viewport)(target);\nconst isVisible$1 = _ref3 => {\n  let {\n    target: toBeDisplaced,\n    destination,\n    viewport,\n    withDroppableDisplacement,\n    isVisibleThroughFrameFn\n  } = _ref3;\n  const displacedTarget = withDroppableDisplacement ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;\n  return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);\n};\nconst isPartiallyVisible = args => isVisible$1(_objectSpread(_objectSpread({}, args), {}, {\n  isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame\n}));\nconst isTotallyVisible = args => isVisible$1(_objectSpread(_objectSpread({}, args), {}, {\n  isVisibleThroughFrameFn: isTotallyVisibleThroughFrame\n}));\nconst isTotallyVisibleOnAxis = args => isVisible$1(_objectSpread(_objectSpread({}, args), {}, {\n  isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)\n}));\nconst getShouldAnimate = (id, last, forceShouldAnimate) => {\n  if (typeof forceShouldAnimate === 'boolean') {\n    return forceShouldAnimate;\n  }\n  if (!last) {\n    return true;\n  }\n  const {\n    invisible,\n    visible\n  } = last;\n  if (invisible[id]) {\n    return false;\n  }\n  const previous = visible[id];\n  return previous ? previous.shouldAnimate : true;\n};\nfunction getTarget(draggable, displacedBy) {\n  const marginBox = draggable.page.marginBox;\n  const expandBy = {\n    top: displacedBy.point.y,\n    right: 0,\n    bottom: 0,\n    left: displacedBy.point.x\n  };\n  return getRect(expand(marginBox, expandBy));\n}\nfunction getDisplacementGroups(_ref4) {\n  let {\n    afterDragging,\n    destination,\n    displacedBy,\n    viewport,\n    forceShouldAnimate,\n    last\n  } = _ref4;\n  return afterDragging.reduce(function process(groups, draggable) {\n    const target = getTarget(draggable, displacedBy);\n    const id = draggable.descriptor.id;\n    groups.all.push(id);\n    const isVisible = isPartiallyVisible({\n      target,\n      destination,\n      viewport,\n      withDroppableDisplacement: true\n    });\n    if (!isVisible) {\n      groups.invisible[draggable.descriptor.id] = true;\n      return groups;\n    }\n    const shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);\n    const displacement = {\n      draggableId: id,\n      shouldAnimate\n    };\n    groups.visible[id] = displacement;\n    return groups;\n  }, {\n    all: [],\n    visible: {},\n    invisible: {}\n  });\n}\nfunction getIndexOfLastItem(draggables, options) {\n  if (!draggables.length) {\n    return 0;\n  }\n  const indexOfLastItem = draggables[draggables.length - 1].descriptor.index;\n  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;\n}\nfunction goAtEnd(_ref5) {\n  let {\n    insideDestination,\n    inHomeList,\n    displacedBy,\n    destination\n  } = _ref5;\n  const newIndex = getIndexOfLastItem(insideDestination, {\n    inHomeList\n  });\n  return {\n    displaced: emptyGroups,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: {\n        droppableId: destination.descriptor.id,\n        index: newIndex\n      }\n    }\n  };\n}\nfunction calculateReorderImpact(_ref6) {\n  let {\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    displacedBy,\n    last,\n    index,\n    forceShouldAnimate\n  } = _ref6;\n  const inHomeList = isHomeOf(draggable, destination);\n  if (index == null) {\n    return goAtEnd({\n      insideDestination,\n      inHomeList,\n      displacedBy,\n      destination\n    });\n  }\n  const match = insideDestination.find(item => item.descriptor.index === index);\n  if (!match) {\n    return goAtEnd({\n      insideDestination,\n      inHomeList,\n      displacedBy,\n      destination\n    });\n  }\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const sliceFrom = insideDestination.indexOf(match);\n  const impacted = withoutDragging.slice(sliceFrom);\n  const displaced = getDisplacementGroups({\n    afterDragging: impacted,\n    destination,\n    displacedBy,\n    last,\n    viewport: viewport.frame,\n    forceShouldAnimate\n  });\n  return {\n    displaced,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: {\n        droppableId: destination.descriptor.id,\n        index\n      }\n    }\n  };\n}\nfunction didStartAfterCritical(draggableId, afterCritical) {\n  return Boolean(afterCritical.effected[draggableId]);\n}\nvar fromCombine = _ref7 => {\n  let {\n    isMovingForward,\n    destination,\n    draggables,\n    combine,\n    afterCritical\n  } = _ref7;\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const combineId = combine.draggableId;\n  const combineWith = draggables[combineId];\n  const combineWithIndex = combineWith.descriptor.index;\n  const didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);\n  if (didCombineWithStartAfterCritical) {\n    if (isMovingForward) {\n      return combineWithIndex;\n    }\n    return combineWithIndex - 1;\n  }\n  if (isMovingForward) {\n    return combineWithIndex + 1;\n  }\n  return combineWithIndex;\n};\nvar fromReorder = _ref8 => {\n  let {\n    isMovingForward,\n    isInHomeList,\n    insideDestination,\n    location\n  } = _ref8;\n  if (!insideDestination.length) {\n    return null;\n  }\n  const currentIndex = location.index;\n  const proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;\n  const firstIndex = insideDestination[0].descriptor.index;\n  const lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;\n  const upperBound = isInHomeList ? lastIndex : lastIndex + 1;\n  if (proposedIndex < firstIndex) {\n    return null;\n  }\n  if (proposedIndex > upperBound) {\n    return null;\n  }\n  return proposedIndex;\n};\nvar moveToNextIndex = _ref9 => {\n  let {\n    isMovingForward,\n    isInHomeList,\n    draggable,\n    draggables,\n    destination,\n    insideDestination,\n    previousImpact,\n    viewport,\n    afterCritical\n  } = _ref9;\n  const wasAt = previousImpact.at;\n  !wasAt ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot move in direction without previous impact location') : invariant(false) : void 0;\n  if (wasAt.type === 'REORDER') {\n    const newIndex = fromReorder({\n      isMovingForward,\n      isInHomeList,\n      location: wasAt.destination,\n      insideDestination\n    });\n    if (newIndex == null) {\n      return null;\n    }\n    return calculateReorderImpact({\n      draggable,\n      insideDestination,\n      destination,\n      viewport,\n      last: previousImpact.displaced,\n      displacedBy: previousImpact.displacedBy,\n      index: newIndex\n    });\n  }\n  const newIndex = fromCombine({\n    isMovingForward,\n    destination,\n    displaced: previousImpact.displaced,\n    draggables,\n    combine: wasAt.combine,\n    afterCritical\n  });\n  if (newIndex == null) {\n    return null;\n  }\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    last: previousImpact.displaced,\n    displacedBy: previousImpact.displacedBy,\n    index: newIndex\n  });\n};\nvar getCombinedItemDisplacement = _ref0 => {\n  let {\n    displaced,\n    afterCritical,\n    combineWith,\n    displacedBy\n  } = _ref0;\n  const isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);\n  if (didStartAfterCritical(combineWith, afterCritical)) {\n    return isDisplaced ? origin : negate(displacedBy.point);\n  }\n  return isDisplaced ? displacedBy.point : origin;\n};\nvar whenCombining = _ref1 => {\n  let {\n    afterCritical,\n    impact,\n    draggables\n  } = _ref1;\n  const combine = tryGetCombine(impact);\n  !combine ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  const combineWith = combine.draggableId;\n  const center = draggables[combineWith].page.borderBox.center;\n  const displaceBy = getCombinedItemDisplacement({\n    displaced: impact.displaced,\n    afterCritical,\n    combineWith,\n    displacedBy: impact.displacedBy\n  });\n  return add(center, displaceBy);\n};\nconst distanceFromStartToBorderBoxCenter = (axis, box) => box.margin[axis.start] + box.borderBox[axis.size] / 2;\nconst distanceFromEndToBorderBoxCenter = (axis, box) => box.margin[axis.end] + box.borderBox[axis.size] / 2;\nconst getCrossAxisBorderBoxCenter = (axis, target, isMoving) => target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;\nconst goAfter = _ref10 => {\n  let {\n    axis,\n    moveRelativeTo,\n    isMoving\n  } = _ref10;\n  return patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\n};\nconst goBefore = _ref11 => {\n  let {\n    axis,\n    moveRelativeTo,\n    isMoving\n  } = _ref11;\n  return patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\n};\nconst goIntoStart = _ref12 => {\n  let {\n    axis,\n    moveInto,\n    isMoving\n  } = _ref12;\n  return patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));\n};\nvar whenReordering = _ref13 => {\n  let {\n    impact,\n    draggable,\n    draggables,\n    droppable,\n    afterCritical\n  } = _ref13;\n  const insideDestination = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n  const draggablePage = draggable.page;\n  const axis = droppable.axis;\n  if (!insideDestination.length) {\n    return goIntoStart({\n      axis,\n      moveInto: droppable.page,\n      isMoving: draggablePage\n    });\n  }\n  const {\n    displaced,\n    displacedBy\n  } = impact;\n  const closestAfter = displaced.all[0];\n  if (closestAfter) {\n    const closest = draggables[closestAfter];\n    if (didStartAfterCritical(closestAfter, afterCritical)) {\n      return goBefore({\n        axis,\n        moveRelativeTo: closest.page,\n        isMoving: draggablePage\n      });\n    }\n    const withDisplacement = offset(closest.page, displacedBy.point);\n    return goBefore({\n      axis,\n      moveRelativeTo: withDisplacement,\n      isMoving: draggablePage\n    });\n  }\n  const last = insideDestination[insideDestination.length - 1];\n  if (last.descriptor.id === draggable.descriptor.id) {\n    return draggablePage.borderBox.center;\n  }\n  if (didStartAfterCritical(last.descriptor.id, afterCritical)) {\n    const page = offset(last.page, negate(afterCritical.displacedBy.point));\n    return goAfter({\n      axis,\n      moveRelativeTo: page,\n      isMoving: draggablePage\n    });\n  }\n  return goAfter({\n    axis,\n    moveRelativeTo: last.page,\n    isMoving: draggablePage\n  });\n};\nvar withDroppableDisplacement = (droppable, point) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return point;\n  }\n  return add(point, frame.scroll.diff.displacement);\n};\nconst getResultWithoutDroppableDisplacement = _ref14 => {\n  let {\n    impact,\n    draggable,\n    droppable,\n    draggables,\n    afterCritical\n  } = _ref14;\n  const original = draggable.page.borderBox.center;\n  const at = impact.at;\n  if (!droppable) {\n    return original;\n  }\n  if (!at) {\n    return original;\n  }\n  if (at.type === 'REORDER') {\n    return whenReordering({\n      impact,\n      draggable,\n      draggables,\n      droppable,\n      afterCritical\n    });\n  }\n  return whenCombining({\n    impact,\n    draggables,\n    afterCritical\n  });\n};\nvar getPageBorderBoxCenterFromImpact = args => {\n  const withoutDisplacement = getResultWithoutDroppableDisplacement(args);\n  const droppable = args.droppable;\n  const withDisplacement = droppable ? withDroppableDisplacement(droppable, withoutDisplacement) : withoutDisplacement;\n  return withDisplacement;\n};\nvar scrollViewport = (viewport, newScroll) => {\n  const diff = subtract(newScroll, viewport.scroll.initial);\n  const displacement = negate(diff);\n  const frame = getRect({\n    top: newScroll.y,\n    bottom: newScroll.y + viewport.frame.height,\n    left: newScroll.x,\n    right: newScroll.x + viewport.frame.width\n  });\n  const updated = {\n    frame,\n    scroll: {\n      initial: viewport.scroll.initial,\n      max: viewport.scroll.max,\n      current: newScroll,\n      diff: {\n        value: diff,\n        displacement\n      }\n    }\n  };\n  return updated;\n};\nfunction getDraggables$1(ids, draggables) {\n  return ids.map(id => draggables[id]);\n}\nfunction tryGetVisible(id, groups) {\n  for (let i = 0; i < groups.length; i++) {\n    const displacement = groups[i].visible[id];\n    if (displacement) {\n      return displacement;\n    }\n  }\n  return null;\n}\nvar speculativelyIncrease = _ref15 => {\n  let {\n    impact,\n    viewport,\n    destination,\n    draggables,\n    maxScrollChange\n  } = _ref15;\n  const scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));\n  const scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;\n  const last = impact.displaced;\n  const withViewportScroll = getDisplacementGroups({\n    afterDragging: getDraggables$1(last.all, draggables),\n    destination,\n    displacedBy: impact.displacedBy,\n    viewport: scrolledViewport.frame,\n    last,\n    forceShouldAnimate: false\n  });\n  const withDroppableScroll = getDisplacementGroups({\n    afterDragging: getDraggables$1(last.all, draggables),\n    destination: scrolledDroppable,\n    displacedBy: impact.displacedBy,\n    viewport: viewport.frame,\n    last,\n    forceShouldAnimate: false\n  });\n  const invisible = {};\n  const visible = {};\n  const groups = [last, withViewportScroll, withDroppableScroll];\n  last.all.forEach(id => {\n    const displacement = tryGetVisible(id, groups);\n    if (displacement) {\n      visible[id] = displacement;\n      return;\n    }\n    invisible[id] = true;\n  });\n  const newImpact = _objectSpread(_objectSpread({}, impact), {}, {\n    displaced: {\n      all: last.all,\n      invisible,\n      visible\n    }\n  });\n  return newImpact;\n};\nvar withViewportDisplacement = (viewport, point) => add(viewport.scroll.diff.displacement, point);\nvar getClientFromPageBorderBoxCenter = _ref16 => {\n  let {\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  } = _ref16;\n  const withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);\n  const offset = subtract(withoutPageScrollChange, draggable.page.borderBox.center);\n  return add(draggable.client.borderBox.center, offset);\n};\nvar isTotallyVisibleInNewLocation = _ref17 => {\n  let {\n    draggable,\n    destination,\n    newPageBorderBoxCenter,\n    viewport,\n    withDroppableDisplacement,\n    onlyOnMainAxis = false\n  } = _ref17;\n  const changeNeeded = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);\n  const shifted = offsetByPosition(draggable.page.borderBox, changeNeeded);\n  const args = {\n    target: shifted,\n    destination,\n    withDroppableDisplacement,\n    viewport\n  };\n  return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);\n};\nvar moveToNextPlace = _ref18 => {\n  let {\n    isMovingForward,\n    draggable,\n    destination,\n    draggables,\n    previousImpact,\n    viewport,\n    previousPageBorderBoxCenter,\n    previousClientSelection,\n    afterCritical\n  } = _ref18;\n  if (!destination.isEnabled) {\n    return null;\n  }\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const isInHomeList = isHomeOf(draggable, destination);\n  const impact = moveToNextCombine({\n    isMovingForward,\n    draggable,\n    destination,\n    insideDestination,\n    previousImpact\n  }) || moveToNextIndex({\n    isMovingForward,\n    isInHomeList,\n    draggable,\n    draggables,\n    destination,\n    insideDestination,\n    previousImpact,\n    viewport,\n    afterCritical\n  });\n  if (!impact) {\n    return null;\n  }\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    afterCritical\n  });\n  const isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n    draggable,\n    destination,\n    newPageBorderBoxCenter: pageBorderBoxCenter,\n    viewport: viewport.frame,\n    withDroppableDisplacement: false,\n    onlyOnMainAxis: true\n  });\n  if (isVisibleInNewLocation) {\n    const clientSelection = getClientFromPageBorderBoxCenter({\n      pageBorderBoxCenter,\n      draggable,\n      viewport\n    });\n    return {\n      clientSelection,\n      impact,\n      scrollJumpRequest: null\n    };\n  }\n  const distance = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);\n  const cautious = speculativelyIncrease({\n    impact,\n    viewport,\n    destination,\n    draggables,\n    maxScrollChange: distance\n  });\n  return {\n    clientSelection: previousClientSelection,\n    impact: cautious,\n    scrollJumpRequest: distance\n  };\n};\nconst getKnownActive = droppable => {\n  const rect = droppable.subject.active;\n  !rect ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot get clipped area from droppable') : invariant(false) : void 0;\n  return rect;\n};\nvar getBestCrossAxisDroppable = _ref19 => {\n  let {\n    isMovingForward,\n    pageBorderBoxCenter,\n    source,\n    droppables,\n    viewport\n  } = _ref19;\n  const active = source.subject.active;\n  if (!active) {\n    return null;\n  }\n  const axis = source.axis;\n  const isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);\n  const candidates = toDroppableList(droppables).filter(droppable => droppable !== source).filter(droppable => droppable.isEnabled).filter(droppable => Boolean(droppable.subject.active)).filter(droppable => isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable))).filter(droppable => {\n    const activeOfTarget = getKnownActive(droppable);\n    if (isMovingForward) {\n      return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];\n    }\n    return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];\n  }).filter(droppable => {\n    const activeOfTarget = getKnownActive(droppable);\n    const isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);\n    return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);\n  }).sort((a, b) => {\n    const first = getKnownActive(a)[axis.crossAxisStart];\n    const second = getKnownActive(b)[axis.crossAxisStart];\n    if (isMovingForward) {\n      return first - second;\n    }\n    return second - first;\n  }).filter((droppable, index, array) => getKnownActive(droppable)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart]);\n  if (!candidates.length) {\n    return null;\n  }\n  if (candidates.length === 1) {\n    return candidates[0];\n  }\n  const contains = candidates.filter(droppable => {\n    const isWithinDroppable = isWithin(getKnownActive(droppable)[axis.start], getKnownActive(droppable)[axis.end]);\n    return isWithinDroppable(pageBorderBoxCenter[axis.line]);\n  });\n  if (contains.length === 1) {\n    return contains[0];\n  }\n  if (contains.length > 1) {\n    return contains.sort((a, b) => getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start])[0];\n  }\n  return candidates.sort((a, b) => {\n    const first = closest$1(pageBorderBoxCenter, getCorners(getKnownActive(a)));\n    const second = closest$1(pageBorderBoxCenter, getCorners(getKnownActive(b)));\n    if (first !== second) {\n      return first - second;\n    }\n    return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];\n  })[0];\n};\nconst getCurrentPageBorderBoxCenter = (draggable, afterCritical) => {\n  const original = draggable.page.borderBox.center;\n  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;\n};\nconst getCurrentPageBorderBox = (draggable, afterCritical) => {\n  const original = draggable.page.borderBox;\n  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;\n};\nvar getClosestDraggable = _ref20 => {\n  let {\n    pageBorderBoxCenter,\n    viewport,\n    destination,\n    insideDestination,\n    afterCritical\n  } = _ref20;\n  const sorted = insideDestination.filter(draggable => isTotallyVisible({\n    target: getCurrentPageBorderBox(draggable, afterCritical),\n    destination,\n    viewport: viewport.frame,\n    withDroppableDisplacement: true\n  })).sort((a, b) => {\n    const distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a, afterCritical)));\n    const distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b, afterCritical)));\n    if (distanceToA < distanceToB) {\n      return -1;\n    }\n    if (distanceToB < distanceToA) {\n      return 1;\n    }\n    return a.descriptor.index - b.descriptor.index;\n  });\n  return sorted[0] || null;\n};\nvar getDisplacedBy = memoizeOne(function getDisplacedBy(axis, displaceBy) {\n  const displacement = displaceBy[axis.line];\n  return {\n    value: displacement,\n    point: patch(axis.line, displacement)\n  };\n});\nconst getRequiredGrowthForPlaceholder = (droppable, placeholderSize, draggables) => {\n  const axis = droppable.axis;\n  if (droppable.descriptor.mode === 'virtual') {\n    return patch(axis.line, placeholderSize[axis.line]);\n  }\n  const availableSpace = droppable.subject.page.contentBox[axis.size];\n  const insideDroppable = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n  const spaceUsed = insideDroppable.reduce((sum, dimension) => sum + dimension.client.marginBox[axis.size], 0);\n  const requiredSpace = spaceUsed + placeholderSize[axis.line];\n  const needsToGrowBy = requiredSpace - availableSpace;\n  if (needsToGrowBy <= 0) {\n    return null;\n  }\n  return patch(axis.line, needsToGrowBy);\n};\nconst withMaxScroll = (frame, max) => _objectSpread(_objectSpread({}, frame), {}, {\n  scroll: _objectSpread(_objectSpread({}, frame.scroll), {}, {\n    max\n  })\n});\nconst addPlaceholder = (droppable, draggable, draggables) => {\n  const frame = droppable.frame;\n  !!isHomeOf(draggable, droppable) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Should not add placeholder space to home list') : invariant(false) : void 0;\n  !!droppable.subject.withPlaceholder ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot add placeholder size to a subject when it already has one') : invariant(false) : void 0;\n  const placeholderSize = getDisplacedBy(droppable.axis, draggable.displaceBy).point;\n  const requiredGrowth = getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables);\n  const added = {\n    placeholderSize,\n    increasedBy: requiredGrowth,\n    oldFrameMaxScroll: droppable.frame ? droppable.frame.scroll.max : null\n  };\n  if (!frame) {\n    const subject = getSubject({\n      page: droppable.subject.page,\n      withPlaceholder: added,\n      axis: droppable.axis,\n      frame: droppable.frame\n    });\n    return _objectSpread(_objectSpread({}, droppable), {}, {\n      subject\n    });\n  }\n  const maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;\n  const newFrame = withMaxScroll(frame, maxScroll);\n  const subject = getSubject({\n    page: droppable.subject.page,\n    withPlaceholder: added,\n    axis: droppable.axis,\n    frame: newFrame\n  });\n  return _objectSpread(_objectSpread({}, droppable), {}, {\n    subject,\n    frame: newFrame\n  });\n};\nconst removePlaceholder = droppable => {\n  const added = droppable.subject.withPlaceholder;\n  !added ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot remove placeholder form subject when there was none') : invariant(false) : void 0;\n  const frame = droppable.frame;\n  if (!frame) {\n    const subject = getSubject({\n      page: droppable.subject.page,\n      axis: droppable.axis,\n      frame: null,\n      withPlaceholder: null\n    });\n    return _objectSpread(_objectSpread({}, droppable), {}, {\n      subject\n    });\n  }\n  const oldMaxScroll = added.oldFrameMaxScroll;\n  !oldMaxScroll ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected droppable with frame to have old max frame scroll when removing placeholder') : invariant(false) : void 0;\n  const newFrame = withMaxScroll(frame, oldMaxScroll);\n  const subject = getSubject({\n    page: droppable.subject.page,\n    axis: droppable.axis,\n    frame: newFrame,\n    withPlaceholder: null\n  });\n  return _objectSpread(_objectSpread({}, droppable), {}, {\n    subject,\n    frame: newFrame\n  });\n};\nvar moveToNewDroppable = _ref21 => {\n  let {\n    previousPageBorderBoxCenter,\n    moveRelativeTo,\n    insideDestination,\n    draggable,\n    draggables,\n    destination,\n    viewport,\n    afterCritical\n  } = _ref21;\n  if (!moveRelativeTo) {\n    if (insideDestination.length) {\n      return null;\n    }\n    const proposed = {\n      displaced: emptyGroups,\n      displacedBy: noDisplacedBy,\n      at: {\n        type: 'REORDER',\n        destination: {\n          droppableId: destination.descriptor.id,\n          index: 0\n        }\n      }\n    };\n    const proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n      impact: proposed,\n      draggable,\n      droppable: destination,\n      draggables,\n      afterCritical\n    });\n    const withPlaceholder = isHomeOf(draggable, destination) ? destination : addPlaceholder(destination, draggable, draggables);\n    const isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n      draggable,\n      destination: withPlaceholder,\n      newPageBorderBoxCenter: proposedPageBorderBoxCenter,\n      viewport: viewport.frame,\n      withDroppableDisplacement: false,\n      onlyOnMainAxis: true\n    });\n    return isVisibleInNewLocation ? proposed : null;\n  }\n  const isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);\n  const proposedIndex = (() => {\n    const relativeTo = moveRelativeTo.descriptor.index;\n    if (moveRelativeTo.descriptor.id === draggable.descriptor.id) {\n      return relativeTo;\n    }\n    if (isGoingBeforeTarget) {\n      return relativeTo;\n    }\n    return relativeTo + 1;\n  })();\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    displacedBy,\n    last: emptyGroups,\n    index: proposedIndex\n  });\n};\nvar moveCrossAxis = _ref22 => {\n  let {\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    isOver,\n    draggables,\n    droppables,\n    viewport,\n    afterCritical\n  } = _ref22;\n  const destination = getBestCrossAxisDroppable({\n    isMovingForward,\n    pageBorderBoxCenter: previousPageBorderBoxCenter,\n    source: isOver,\n    droppables,\n    viewport\n  });\n  if (!destination) {\n    return null;\n  }\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const moveRelativeTo = getClosestDraggable({\n    pageBorderBoxCenter: previousPageBorderBoxCenter,\n    viewport,\n    destination,\n    insideDestination,\n    afterCritical\n  });\n  const impact = moveToNewDroppable({\n    previousPageBorderBoxCenter,\n    destination,\n    draggable,\n    draggables,\n    moveRelativeTo,\n    insideDestination,\n    viewport,\n    afterCritical\n  });\n  if (!impact) {\n    return null;\n  }\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    afterCritical\n  });\n  const clientSelection = getClientFromPageBorderBoxCenter({\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  });\n  return {\n    clientSelection,\n    impact,\n    scrollJumpRequest: null\n  };\n};\nvar whatIsDraggedOver = impact => {\n  const at = impact.at;\n  if (!at) {\n    return null;\n  }\n  if (at.type === 'REORDER') {\n    return at.destination.droppableId;\n  }\n  return at.combine.droppableId;\n};\nconst getDroppableOver$1 = (impact, droppables) => {\n  const id = whatIsDraggedOver(impact);\n  return id ? droppables[id] : null;\n};\nvar moveInDirection = _ref23 => {\n  let {\n    state,\n    type\n  } = _ref23;\n  const isActuallyOver = getDroppableOver$1(state.impact, state.dimensions.droppables);\n  const isMainAxisMovementAllowed = Boolean(isActuallyOver);\n  const home = state.dimensions.droppables[state.critical.droppable.id];\n  const isOver = isActuallyOver || home;\n  const direction = isOver.axis.direction;\n  const isMovingOnMainAxis = direction === 'vertical' && (type === 'MOVE_UP' || type === 'MOVE_DOWN') || direction === 'horizontal' && (type === 'MOVE_LEFT' || type === 'MOVE_RIGHT');\n  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {\n    return null;\n  }\n  const isMovingForward = type === 'MOVE_DOWN' || type === 'MOVE_RIGHT';\n  const draggable = state.dimensions.draggables[state.critical.draggable.id];\n  const previousPageBorderBoxCenter = state.current.page.borderBoxCenter;\n  const {\n    draggables,\n    droppables\n  } = state.dimensions;\n  return isMovingOnMainAxis ? moveToNextPlace({\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    destination: isOver,\n    draggables,\n    viewport: state.viewport,\n    previousClientSelection: state.current.client.selection,\n    previousImpact: state.impact,\n    afterCritical: state.afterCritical\n  }) : moveCrossAxis({\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    isOver,\n    draggables,\n    droppables,\n    viewport: state.viewport,\n    afterCritical: state.afterCritical\n  });\n};\nfunction isMovementAllowed(state) {\n  return state.phase === 'DRAGGING' || state.phase === 'COLLECTING';\n}\nfunction isPositionInFrame(frame) {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return function run(point) {\n    return isWithinVertical(point.y) && isWithinHorizontal(point.x);\n  };\n}\nfunction getHasOverlap(first, second) {\n  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;\n}\nfunction getFurthestAway(_ref24) {\n  let {\n    pageBorderBox,\n    draggable,\n    candidates\n  } = _ref24;\n  const startCenter = draggable.page.borderBox.center;\n  const sorted = candidates.map(candidate => {\n    const axis = candidate.axis;\n    const target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);\n    return {\n      id: candidate.descriptor.id,\n      distance: distance(startCenter, target)\n    };\n  }).sort((a, b) => b.distance - a.distance);\n  return sorted[0] ? sorted[0].id : null;\n}\nfunction getDroppableOver(_ref25) {\n  let {\n    pageBorderBox,\n    draggable,\n    droppables\n  } = _ref25;\n  const candidates = toDroppableList(droppables).filter(item => {\n    if (!item.isEnabled) {\n      return false;\n    }\n    const active = item.subject.active;\n    if (!active) {\n      return false;\n    }\n    if (!getHasOverlap(pageBorderBox, active)) {\n      return false;\n    }\n    if (isPositionInFrame(active)(pageBorderBox.center)) {\n      return true;\n    }\n    const axis = item.axis;\n    const childCenter = active.center[axis.crossAxisLine];\n    const crossAxisStart = pageBorderBox[axis.crossAxisStart];\n    const crossAxisEnd = pageBorderBox[axis.crossAxisEnd];\n    const isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);\n    const isStartContained = isContained(crossAxisStart);\n    const isEndContained = isContained(crossAxisEnd);\n    if (!isStartContained && !isEndContained) {\n      return true;\n    }\n    if (isStartContained) {\n      return crossAxisStart < childCenter;\n    }\n    return crossAxisEnd > childCenter;\n  });\n  if (!candidates.length) {\n    return null;\n  }\n  if (candidates.length === 1) {\n    return candidates[0].descriptor.id;\n  }\n  return getFurthestAway({\n    pageBorderBox,\n    draggable,\n    candidates\n  });\n}\nconst offsetRectByPosition = (rect, point) => getRect(offsetByPosition(rect, point));\nvar withDroppableScroll = (droppable, area) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return area;\n  }\n  return offsetRectByPosition(area, frame.scroll.diff.value);\n};\nfunction getIsDisplaced(_ref26) {\n  let {\n    displaced,\n    id\n  } = _ref26;\n  return Boolean(displaced.visible[id] || displaced.invisible[id]);\n}\nfunction atIndex(_ref27) {\n  let {\n    draggable,\n    closest,\n    inHomeList\n  } = _ref27;\n  if (!closest) {\n    return null;\n  }\n  if (!inHomeList) {\n    return closest.descriptor.index;\n  }\n  if (closest.descriptor.index > draggable.descriptor.index) {\n    return closest.descriptor.index - 1;\n  }\n  return closest.descriptor.index;\n}\nvar getReorderImpact = _ref28 => {\n  let {\n    pageBorderBoxWithDroppableScroll: targetRect,\n    draggable,\n    destination,\n    insideDestination,\n    last,\n    viewport,\n    afterCritical\n  } = _ref28;\n  const axis = destination.axis;\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  const displacement = displacedBy.value;\n  const targetStart = targetRect[axis.start];\n  const targetEnd = targetRect[axis.end];\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const closest = withoutDragging.find(child => {\n    const id = child.descriptor.id;\n    const childCenter = child.page.borderBox.center[axis.line];\n    const didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);\n    const isDisplaced = getIsDisplaced({\n      displaced: last,\n      id\n    });\n    if (didStartAfterCritical$1) {\n      if (isDisplaced) {\n        return targetEnd <= childCenter;\n      }\n      return targetStart < childCenter - displacement;\n    }\n    if (isDisplaced) {\n      return targetEnd <= childCenter + displacement;\n    }\n    return targetStart < childCenter;\n  }) || null;\n  const newIndex = atIndex({\n    draggable,\n    closest,\n    inHomeList: isHomeOf(draggable, destination)\n  });\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    last,\n    displacedBy,\n    index: newIndex\n  });\n};\nconst combineThresholdDivisor = 4;\nvar getCombineImpact = _ref29 => {\n  let {\n    draggable,\n    pageBorderBoxWithDroppableScroll: targetRect,\n    previousImpact,\n    destination,\n    insideDestination,\n    afterCritical\n  } = _ref29;\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const axis = destination.axis;\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  const displacement = displacedBy.value;\n  const targetStart = targetRect[axis.start];\n  const targetEnd = targetRect[axis.end];\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const combineWith = withoutDragging.find(child => {\n    const id = child.descriptor.id;\n    const childRect = child.page.borderBox;\n    const childSize = childRect[axis.size];\n    const threshold = childSize / combineThresholdDivisor;\n    const didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);\n    const isDisplaced = getIsDisplaced({\n      displaced: previousImpact.displaced,\n      id\n    });\n    if (didStartAfterCritical$1) {\n      if (isDisplaced) {\n        return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;\n      }\n      return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;\n    }\n    if (isDisplaced) {\n      return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;\n    }\n    return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;\n  });\n  if (!combineWith) {\n    return null;\n  }\n  const impact = {\n    displacedBy,\n    displaced: previousImpact.displaced,\n    at: {\n      type: 'COMBINE',\n      combine: {\n        draggableId: combineWith.descriptor.id,\n        droppableId: destination.descriptor.id\n      }\n    }\n  };\n  return impact;\n};\nvar getDragImpact = _ref30 => {\n  let {\n    pageOffset,\n    draggable,\n    draggables,\n    droppables,\n    previousImpact,\n    viewport,\n    afterCritical\n  } = _ref30;\n  const pageBorderBox = offsetRectByPosition(draggable.page.borderBox, pageOffset);\n  const destinationId = getDroppableOver({\n    pageBorderBox,\n    draggable,\n    droppables\n  });\n  if (!destinationId) {\n    return noImpact$1;\n  }\n  const destination = droppables[destinationId];\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);\n  return getCombineImpact({\n    pageBorderBoxWithDroppableScroll,\n    draggable,\n    previousImpact,\n    destination,\n    insideDestination,\n    afterCritical\n  }) || getReorderImpact({\n    pageBorderBoxWithDroppableScroll,\n    draggable,\n    destination,\n    insideDestination,\n    last: previousImpact.displaced,\n    viewport,\n    afterCritical\n  });\n};\nvar patchDroppableMap = (droppables, updated) => _objectSpread(_objectSpread({}, droppables), {}, {\n  [updated.descriptor.id]: updated\n});\nconst clearUnusedPlaceholder = _ref31 => {\n  let {\n    previousImpact,\n    impact,\n    droppables\n  } = _ref31;\n  const last = whatIsDraggedOver(previousImpact);\n  const now = whatIsDraggedOver(impact);\n  if (!last) {\n    return droppables;\n  }\n  if (last === now) {\n    return droppables;\n  }\n  const lastDroppable = droppables[last];\n  if (!lastDroppable.subject.withPlaceholder) {\n    return droppables;\n  }\n  const updated = removePlaceholder(lastDroppable);\n  return patchDroppableMap(droppables, updated);\n};\nvar recomputePlaceholders = _ref32 => {\n  let {\n    draggable,\n    draggables,\n    droppables,\n    previousImpact,\n    impact\n  } = _ref32;\n  const cleaned = clearUnusedPlaceholder({\n    previousImpact,\n    impact,\n    droppables\n  });\n  const isOver = whatIsDraggedOver(impact);\n  if (!isOver) {\n    return cleaned;\n  }\n  const droppable = droppables[isOver];\n  if (isHomeOf(draggable, droppable)) {\n    return cleaned;\n  }\n  if (droppable.subject.withPlaceholder) {\n    return cleaned;\n  }\n  const patched = addPlaceholder(droppable, draggable, draggables);\n  return patchDroppableMap(cleaned, patched);\n};\nvar update = _ref33 => {\n  let {\n    state,\n    clientSelection: forcedClientSelection,\n    dimensions: forcedDimensions,\n    viewport: forcedViewport,\n    impact: forcedImpact,\n    scrollJumpRequest\n  } = _ref33;\n  const viewport = forcedViewport || state.viewport;\n  const dimensions = forcedDimensions || state.dimensions;\n  const clientSelection = forcedClientSelection || state.current.client.selection;\n  const offset = subtract(clientSelection, state.initial.client.selection);\n  const client = {\n    offset,\n    selection: clientSelection,\n    borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)\n  };\n  const page = {\n    selection: add(client.selection, viewport.scroll.current),\n    borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),\n    offset: add(client.offset, viewport.scroll.diff.value)\n  };\n  const current = {\n    client,\n    page\n  };\n  if (state.phase === 'COLLECTING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      dimensions,\n      viewport,\n      current\n    });\n  }\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const newImpact = forcedImpact || getDragImpact({\n    pageOffset: page.offset,\n    draggable,\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables,\n    previousImpact: state.impact,\n    viewport,\n    afterCritical: state.afterCritical\n  });\n  const withUpdatedPlaceholders = recomputePlaceholders({\n    draggable,\n    impact: newImpact,\n    previousImpact: state.impact,\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables\n  });\n  const result = _objectSpread(_objectSpread({}, state), {}, {\n    current,\n    dimensions: {\n      draggables: dimensions.draggables,\n      droppables: withUpdatedPlaceholders\n    },\n    impact: newImpact,\n    viewport,\n    scrollJumpRequest: scrollJumpRequest || null,\n    forceShouldAnimate: scrollJumpRequest ? false : null\n  });\n  return result;\n};\nfunction getDraggables(ids, draggables) {\n  return ids.map(id => draggables[id]);\n}\nvar recompute = _ref34 => {\n  let {\n    impact,\n    viewport,\n    draggables,\n    destination,\n    forceShouldAnimate\n  } = _ref34;\n  const last = impact.displaced;\n  const afterDragging = getDraggables(last.all, draggables);\n  const displaced = getDisplacementGroups({\n    afterDragging,\n    destination,\n    displacedBy: impact.displacedBy,\n    viewport: viewport.frame,\n    forceShouldAnimate,\n    last\n  });\n  return _objectSpread(_objectSpread({}, impact), {}, {\n    displaced\n  });\n};\nvar getClientBorderBoxCenter = _ref35 => {\n  let {\n    impact,\n    draggable,\n    droppable,\n    draggables,\n    viewport,\n    afterCritical\n  } = _ref35;\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    draggables,\n    droppable,\n    afterCritical\n  });\n  return getClientFromPageBorderBoxCenter({\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  });\n};\nvar refreshSnap = _ref36 => {\n  let {\n    state,\n    dimensions: forcedDimensions,\n    viewport: forcedViewport\n  } = _ref36;\n  !(state.movementMode === 'SNAP') ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  const needsVisibilityCheck = state.impact;\n  const viewport = forcedViewport || state.viewport;\n  const dimensions = forcedDimensions || state.dimensions;\n  const {\n    draggables,\n    droppables\n  } = dimensions;\n  const draggable = draggables[state.critical.draggable.id];\n  const isOver = whatIsDraggedOver(needsVisibilityCheck);\n  !isOver ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Must be over a destination in SNAP movement mode') : invariant(false) : void 0;\n  const destination = droppables[isOver];\n  const impact = recompute({\n    impact: needsVisibilityCheck,\n    viewport,\n    destination,\n    draggables\n  });\n  const clientSelection = getClientBorderBoxCenter({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    viewport,\n    afterCritical: state.afterCritical\n  });\n  return update({\n    impact,\n    clientSelection,\n    state,\n    dimensions,\n    viewport\n  });\n};\nvar getHomeLocation = descriptor => ({\n  index: descriptor.index,\n  droppableId: descriptor.droppableId\n});\nvar getLiftEffect = _ref37 => {\n  let {\n    draggable,\n    home,\n    draggables,\n    viewport\n  } = _ref37;\n  const displacedBy = getDisplacedBy(home.axis, draggable.displaceBy);\n  const insideHome = getDraggablesInsideDroppable(home.descriptor.id, draggables);\n  const rawIndex = insideHome.indexOf(draggable);\n  !(rawIndex !== -1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected draggable to be inside home list') : invariant(false) : void 0;\n  const afterDragging = insideHome.slice(rawIndex + 1);\n  const effected = afterDragging.reduce((previous, item) => {\n    previous[item.descriptor.id] = true;\n    return previous;\n  }, {});\n  const afterCritical = {\n    inVirtualList: home.descriptor.mode === 'virtual',\n    displacedBy,\n    effected\n  };\n  const displaced = getDisplacementGroups({\n    afterDragging,\n    destination: home,\n    displacedBy,\n    last: null,\n    viewport: viewport.frame,\n    forceShouldAnimate: false\n  });\n  const impact = {\n    displaced,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: getHomeLocation(draggable.descriptor)\n    }\n  };\n  return {\n    impact,\n    afterCritical\n  };\n};\nvar patchDimensionMap = (dimensions, updated) => ({\n  draggables: dimensions.draggables,\n  droppables: patchDroppableMap(dimensions.droppables, updated)\n});\nconst start = key => {\n  if (process.env.NODE_ENV !== 'production') {\n    {\n      return;\n    }\n  }\n};\nconst finish = key => {\n  if (process.env.NODE_ENV !== 'production') {\n    {\n      return;\n    }\n  }\n};\nvar offsetDraggable = _ref38 => {\n  let {\n    draggable,\n    offset: offset$1,\n    initialWindowScroll\n  } = _ref38;\n  const client = offset(draggable.client, offset$1);\n  const page = withScroll(client, initialWindowScroll);\n  const moved = _objectSpread(_objectSpread({}, draggable), {}, {\n    placeholder: _objectSpread(_objectSpread({}, draggable.placeholder), {}, {\n      client\n    }),\n    client,\n    page\n  });\n  return moved;\n};\nvar getFrame = droppable => {\n  const frame = droppable.frame;\n  !frame ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected Droppable to have a frame') : invariant(false) : void 0;\n  return frame;\n};\nvar adjustAdditionsForScrollChanges = _ref39 => {\n  let {\n    additions,\n    updatedDroppables,\n    viewport\n  } = _ref39;\n  const windowScrollChange = viewport.scroll.diff.value;\n  return additions.map(draggable => {\n    const droppableId = draggable.descriptor.droppableId;\n    const modified = updatedDroppables[droppableId];\n    const frame = getFrame(modified);\n    const droppableScrollChange = frame.scroll.diff.value;\n    const totalChange = add(windowScrollChange, droppableScrollChange);\n    const moved = offsetDraggable({\n      draggable,\n      offset: totalChange,\n      initialWindowScroll: viewport.scroll.initial\n    });\n    return moved;\n  });\n};\nconst timingsKey = 'Processing dynamic changes';\nvar publishWhileDraggingInVirtual = _ref40 => {\n  let {\n    state,\n    published\n  } = _ref40;\n  start();\n  const withScrollChange = published.modified.map(update => {\n    const existing = state.dimensions.droppables[update.droppableId];\n    const scrolled = scrollDroppable(existing, update.scroll);\n    return scrolled;\n  });\n  const droppables = _objectSpread(_objectSpread({}, state.dimensions.droppables), toDroppableMap(withScrollChange));\n  const updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({\n    additions: published.additions,\n    updatedDroppables: droppables,\n    viewport: state.viewport\n  }));\n  const draggables = _objectSpread(_objectSpread({}, state.dimensions.draggables), updatedAdditions);\n  published.removals.forEach(id => {\n    delete draggables[id];\n  });\n  const dimensions = {\n    droppables,\n    draggables\n  };\n  const wasOverId = whatIsDraggedOver(state.impact);\n  const wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const home = dimensions.droppables[state.critical.droppable.id];\n  const {\n    impact: onLiftImpact,\n    afterCritical\n  } = getLiftEffect({\n    draggable,\n    home,\n    draggables,\n    viewport: state.viewport\n  });\n  const previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;\n  const impact = getDragImpact({\n    pageOffset: state.current.page.offset,\n    draggable: dimensions.draggables[state.critical.draggable.id],\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables,\n    previousImpact,\n    viewport: state.viewport,\n    afterCritical\n  });\n  finish(timingsKey);\n  const draggingState = _objectSpread(_objectSpread({}, state), {}, {\n    phase: 'DRAGGING',\n    impact,\n    onLiftImpact,\n    dimensions,\n    afterCritical,\n    forceShouldAnimate: false\n  });\n  if (state.phase === 'COLLECTING') {\n    return draggingState;\n  }\n  const dropPending = _objectSpread(_objectSpread({}, draggingState), {}, {\n    phase: 'DROP_PENDING',\n    reason: state.reason,\n    isWaiting: false\n  });\n  return dropPending;\n};\nconst isSnapping = state => state.movementMode === 'SNAP';\nconst postDroppableChange = (state, updated, isEnabledChanging) => {\n  const dimensions = patchDimensionMap(state.dimensions, updated);\n  if (!isSnapping(state) || isEnabledChanging) {\n    return update({\n      state,\n      dimensions\n    });\n  }\n  return refreshSnap({\n    state,\n    dimensions\n  });\n};\nfunction removeScrollJumpRequest(state) {\n  if (state.isDragging && state.movementMode === 'SNAP') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      scrollJumpRequest: null\n    });\n  }\n  return state;\n}\nconst idle$2 = {\n  phase: 'IDLE',\n  completed: null,\n  shouldFlush: false\n};\nvar reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : idle$2;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'FLUSH') {\n    return _objectSpread(_objectSpread({}, idle$2), {}, {\n      shouldFlush: true\n    });\n  }\n  if (action.type === 'INITIAL_PUBLISH') {\n    !(state.phase === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INITIAL_PUBLISH must come after a IDLE phase') : invariant(false) : void 0;\n    const {\n      critical,\n      clientSelection,\n      viewport,\n      dimensions,\n      movementMode\n    } = action.payload;\n    const draggable = dimensions.draggables[critical.draggable.id];\n    const home = dimensions.droppables[critical.droppable.id];\n    const client = {\n      selection: clientSelection,\n      borderBoxCenter: draggable.client.borderBox.center,\n      offset: origin\n    };\n    const initial = {\n      client,\n      page: {\n        selection: add(client.selection, viewport.scroll.initial),\n        borderBoxCenter: add(client.selection, viewport.scroll.initial),\n        offset: add(client.selection, viewport.scroll.diff.value)\n      }\n    };\n    const isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(item => !item.isFixedOnPage);\n    const {\n      impact,\n      afterCritical\n    } = getLiftEffect({\n      draggable,\n      home,\n      draggables: dimensions.draggables,\n      viewport\n    });\n    const result = {\n      phase: 'DRAGGING',\n      isDragging: true,\n      critical,\n      movementMode,\n      dimensions,\n      initial,\n      current: initial,\n      isWindowScrollAllowed,\n      impact,\n      afterCritical,\n      onLiftImpact: impact,\n      viewport,\n      scrollJumpRequest: null,\n      forceShouldAnimate: null\n    };\n    return result;\n  }\n  if (action.type === 'COLLECTION_STARTING') {\n    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Collection cannot start from phase \".concat(state.phase)) : invariant(false) : void 0;\n    const result = _objectSpread(_objectSpread({}, state), {}, {\n      phase: 'COLLECTING'\n    });\n    return result;\n  }\n  if (action.type === 'PUBLISH_WHILE_DRAGGING') {\n    !(state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Unexpected \".concat(action.type, \" received in phase \").concat(state.phase)) : invariant(false) : void 0;\n    return publishWhileDraggingInVirtual({\n      state,\n      published: action.payload\n    });\n  }\n  if (action.type === 'MOVE') {\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"\".concat(action.type, \" not permitted in phase \").concat(state.phase)) : invariant(false) : void 0;\n    const {\n      client: clientSelection\n    } = action.payload;\n    if (isEqual$1(clientSelection, state.current.client.selection)) {\n      return state;\n    }\n    return update({\n      state,\n      clientSelection,\n      impact: isSnapping(state) ? state.impact : null\n    });\n  }\n  if (action.type === 'UPDATE_DROPPABLE_SCROLL') {\n    if (state.phase === 'DROP_PENDING') {\n      return removeScrollJumpRequest(state);\n    }\n    if (state.phase === 'COLLECTING') {\n      return removeScrollJumpRequest(state);\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"\".concat(action.type, \" not permitted in phase \").concat(state.phase)) : invariant(false) : void 0;\n    const {\n      id,\n      newScroll\n    } = action.payload;\n    const target = state.dimensions.droppables[id];\n    if (!target) {\n      return state;\n    }\n    const scrolled = scrollDroppable(target, newScroll);\n    return postDroppableChange(state, scrolled, false);\n  }\n  if (action.type === 'UPDATE_DROPPABLE_IS_ENABLED') {\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Attempting to move in an unsupported phase \".concat(state.phase)) : invariant(false) : void 0;\n    const {\n      id,\n      isEnabled\n    } = action.payload;\n    const target = state.dimensions.droppables[id];\n    !target ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot find Droppable[id: \".concat(id, \"] to toggle its enabled state\")) : invariant(false) : void 0;\n    !(target.isEnabled !== isEnabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Trying to set droppable isEnabled to \".concat(String(isEnabled), \"\\n      but it is already \").concat(String(target.isEnabled))) : invariant(false) : void 0;\n    const updated = _objectSpread(_objectSpread({}, target), {}, {\n      isEnabled\n    });\n    return postDroppableChange(state, updated, true);\n  }\n  if (action.type === 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED') {\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Attempting to move in an unsupported phase \".concat(state.phase)) : invariant(false) : void 0;\n    const {\n      id,\n      isCombineEnabled\n    } = action.payload;\n    const target = state.dimensions.droppables[id];\n    !target ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot find Droppable[id: \".concat(id, \"] to toggle its isCombineEnabled state\")) : invariant(false) : void 0;\n    !(target.isCombineEnabled !== isCombineEnabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Trying to set droppable isCombineEnabled to \".concat(String(isCombineEnabled), \"\\n      but it is already \").concat(String(target.isCombineEnabled))) : invariant(false) : void 0;\n    const updated = _objectSpread(_objectSpread({}, target), {}, {\n      isCombineEnabled\n    });\n    return postDroppableChange(state, updated, true);\n  }\n  if (action.type === 'MOVE_BY_WINDOW_SCROLL') {\n    if (state.phase === 'DROP_PENDING' || state.phase === 'DROP_ANIMATING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot move by window in phase \".concat(state.phase)) : invariant(false) : void 0;\n    !state.isWindowScrollAllowed ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Window scrolling is currently not supported for fixed lists') : invariant(false) : void 0;\n    const newScroll = action.payload.newScroll;\n    if (isEqual$1(state.viewport.scroll.current, newScroll)) {\n      return removeScrollJumpRequest(state);\n    }\n    const viewport = scrollViewport(state.viewport, newScroll);\n    if (isSnapping(state)) {\n      return refreshSnap({\n        state,\n        viewport\n      });\n    }\n    return update({\n      state,\n      viewport\n    });\n  }\n  if (action.type === 'UPDATE_VIEWPORT_MAX_SCROLL') {\n    if (!isMovementAllowed(state)) {\n      return state;\n    }\n    const maxScroll = action.payload.maxScroll;\n    if (isEqual$1(maxScroll, state.viewport.scroll.max)) {\n      return state;\n    }\n    const withMaxScroll = _objectSpread(_objectSpread({}, state.viewport), {}, {\n      scroll: _objectSpread(_objectSpread({}, state.viewport.scroll), {}, {\n        max: maxScroll\n      })\n    });\n    return _objectSpread(_objectSpread({}, state), {}, {\n      viewport: withMaxScroll\n    });\n  }\n  if (action.type === 'MOVE_UP' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_RIGHT') {\n    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"\".concat(action.type, \" received while not in DRAGGING phase\")) : invariant(false) : void 0;\n    const result = moveInDirection({\n      state,\n      type: action.type\n    });\n    if (!result) {\n      return state;\n    }\n    return update({\n      state,\n      impact: result.impact,\n      clientSelection: result.clientSelection,\n      scrollJumpRequest: result.scrollJumpRequest\n    });\n  }\n  if (action.type === 'DROP_PENDING') {\n    const reason = action.payload.reason;\n    !(state.phase === 'COLLECTING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only move into the DROP_PENDING phase from the COLLECTING phase') : invariant(false) : void 0;\n    const newState = _objectSpread(_objectSpread({}, state), {}, {\n      phase: 'DROP_PENDING',\n      isWaiting: true,\n      reason\n    });\n    return newState;\n  }\n  if (action.type === 'DROP_ANIMATE') {\n    const {\n      completed,\n      dropDuration,\n      newHomeClientOffset\n    } = action.payload;\n    !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot animate drop from phase \".concat(state.phase)) : invariant(false) : void 0;\n    const result = {\n      phase: 'DROP_ANIMATING',\n      completed,\n      dropDuration,\n      newHomeClientOffset,\n      dimensions: state.dimensions\n    };\n    return result;\n  }\n  if (action.type === 'DROP_COMPLETE') {\n    const {\n      completed\n    } = action.payload;\n    return {\n      phase: 'IDLE',\n      completed,\n      shouldFlush: false\n    };\n  }\n  return state;\n};\nconst beforeInitialCapture = args => ({\n  type: 'BEFORE_INITIAL_CAPTURE',\n  payload: args\n});\nconst lift$1 = args => ({\n  type: 'LIFT',\n  payload: args\n});\nconst initialPublish = args => ({\n  type: 'INITIAL_PUBLISH',\n  payload: args\n});\nconst publishWhileDragging = args => ({\n  type: 'PUBLISH_WHILE_DRAGGING',\n  payload: args\n});\nconst collectionStarting = () => ({\n  type: 'COLLECTION_STARTING',\n  payload: null\n});\nconst updateDroppableScroll = args => ({\n  type: 'UPDATE_DROPPABLE_SCROLL',\n  payload: args\n});\nconst updateDroppableIsEnabled = args => ({\n  type: 'UPDATE_DROPPABLE_IS_ENABLED',\n  payload: args\n});\nconst updateDroppableIsCombineEnabled = args => ({\n  type: 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED',\n  payload: args\n});\nconst move = args => ({\n  type: 'MOVE',\n  payload: args\n});\nconst moveByWindowScroll = args => ({\n  type: 'MOVE_BY_WINDOW_SCROLL',\n  payload: args\n});\nconst updateViewportMaxScroll = args => ({\n  type: 'UPDATE_VIEWPORT_MAX_SCROLL',\n  payload: args\n});\nconst moveUp = () => ({\n  type: 'MOVE_UP',\n  payload: null\n});\nconst moveDown = () => ({\n  type: 'MOVE_DOWN',\n  payload: null\n});\nconst moveRight = () => ({\n  type: 'MOVE_RIGHT',\n  payload: null\n});\nconst moveLeft = () => ({\n  type: 'MOVE_LEFT',\n  payload: null\n});\nconst flush = () => ({\n  type: 'FLUSH',\n  payload: null\n});\nconst animateDrop = args => ({\n  type: 'DROP_ANIMATE',\n  payload: args\n});\nconst completeDrop = args => ({\n  type: 'DROP_COMPLETE',\n  payload: args\n});\nconst drop$1 = args => ({\n  type: 'DROP',\n  payload: args\n});\nconst dropPending = args => ({\n  type: 'DROP_PENDING',\n  payload: args\n});\nconst dropAnimationFinished = () => ({\n  type: 'DROP_ANIMATION_FINISHED',\n  payload: null\n});\nfunction checkIndexes(insideDestination) {\n  if (insideDestination.length <= 1) {\n    return;\n  }\n  const indexes = insideDestination.map(d => d.descriptor.index);\n  const errors = {};\n  for (let i = 1; i < indexes.length; i++) {\n    const current = indexes[i];\n    const previous = indexes[i - 1];\n    if (current !== previous + 1) {\n      errors[current] = true;\n    }\n  }\n  if (!Object.keys(errors).length) {\n    return;\n  }\n  const formatted = indexes.map(index => {\n    const hasError = Boolean(errors[index]);\n    return hasError ? \"[\\uD83D\\uDD25\".concat(index, \"]\") : \"\".concat(index);\n  }).join(', ');\n  process.env.NODE_ENV !== \"production\" ? warning(\"\\n    Detected non-consecutive <Draggable /> indexes.\\n\\n    (This can cause unexpected bugs)\\n\\n    \".concat(formatted, \"\\n  \")) : void 0;\n}\nfunction validateDimensions(critical, dimensions) {\n  if (process.env.NODE_ENV !== 'production') {\n    const insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);\n    checkIndexes(insideDestination);\n  }\n}\nvar lift = marshal => _ref41 => {\n  let {\n    getState,\n    dispatch\n  } = _ref41;\n  return next => action => {\n    if (action.type !== 'LIFT') {\n      next(action);\n      return;\n    }\n    const {\n      id,\n      clientSelection,\n      movementMode\n    } = action.payload;\n    const initial = getState();\n    if (initial.phase === 'DROP_ANIMATING') {\n      dispatch(completeDrop({\n        completed: initial.completed\n      }));\n    }\n    !(getState().phase === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected phase to start a drag') : invariant(false) : void 0;\n    dispatch(flush());\n    dispatch(beforeInitialCapture({\n      draggableId: id,\n      movementMode\n    }));\n    const scrollOptions = {\n      shouldPublishImmediately: movementMode === 'SNAP'\n    };\n    const request = {\n      draggableId: id,\n      scrollOptions\n    };\n    const {\n      critical,\n      dimensions,\n      viewport\n    } = marshal.startPublishing(request);\n    validateDimensions(critical, dimensions);\n    dispatch(initialPublish({\n      critical,\n      dimensions,\n      clientSelection,\n      movementMode,\n      viewport\n    }));\n  };\n};\nvar style = marshal => () => next => action => {\n  if (action.type === 'INITIAL_PUBLISH') {\n    marshal.dragging();\n  }\n  if (action.type === 'DROP_ANIMATE') {\n    marshal.dropping(action.payload.completed.result.reason);\n  }\n  if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE') {\n    marshal.resting();\n  }\n  next(action);\n};\nconst curves = {\n  outOfTheWay: 'cubic-bezier(0.2, 0, 0, 1)',\n  drop: 'cubic-bezier(.2,1,.1,1)'\n};\nconst combine = {\n  opacity: {\n    drop: 0,\n    combining: 0.7\n  },\n  scale: {\n    drop: 0.75\n  }\n};\nconst timings = {\n  outOfTheWay: 0.2,\n  minDropTime: 0.33,\n  maxDropTime: 0.55\n};\nconst outOfTheWayTiming = \"\".concat(timings.outOfTheWay, \"s \").concat(curves.outOfTheWay);\nconst transitions = {\n  fluid: \"opacity \".concat(outOfTheWayTiming),\n  snap: \"transform \".concat(outOfTheWayTiming, \", opacity \").concat(outOfTheWayTiming),\n  drop: duration => {\n    const timing = \"\".concat(duration, \"s \").concat(curves.drop);\n    return \"transform \".concat(timing, \", opacity \").concat(timing);\n  },\n  outOfTheWay: \"transform \".concat(outOfTheWayTiming),\n  placeholder: \"height \".concat(outOfTheWayTiming, \", width \").concat(outOfTheWayTiming, \", margin \").concat(outOfTheWayTiming)\n};\nconst moveTo = offset => isEqual$1(offset, origin) ? undefined : \"translate(\".concat(offset.x, \"px, \").concat(offset.y, \"px)\");\nconst transforms = {\n  moveTo,\n  drop: (offset, isCombining) => {\n    const translate = moveTo(offset);\n    if (!translate) {\n      return undefined;\n    }\n    if (!isCombining) {\n      return translate;\n    }\n    return \"\".concat(translate, \" scale(\").concat(combine.scale.drop, \")\");\n  }\n};\nconst {\n  minDropTime,\n  maxDropTime\n} = timings;\nconst dropTimeRange = maxDropTime - minDropTime;\nconst maxDropTimeAtDistance = 1500;\nconst cancelDropModifier = 0.6;\nvar getDropDuration = _ref42 => {\n  let {\n    current,\n    destination,\n    reason\n  } = _ref42;\n  const distance$1 = distance(current, destination);\n  if (distance$1 <= 0) {\n    return minDropTime;\n  }\n  if (distance$1 >= maxDropTimeAtDistance) {\n    return maxDropTime;\n  }\n  const percentage = distance$1 / maxDropTimeAtDistance;\n  const duration = minDropTime + dropTimeRange * percentage;\n  const withDuration = reason === 'CANCEL' ? duration * cancelDropModifier : duration;\n  return Number(withDuration.toFixed(2));\n};\nvar getNewHomeClientOffset = _ref43 => {\n  let {\n    impact,\n    draggable,\n    dimensions,\n    viewport,\n    afterCritical\n  } = _ref43;\n  const {\n    draggables,\n    droppables\n  } = dimensions;\n  const droppableId = whatIsDraggedOver(impact);\n  const destination = droppableId ? droppables[droppableId] : null;\n  const home = droppables[draggable.descriptor.droppableId];\n  const newClientCenter = getClientBorderBoxCenter({\n    impact,\n    draggable,\n    draggables,\n    afterCritical,\n    droppable: destination || home,\n    viewport\n  });\n  const offset = subtract(newClientCenter, draggable.client.borderBox.center);\n  return offset;\n};\nvar getDropImpact = _ref44 => {\n  let {\n    draggables,\n    reason,\n    lastImpact,\n    home,\n    viewport,\n    onLiftImpact\n  } = _ref44;\n  if (!lastImpact.at || reason !== 'DROP') {\n    const recomputedHomeImpact = recompute({\n      draggables,\n      impact: onLiftImpact,\n      destination: home,\n      viewport,\n      forceShouldAnimate: true\n    });\n    return {\n      impact: recomputedHomeImpact,\n      didDropInsideDroppable: false\n    };\n  }\n  if (lastImpact.at.type === 'REORDER') {\n    return {\n      impact: lastImpact,\n      didDropInsideDroppable: true\n    };\n  }\n  const withoutMovement = _objectSpread(_objectSpread({}, lastImpact), {}, {\n    displaced: emptyGroups\n  });\n  return {\n    impact: withoutMovement,\n    didDropInsideDroppable: true\n  };\n};\nconst dropMiddleware = _ref45 => {\n  let {\n    getState,\n    dispatch\n  } = _ref45;\n  return next => action => {\n    if (action.type !== 'DROP') {\n      next(action);\n      return;\n    }\n    const state = getState();\n    const reason = action.payload.reason;\n    if (state.phase === 'COLLECTING') {\n      dispatch(dropPending({\n        reason\n      }));\n      return;\n    }\n    if (state.phase === 'IDLE') {\n      return;\n    }\n    const isWaitingForDrop = state.phase === 'DROP_PENDING' && state.isWaiting;\n    !!isWaitingForDrop ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A DROP action occurred while DROP_PENDING and still waiting') : invariant(false) : void 0;\n    !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot drop in phase: \".concat(state.phase)) : invariant(false) : void 0;\n    const critical = state.critical;\n    const dimensions = state.dimensions;\n    const draggable = dimensions.draggables[state.critical.draggable.id];\n    const {\n      impact,\n      didDropInsideDroppable\n    } = getDropImpact({\n      reason,\n      lastImpact: state.impact,\n      afterCritical: state.afterCritical,\n      onLiftImpact: state.onLiftImpact,\n      home: state.dimensions.droppables[state.critical.droppable.id],\n      viewport: state.viewport,\n      draggables: state.dimensions.draggables\n    });\n    const destination = didDropInsideDroppable ? tryGetDestination(impact) : null;\n    const combine = didDropInsideDroppable ? tryGetCombine(impact) : null;\n    const source = {\n      index: critical.draggable.index,\n      droppableId: critical.droppable.id\n    };\n    const result = {\n      draggableId: draggable.descriptor.id,\n      type: draggable.descriptor.type,\n      source,\n      reason,\n      mode: state.movementMode,\n      destination,\n      combine\n    };\n    const newHomeClientOffset = getNewHomeClientOffset({\n      impact,\n      draggable,\n      dimensions,\n      viewport: state.viewport,\n      afterCritical: state.afterCritical\n    });\n    const completed = {\n      critical: state.critical,\n      afterCritical: state.afterCritical,\n      result,\n      impact\n    };\n    const isAnimationRequired = !isEqual$1(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);\n    if (!isAnimationRequired) {\n      dispatch(completeDrop({\n        completed\n      }));\n      return;\n    }\n    const dropDuration = getDropDuration({\n      current: state.current.client.offset,\n      destination: newHomeClientOffset,\n      reason\n    });\n    const args = {\n      newHomeClientOffset,\n      dropDuration,\n      completed\n    };\n    dispatch(animateDrop(args));\n  };\n};\nvar drop = dropMiddleware;\nvar getWindowScroll = () => ({\n  x: window.pageXOffset,\n  y: window.pageYOffset\n});\nfunction getWindowScrollBinding(update) {\n  return {\n    eventName: 'scroll',\n    options: {\n      passive: true,\n      capture: false\n    },\n    fn: event => {\n      if (event.target !== window && event.target !== window.document) {\n        return;\n      }\n      update();\n    }\n  };\n}\nfunction getScrollListener(_ref46) {\n  let {\n    onWindowScroll\n  } = _ref46;\n  function updateScroll() {\n    onWindowScroll(getWindowScroll());\n  }\n  const scheduled = rafSchd(updateScroll);\n  const binding = getWindowScrollBinding(scheduled);\n  let unbind = noop$2;\n  function isActive() {\n    return unbind !== noop$2;\n  }\n  function start() {\n    !!isActive() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot start scroll listener when already active') : invariant(false) : void 0;\n    unbind = bindEvents(window, [binding]);\n  }\n  function stop() {\n    !isActive() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot stop scroll listener when not active') : invariant(false) : void 0;\n    scheduled.cancel();\n    unbind();\n    unbind = noop$2;\n  }\n  return {\n    start,\n    stop,\n    isActive\n  };\n}\nconst shouldEnd = action => action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';\nconst scrollListener = store => {\n  const listener = getScrollListener({\n    onWindowScroll: newScroll => {\n      store.dispatch(moveByWindowScroll({\n        newScroll\n      }));\n    }\n  });\n  return next => action => {\n    if (!listener.isActive() && action.type === 'INITIAL_PUBLISH') {\n      listener.start();\n    }\n    if (listener.isActive() && shouldEnd(action)) {\n      listener.stop();\n    }\n    next(action);\n  };\n};\nvar scrollListener$1 = scrollListener;\nvar getExpiringAnnounce = announce => {\n  let wasCalled = false;\n  let isExpired = false;\n  const timeoutId = setTimeout(() => {\n    isExpired = true;\n  });\n  const result = message => {\n    if (wasCalled) {\n      process.env.NODE_ENV !== \"production\" ? warning('Announcement already made. Not making a second announcement') : void 0;\n      return;\n    }\n    if (isExpired) {\n      process.env.NODE_ENV !== \"production\" ? warning(\"\\n        Announcements cannot be made asynchronously.\\n        Default message has already been announced.\\n      \") : void 0;\n      return;\n    }\n    wasCalled = true;\n    announce(message);\n    clearTimeout(timeoutId);\n  };\n  result.wasCalled = () => wasCalled;\n  return result;\n};\nvar getAsyncMarshal = () => {\n  const entries = [];\n  const execute = timerId => {\n    const index = entries.findIndex(item => item.timerId === timerId);\n    !(index !== -1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find timer') : invariant(false) : void 0;\n    const [entry] = entries.splice(index, 1);\n    entry.callback();\n  };\n  const add = fn => {\n    const timerId = setTimeout(() => execute(timerId));\n    const entry = {\n      timerId,\n      callback: fn\n    };\n    entries.push(entry);\n  };\n  const flush = () => {\n    if (!entries.length) {\n      return;\n    }\n    const shallow = [...entries];\n    entries.length = 0;\n    shallow.forEach(entry => {\n      clearTimeout(entry.timerId);\n      entry.callback();\n    });\n  };\n  return {\n    add,\n    flush\n  };\n};\nconst areLocationsEqual = (first, second) => {\n  if (first == null && second == null) {\n    return true;\n  }\n  if (first == null || second == null) {\n    return false;\n  }\n  return first.droppableId === second.droppableId && first.index === second.index;\n};\nconst isCombineEqual = (first, second) => {\n  if (first == null && second == null) {\n    return true;\n  }\n  if (first == null || second == null) {\n    return false;\n  }\n  return first.draggableId === second.draggableId && first.droppableId === second.droppableId;\n};\nconst isCriticalEqual = (first, second) => {\n  if (first === second) {\n    return true;\n  }\n  const isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;\n  const isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;\n  return isDraggableEqual && isDroppableEqual;\n};\nconst withTimings = (key, fn) => {\n  start();\n  fn();\n  finish();\n};\nconst getDragStart = (critical, mode) => ({\n  draggableId: critical.draggable.id,\n  type: critical.droppable.type,\n  source: {\n    droppableId: critical.droppable.id,\n    index: critical.draggable.index\n  },\n  mode\n});\nfunction execute(responder, data, announce, getDefaultMessage) {\n  if (!responder) {\n    announce(getDefaultMessage(data));\n    return;\n  }\n  const willExpire = getExpiringAnnounce(announce);\n  const provided = {\n    announce: willExpire\n  };\n  responder(data, provided);\n  if (!willExpire.wasCalled()) {\n    announce(getDefaultMessage(data));\n  }\n}\nvar getPublisher = (getResponders, announce) => {\n  const asyncMarshal = getAsyncMarshal();\n  let dragging = null;\n  const beforeCapture = (draggableId, mode) => {\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onBeforeCapture as a drag start has already been published') : invariant(false) : void 0;\n    withTimings('onBeforeCapture', () => {\n      const fn = getResponders().onBeforeCapture;\n      if (fn) {\n        const before = {\n          draggableId,\n          mode\n        };\n        fn(before);\n      }\n    });\n  };\n  const beforeStart = (critical, mode) => {\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;\n    withTimings('onBeforeDragStart', () => {\n      const fn = getResponders().onBeforeDragStart;\n      if (fn) {\n        fn(getDragStart(critical, mode));\n      }\n    });\n  };\n  const start = (critical, mode) => {\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;\n    const data = getDragStart(critical, mode);\n    dragging = {\n      mode,\n      lastCritical: critical,\n      lastLocation: data.source,\n      lastCombine: null\n    };\n    asyncMarshal.add(() => {\n      withTimings('onDragStart', () => execute(getResponders().onDragStart, data, announce, preset$1.onDragStart));\n    });\n  };\n  const update = (critical, impact) => {\n    const location = tryGetDestination(impact);\n    const combine = tryGetCombine(impact);\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onDragMove when onDragStart has not been called') : invariant(false) : void 0;\n    const hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);\n    if (hasCriticalChanged) {\n      dragging.lastCritical = critical;\n    }\n    const hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);\n    if (hasLocationChanged) {\n      dragging.lastLocation = location;\n    }\n    const hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine);\n    if (hasGroupingChanged) {\n      dragging.lastCombine = combine;\n    }\n    if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {\n      return;\n    }\n    const data = _objectSpread(_objectSpread({}, getDragStart(critical, dragging.mode)), {}, {\n      combine,\n      destination: location\n    });\n    asyncMarshal.add(() => {\n      withTimings('onDragUpdate', () => execute(getResponders().onDragUpdate, data, announce, preset$1.onDragUpdate));\n    });\n  };\n  const flush = () => {\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only flush responders while dragging') : invariant(false) : void 0;\n    asyncMarshal.flush();\n  };\n  const drop = result => {\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onDragEnd when there is no matching onDragStart') : invariant(false) : void 0;\n    dragging = null;\n    withTimings('onDragEnd', () => execute(getResponders().onDragEnd, result, announce, preset$1.onDragEnd));\n  };\n  const abort = () => {\n    if (!dragging) {\n      return;\n    }\n    const result = _objectSpread(_objectSpread({}, getDragStart(dragging.lastCritical, dragging.mode)), {}, {\n      combine: null,\n      destination: null,\n      reason: 'CANCEL'\n    });\n    drop(result);\n  };\n  return {\n    beforeCapture,\n    beforeStart,\n    start,\n    update,\n    flush,\n    drop,\n    abort\n  };\n};\nvar responders = (getResponders, announce) => {\n  const publisher = getPublisher(getResponders, announce);\n  return store => next => action => {\n    if (action.type === 'BEFORE_INITIAL_CAPTURE') {\n      publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);\n      return;\n    }\n    if (action.type === 'INITIAL_PUBLISH') {\n      const critical = action.payload.critical;\n      publisher.beforeStart(critical, action.payload.movementMode);\n      next(action);\n      publisher.start(critical, action.payload.movementMode);\n      return;\n    }\n    if (action.type === 'DROP_COMPLETE') {\n      const result = action.payload.completed.result;\n      publisher.flush();\n      next(action);\n      publisher.drop(result);\n      return;\n    }\n    next(action);\n    if (action.type === 'FLUSH') {\n      publisher.abort();\n      return;\n    }\n    const state = store.getState();\n    if (state.phase === 'DRAGGING') {\n      publisher.update(state.critical, state.impact);\n    }\n  };\n};\nconst dropAnimationFinishMiddleware = store => next => action => {\n  if (action.type !== 'DROP_ANIMATION_FINISHED') {\n    next(action);\n    return;\n  }\n  const state = store.getState();\n  !(state.phase === 'DROP_ANIMATING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot finish a drop animating when no drop is occurring') : invariant(false) : void 0;\n  store.dispatch(completeDrop({\n    completed: state.completed\n  }));\n};\nvar dropAnimationFinish = dropAnimationFinishMiddleware;\nconst dropAnimationFlushOnScrollMiddleware = store => {\n  let unbind = null;\n  let frameId = null;\n  function clear() {\n    if (frameId) {\n      cancelAnimationFrame(frameId);\n      frameId = null;\n    }\n    if (unbind) {\n      unbind();\n      unbind = null;\n    }\n  }\n  return next => action => {\n    if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATION_FINISHED') {\n      clear();\n    }\n    next(action);\n    if (action.type !== 'DROP_ANIMATE') {\n      return;\n    }\n    const binding = {\n      eventName: 'scroll',\n      options: {\n        capture: true,\n        passive: false,\n        once: true\n      },\n      fn: function flushDropAnimation() {\n        const state = store.getState();\n        if (state.phase === 'DROP_ANIMATING') {\n          store.dispatch(dropAnimationFinished());\n        }\n      }\n    };\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      unbind = bindEvents(window, [binding]);\n    });\n  };\n};\nvar dropAnimationFlushOnScroll = dropAnimationFlushOnScrollMiddleware;\nvar dimensionMarshalStopper = marshal => () => next => action => {\n  if (action.type === 'DROP_COMPLETE' || action.type === 'FLUSH' || action.type === 'DROP_ANIMATE') {\n    marshal.stopPublishing();\n  }\n  next(action);\n};\nvar focus = marshal => {\n  let isWatching = false;\n  return () => next => action => {\n    if (action.type === 'INITIAL_PUBLISH') {\n      isWatching = true;\n      marshal.tryRecordFocus(action.payload.critical.draggable.id);\n      next(action);\n      marshal.tryRestoreFocusRecorded();\n      return;\n    }\n    next(action);\n    if (!isWatching) {\n      return;\n    }\n    if (action.type === 'FLUSH') {\n      isWatching = false;\n      marshal.tryRestoreFocusRecorded();\n      return;\n    }\n    if (action.type === 'DROP_COMPLETE') {\n      isWatching = false;\n      const result = action.payload.completed.result;\n      if (result.combine) {\n        marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);\n      }\n      marshal.tryRestoreFocusRecorded();\n    }\n  };\n};\nconst shouldStop = action => action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';\nvar autoScroll = autoScroller => store => next => action => {\n  if (shouldStop(action)) {\n    autoScroller.stop();\n    next(action);\n    return;\n  }\n  if (action.type === 'INITIAL_PUBLISH') {\n    next(action);\n    const state = store.getState();\n    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected phase to be DRAGGING after INITIAL_PUBLISH') : invariant(false) : void 0;\n    autoScroller.start(state);\n    return;\n  }\n  next(action);\n  autoScroller.scroll(store.getState());\n};\nconst pendingDrop = store => next => action => {\n  next(action);\n  if (action.type !== 'PUBLISH_WHILE_DRAGGING') {\n    return;\n  }\n  const postActionState = store.getState();\n  if (postActionState.phase !== 'DROP_PENDING') {\n    return;\n  }\n  if (postActionState.isWaiting) {\n    return;\n  }\n  store.dispatch(drop$1({\n    reason: postActionState.reason\n  }));\n};\nvar pendingDrop$1 = pendingDrop;\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  name: '@hello-pangea/dnd'\n}) : compose;\nvar createStore = _ref47 => {\n  let {\n    dimensionMarshal,\n    focusMarshal,\n    styleMarshal,\n    getResponders,\n    announce,\n    autoScroller\n  } = _ref47;\n  return createStore$1(reducer, composeEnhancers(applyMiddleware(style(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift(dimensionMarshal), drop, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop$1, autoScroll(autoScroller), scrollListener$1, focus(focusMarshal), responders(getResponders, announce))));\n};\nconst clean$1 = () => ({\n  additions: {},\n  removals: {},\n  modified: {}\n});\nfunction createPublisher(_ref48) {\n  let {\n    registry,\n    callbacks\n  } = _ref48;\n  let staging = clean$1();\n  let frameId = null;\n  const collect = () => {\n    if (frameId) {\n      return;\n    }\n    callbacks.collectionStarting();\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      start();\n      const {\n        additions,\n        removals,\n        modified\n      } = staging;\n      const added = Object.keys(additions).map(id => registry.draggable.getById(id).getDimension(origin)).sort((a, b) => a.descriptor.index - b.descriptor.index);\n      const updated = Object.keys(modified).map(id => {\n        const entry = registry.droppable.getById(id);\n        const scroll = entry.callbacks.getScrollWhileDragging();\n        return {\n          droppableId: id,\n          scroll\n        };\n      });\n      const result = {\n        additions: added,\n        removals: Object.keys(removals),\n        modified: updated\n      };\n      staging = clean$1();\n      finish();\n      callbacks.publish(result);\n    });\n  };\n  const add = entry => {\n    const id = entry.descriptor.id;\n    staging.additions[id] = entry;\n    staging.modified[entry.descriptor.droppableId] = true;\n    if (staging.removals[id]) {\n      delete staging.removals[id];\n    }\n    collect();\n  };\n  const remove = entry => {\n    const descriptor = entry.descriptor;\n    staging.removals[descriptor.id] = true;\n    staging.modified[descriptor.droppableId] = true;\n    if (staging.additions[descriptor.id]) {\n      delete staging.additions[descriptor.id];\n    }\n    collect();\n  };\n  const stop = () => {\n    if (!frameId) {\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    frameId = null;\n    staging = clean$1();\n  };\n  return {\n    add,\n    remove,\n    stop\n  };\n}\nvar getMaxScroll = _ref49 => {\n  let {\n    scrollHeight,\n    scrollWidth,\n    height,\n    width\n  } = _ref49;\n  const maxScroll = subtract({\n    x: scrollWidth,\n    y: scrollHeight\n  }, {\n    x: width,\n    y: height\n  });\n  const adjustedMaxScroll = {\n    x: Math.max(0, maxScroll.x),\n    y: Math.max(0, maxScroll.y)\n  };\n  return adjustedMaxScroll;\n};\nvar getDocumentElement = () => {\n  const doc = document.documentElement;\n  !doc ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot find document.documentElement') : invariant(false) : void 0;\n  return doc;\n};\nvar getMaxWindowScroll = () => {\n  const doc = getDocumentElement();\n  const maxScroll = getMaxScroll({\n    scrollHeight: doc.scrollHeight,\n    scrollWidth: doc.scrollWidth,\n    width: doc.clientWidth,\n    height: doc.clientHeight\n  });\n  return maxScroll;\n};\nvar getViewport = () => {\n  const scroll = getWindowScroll();\n  const maxScroll = getMaxWindowScroll();\n  const top = scroll.y;\n  const left = scroll.x;\n  const doc = getDocumentElement();\n  const width = doc.clientWidth;\n  const height = doc.clientHeight;\n  const right = left + width;\n  const bottom = top + height;\n  const frame = getRect({\n    top,\n    left,\n    right,\n    bottom\n  });\n  const viewport = {\n    frame,\n    scroll: {\n      initial: scroll,\n      current: scroll,\n      max: maxScroll,\n      diff: {\n        value: origin,\n        displacement: origin\n      }\n    }\n  };\n  return viewport;\n};\nvar getInitialPublish = _ref50 => {\n  let {\n    critical,\n    scrollOptions,\n    registry\n  } = _ref50;\n  start();\n  const viewport = getViewport();\n  const windowScroll = viewport.scroll.current;\n  const home = critical.droppable;\n  const droppables = registry.droppable.getAllByType(home.type).map(entry => entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions));\n  const draggables = registry.draggable.getAllByType(critical.draggable.type).map(entry => entry.getDimension(windowScroll));\n  const dimensions = {\n    draggables: toDraggableMap(draggables),\n    droppables: toDroppableMap(droppables)\n  };\n  finish();\n  const result = {\n    dimensions,\n    critical,\n    viewport\n  };\n  return result;\n};\nfunction shouldPublishUpdate(registry, dragging, entry) {\n  if (entry.descriptor.id === dragging.id) {\n    return false;\n  }\n  if (entry.descriptor.type !== dragging.type) {\n    return false;\n  }\n  const home = registry.droppable.getById(entry.descriptor.droppableId);\n  if (home.descriptor.mode !== 'virtual') {\n    process.env.NODE_ENV !== \"production\" ? warning(\"\\n      You are attempting to add or remove a Draggable [id: \".concat(entry.descriptor.id, \"]\\n      while a drag is occurring. This is only supported for virtual lists.\\n\\n      See https://github.com/hello-pangea/dnd/blob/main/docs/patterns/virtual-lists.md\\n    \")) : void 0;\n    return false;\n  }\n  return true;\n}\nvar createDimensionMarshal = (registry, callbacks) => {\n  let collection = null;\n  const publisher = createPublisher({\n    callbacks: {\n      publish: callbacks.publishWhileDragging,\n      collectionStarting: callbacks.collectionStarting\n    },\n    registry\n  });\n  const updateDroppableIsEnabled = (id, isEnabled) => {\n    !registry.droppable.exists(id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot update is enabled flag of Droppable \".concat(id, \" as it is not registered\")) : invariant(false) : void 0;\n    if (!collection) {\n      return;\n    }\n    callbacks.updateDroppableIsEnabled({\n      id,\n      isEnabled\n    });\n  };\n  const updateDroppableIsCombineEnabled = (id, isCombineEnabled) => {\n    if (!collection) {\n      return;\n    }\n    !registry.droppable.exists(id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot update isCombineEnabled flag of Droppable \".concat(id, \" as it is not registered\")) : invariant(false) : void 0;\n    callbacks.updateDroppableIsCombineEnabled({\n      id,\n      isCombineEnabled\n    });\n  };\n  const updateDroppableScroll = (id, newScroll) => {\n    if (!collection) {\n      return;\n    }\n    !registry.droppable.exists(id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot update the scroll on Droppable \".concat(id, \" as it is not registered\")) : invariant(false) : void 0;\n    callbacks.updateDroppableScroll({\n      id,\n      newScroll\n    });\n  };\n  const scrollDroppable = (id, change) => {\n    if (!collection) {\n      return;\n    }\n    registry.droppable.getById(id).callbacks.scroll(change);\n  };\n  const stopPublishing = () => {\n    if (!collection) {\n      return;\n    }\n    publisher.stop();\n    const home = collection.critical.droppable;\n    registry.droppable.getAllByType(home.type).forEach(entry => entry.callbacks.dragStopped());\n    collection.unsubscribe();\n    collection = null;\n  };\n  const subscriber = event => {\n    !collection ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Should only be subscribed when a collection is occurring') : invariant(false) : void 0;\n    const dragging = collection.critical.draggable;\n    if (event.type === 'ADDITION') {\n      if (shouldPublishUpdate(registry, dragging, event.value)) {\n        publisher.add(event.value);\n      }\n    }\n    if (event.type === 'REMOVAL') {\n      if (shouldPublishUpdate(registry, dragging, event.value)) {\n        publisher.remove(event.value);\n      }\n    }\n  };\n  const startPublishing = request => {\n    !!collection ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot start capturing critical dimensions as there is already a collection') : invariant(false) : void 0;\n    const entry = registry.draggable.getById(request.draggableId);\n    const home = registry.droppable.getById(entry.descriptor.droppableId);\n    const critical = {\n      draggable: entry.descriptor,\n      droppable: home.descriptor\n    };\n    const unsubscribe = registry.subscribe(subscriber);\n    collection = {\n      critical,\n      unsubscribe\n    };\n    return getInitialPublish({\n      critical,\n      registry,\n      scrollOptions: request.scrollOptions\n    });\n  };\n  const marshal = {\n    updateDroppableIsEnabled,\n    updateDroppableIsCombineEnabled,\n    scrollDroppable,\n    updateDroppableScroll,\n    startPublishing,\n    stopPublishing\n  };\n  return marshal;\n};\nvar canStartDrag = (state, id) => {\n  if (state.phase === 'IDLE') {\n    return true;\n  }\n  if (state.phase !== 'DROP_ANIMATING') {\n    return false;\n  }\n  if (state.completed.result.draggableId === id) {\n    return false;\n  }\n  return state.completed.result.reason === 'DROP';\n};\nvar scrollWindow = change => {\n  window.scrollBy(change.x, change.y);\n};\nconst getScrollableDroppables = memoizeOne(droppables => toDroppableList(droppables).filter(droppable => {\n  if (!droppable.isEnabled) {\n    return false;\n  }\n  if (!droppable.frame) {\n    return false;\n  }\n  return true;\n}));\nconst getScrollableDroppableOver = (target, droppables) => {\n  const maybe = getScrollableDroppables(droppables).find(droppable => {\n    !droppable.frame ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid result') : invariant(false) : void 0;\n    return isPositionInFrame(droppable.frame.pageMarginBox)(target);\n  }) || null;\n  return maybe;\n};\nvar getBestScrollableDroppable = _ref51 => {\n  let {\n    center,\n    destination,\n    droppables\n  } = _ref51;\n  if (destination) {\n    const dimension = droppables[destination];\n    if (!dimension.frame) {\n      return null;\n    }\n    return dimension;\n  }\n  const dimension = getScrollableDroppableOver(center, droppables);\n  return dimension;\n};\nconst defaultAutoScrollerOptions = {\n  startFromPercentage: 0.25,\n  maxScrollAtPercentage: 0.05,\n  maxPixelScroll: 28,\n  ease: percentage => percentage ** 2,\n  durationDampening: {\n    stopDampeningAt: 1200,\n    accelerateAt: 360\n  },\n  disabled: false\n};\nvar getDistanceThresholds = function (container, axis) {\n  let getAutoScrollerOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => defaultAutoScrollerOptions;\n  const autoScrollerOptions = getAutoScrollerOptions();\n  const startScrollingFrom = container[axis.size] * autoScrollerOptions.startFromPercentage;\n  const maxScrollValueAt = container[axis.size] * autoScrollerOptions.maxScrollAtPercentage;\n  const thresholds = {\n    startScrollingFrom,\n    maxScrollValueAt\n  };\n  return thresholds;\n};\nvar getPercentage = _ref52 => {\n  let {\n    startOfRange,\n    endOfRange,\n    current\n  } = _ref52;\n  const range = endOfRange - startOfRange;\n  if (range === 0) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"\\n      Detected distance range of 0 in the fluid auto scroller\\n      This is unexpected and would cause a divide by 0 issue.\\n      Not allowing an auto scroll\\n    \") : void 0;\n    return 0;\n  }\n  const currentInRange = current - startOfRange;\n  const percentage = currentInRange / range;\n  return percentage;\n};\nvar minScroll = 1;\nvar getValueFromDistance = function (distanceToEdge, thresholds) {\n  let getAutoScrollerOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => defaultAutoScrollerOptions;\n  const autoScrollerOptions = getAutoScrollerOptions();\n  if (distanceToEdge > thresholds.startScrollingFrom) {\n    return 0;\n  }\n  if (distanceToEdge <= thresholds.maxScrollValueAt) {\n    return autoScrollerOptions.maxPixelScroll;\n  }\n  if (distanceToEdge === thresholds.startScrollingFrom) {\n    return minScroll;\n  }\n  const percentageFromMaxScrollValueAt = getPercentage({\n    startOfRange: thresholds.maxScrollValueAt,\n    endOfRange: thresholds.startScrollingFrom,\n    current: distanceToEdge\n  });\n  const percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;\n  const scroll = autoScrollerOptions.maxPixelScroll * autoScrollerOptions.ease(percentageFromStartScrollingFrom);\n  return Math.ceil(scroll);\n};\nvar dampenValueByTime = (proposedScroll, dragStartTime, getAutoScrollerOptions) => {\n  const autoScrollerOptions = getAutoScrollerOptions();\n  const accelerateAt = autoScrollerOptions.durationDampening.accelerateAt;\n  const stopAt = autoScrollerOptions.durationDampening.stopDampeningAt;\n  const startOfRange = dragStartTime;\n  const endOfRange = stopAt;\n  const now = Date.now();\n  const runTime = now - startOfRange;\n  if (runTime >= stopAt) {\n    return proposedScroll;\n  }\n  if (runTime < accelerateAt) {\n    return minScroll;\n  }\n  const betweenAccelerateAtAndStopAtPercentage = getPercentage({\n    startOfRange: accelerateAt,\n    endOfRange,\n    current: runTime\n  });\n  const scroll = proposedScroll * autoScrollerOptions.ease(betweenAccelerateAtAndStopAtPercentage);\n  return Math.ceil(scroll);\n};\nvar getValue = _ref53 => {\n  let {\n    distanceToEdge,\n    thresholds,\n    dragStartTime,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  } = _ref53;\n  const scroll = getValueFromDistance(distanceToEdge, thresholds, getAutoScrollerOptions);\n  if (scroll === 0) {\n    return 0;\n  }\n  if (!shouldUseTimeDampening) {\n    return scroll;\n  }\n  return Math.max(dampenValueByTime(scroll, dragStartTime, getAutoScrollerOptions), minScroll);\n};\nvar getScrollOnAxis = _ref54 => {\n  let {\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  } = _ref54;\n  const thresholds = getDistanceThresholds(container, axis, getAutoScrollerOptions);\n  const isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];\n  if (isCloserToEnd) {\n    return getValue({\n      distanceToEdge: distanceToEdges[axis.end],\n      thresholds,\n      dragStartTime,\n      shouldUseTimeDampening,\n      getAutoScrollerOptions\n    });\n  }\n  return -1 * getValue({\n    distanceToEdge: distanceToEdges[axis.start],\n    thresholds,\n    dragStartTime,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n};\nvar adjustForSizeLimits = _ref55 => {\n  let {\n    container,\n    subject,\n    proposedScroll\n  } = _ref55;\n  const isTooBigVertically = subject.height > container.height;\n  const isTooBigHorizontally = subject.width > container.width;\n  if (!isTooBigHorizontally && !isTooBigVertically) {\n    return proposedScroll;\n  }\n  if (isTooBigHorizontally && isTooBigVertically) {\n    return null;\n  }\n  return {\n    x: isTooBigHorizontally ? 0 : proposedScroll.x,\n    y: isTooBigVertically ? 0 : proposedScroll.y\n  };\n};\nconst clean = apply(value => value === 0 ? 0 : value);\nvar getScroll$1 = _ref56 => {\n  let {\n    dragStartTime,\n    container,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  } = _ref56;\n  const distanceToEdges = {\n    top: center.y - container.top,\n    right: container.right - center.x,\n    bottom: container.bottom - center.y,\n    left: center.x - container.left\n  };\n  const y = getScrollOnAxis({\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis: vertical,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  const x = getScrollOnAxis({\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis: horizontal,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  const required = clean({\n    x,\n    y\n  });\n  if (isEqual$1(required, origin)) {\n    return null;\n  }\n  const limited = adjustForSizeLimits({\n    container,\n    subject,\n    proposedScroll: required\n  });\n  if (!limited) {\n    return null;\n  }\n  return isEqual$1(limited, origin) ? null : limited;\n};\nconst smallestSigned = apply(value => {\n  if (value === 0) {\n    return 0;\n  }\n  return value > 0 ? 1 : -1;\n});\nconst getOverlap = (() => {\n  const getRemainder = (target, max) => {\n    if (target < 0) {\n      return target;\n    }\n    if (target > max) {\n      return target - max;\n    }\n    return 0;\n  };\n  return _ref57 => {\n    let {\n      current,\n      max,\n      change\n    } = _ref57;\n    const targetScroll = add(current, change);\n    const overlap = {\n      x: getRemainder(targetScroll.x, max.x),\n      y: getRemainder(targetScroll.y, max.y)\n    };\n    if (isEqual$1(overlap, origin)) {\n      return null;\n    }\n    return overlap;\n  };\n})();\nconst canPartiallyScroll = _ref58 => {\n  let {\n    max: rawMax,\n    current,\n    change\n  } = _ref58;\n  const max = {\n    x: Math.max(current.x, rawMax.x),\n    y: Math.max(current.y, rawMax.y)\n  };\n  const smallestChange = smallestSigned(change);\n  const overlap = getOverlap({\n    max,\n    current,\n    change: smallestChange\n  });\n  if (!overlap) {\n    return true;\n  }\n  if (smallestChange.x !== 0 && overlap.x === 0) {\n    return true;\n  }\n  if (smallestChange.y !== 0 && overlap.y === 0) {\n    return true;\n  }\n  return false;\n};\nconst canScrollWindow = (viewport, change) => canPartiallyScroll({\n  current: viewport.scroll.current,\n  max: viewport.scroll.max,\n  change\n});\nconst getWindowOverlap = (viewport, change) => {\n  if (!canScrollWindow(viewport, change)) {\n    return null;\n  }\n  const max = viewport.scroll.max;\n  const current = viewport.scroll.current;\n  return getOverlap({\n    current,\n    max,\n    change\n  });\n};\nconst canScrollDroppable = (droppable, change) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return false;\n  }\n  return canPartiallyScroll({\n    current: frame.scroll.current,\n    max: frame.scroll.max,\n    change\n  });\n};\nconst getDroppableOverlap = (droppable, change) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return null;\n  }\n  if (!canScrollDroppable(droppable, change)) {\n    return null;\n  }\n  return getOverlap({\n    current: frame.scroll.current,\n    max: frame.scroll.max,\n    change\n  });\n};\nvar getWindowScrollChange = _ref59 => {\n  let {\n    viewport,\n    subject,\n    center,\n    dragStartTime,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  } = _ref59;\n  const scroll = getScroll$1({\n    dragStartTime,\n    container: viewport.frame,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  return scroll && canScrollWindow(viewport, scroll) ? scroll : null;\n};\nvar getDroppableScrollChange = _ref60 => {\n  let {\n    droppable,\n    subject,\n    center,\n    dragStartTime,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  } = _ref60;\n  const frame = droppable.frame;\n  if (!frame) {\n    return null;\n  }\n  const scroll = getScroll$1({\n    dragStartTime,\n    container: frame.pageMarginBox,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  return scroll && canScrollDroppable(droppable, scroll) ? scroll : null;\n};\nvar scroll = _ref61 => {\n  let {\n    state,\n    dragStartTime,\n    shouldUseTimeDampening,\n    scrollWindow,\n    scrollDroppable,\n    getAutoScrollerOptions\n  } = _ref61;\n  const center = state.current.page.borderBoxCenter;\n  const draggable = state.dimensions.draggables[state.critical.draggable.id];\n  const subject = draggable.page.marginBox;\n  if (state.isWindowScrollAllowed) {\n    const viewport = state.viewport;\n    const change = getWindowScrollChange({\n      dragStartTime,\n      viewport,\n      subject,\n      center,\n      shouldUseTimeDampening,\n      getAutoScrollerOptions\n    });\n    if (change) {\n      scrollWindow(change);\n      return;\n    }\n  }\n  const droppable = getBestScrollableDroppable({\n    center,\n    destination: whatIsDraggedOver(state.impact),\n    droppables: state.dimensions.droppables\n  });\n  if (!droppable) {\n    return;\n  }\n  const change = getDroppableScrollChange({\n    dragStartTime,\n    droppable,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  if (change) {\n    scrollDroppable(droppable.descriptor.id, change);\n  }\n};\nvar createFluidScroller = _ref62 => {\n  let {\n    scrollWindow,\n    scrollDroppable,\n    getAutoScrollerOptions = () => defaultAutoScrollerOptions\n  } = _ref62;\n  const scheduleWindowScroll = rafSchd(scrollWindow);\n  const scheduleDroppableScroll = rafSchd(scrollDroppable);\n  let dragging = null;\n  const tryScroll = state => {\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fluid scroll if not dragging') : invariant(false) : void 0;\n    const {\n      shouldUseTimeDampening,\n      dragStartTime\n    } = dragging;\n    scroll({\n      state,\n      scrollWindow: scheduleWindowScroll,\n      scrollDroppable: scheduleDroppableScroll,\n      dragStartTime,\n      shouldUseTimeDampening,\n      getAutoScrollerOptions\n    });\n  };\n  const start$1 = state => {\n    start();\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot start auto scrolling when already started') : invariant(false) : void 0;\n    const dragStartTime = Date.now();\n    let wasScrollNeeded = false;\n    const fakeScrollCallback = () => {\n      wasScrollNeeded = true;\n    };\n    scroll({\n      state,\n      dragStartTime: 0,\n      shouldUseTimeDampening: false,\n      scrollWindow: fakeScrollCallback,\n      scrollDroppable: fakeScrollCallback,\n      getAutoScrollerOptions\n    });\n    dragging = {\n      dragStartTime,\n      shouldUseTimeDampening: wasScrollNeeded\n    };\n    finish();\n    if (wasScrollNeeded) {\n      tryScroll(state);\n    }\n  };\n  const stop = () => {\n    if (!dragging) {\n      return;\n    }\n    scheduleWindowScroll.cancel();\n    scheduleDroppableScroll.cancel();\n    dragging = null;\n  };\n  return {\n    start: start$1,\n    stop,\n    scroll: tryScroll\n  };\n};\nvar createJumpScroller = _ref63 => {\n  let {\n    move,\n    scrollDroppable,\n    scrollWindow\n  } = _ref63;\n  const moveByOffset = (state, offset) => {\n    const client = add(state.current.client.selection, offset);\n    move({\n      client\n    });\n  };\n  const scrollDroppableAsMuchAsItCan = (droppable, change) => {\n    if (!canScrollDroppable(droppable, change)) {\n      return change;\n    }\n    const overlap = getDroppableOverlap(droppable, change);\n    if (!overlap) {\n      scrollDroppable(droppable.descriptor.id, change);\n      return null;\n    }\n    const whatTheDroppableCanScroll = subtract(change, overlap);\n    scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);\n    const remainder = subtract(change, whatTheDroppableCanScroll);\n    return remainder;\n  };\n  const scrollWindowAsMuchAsItCan = (isWindowScrollAllowed, viewport, change) => {\n    if (!isWindowScrollAllowed) {\n      return change;\n    }\n    if (!canScrollWindow(viewport, change)) {\n      return change;\n    }\n    const overlap = getWindowOverlap(viewport, change);\n    if (!overlap) {\n      scrollWindow(change);\n      return null;\n    }\n    const whatTheWindowCanScroll = subtract(change, overlap);\n    scrollWindow(whatTheWindowCanScroll);\n    const remainder = subtract(change, whatTheWindowCanScroll);\n    return remainder;\n  };\n  const jumpScroller = state => {\n    const request = state.scrollJumpRequest;\n    if (!request) {\n      return;\n    }\n    const destination = whatIsDraggedOver(state.impact);\n    !destination ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot perform a jump scroll when there is no destination') : invariant(false) : void 0;\n    const droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);\n    if (!droppableRemainder) {\n      return;\n    }\n    const viewport = state.viewport;\n    const windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);\n    if (!windowRemainder) {\n      return;\n    }\n    moveByOffset(state, windowRemainder);\n  };\n  return jumpScroller;\n};\nvar createAutoScroller = _ref64 => {\n  let {\n    scrollDroppable,\n    scrollWindow,\n    move,\n    getAutoScrollerOptions\n  } = _ref64;\n  const fluidScroller = createFluidScroller({\n    scrollWindow,\n    scrollDroppable,\n    getAutoScrollerOptions\n  });\n  const jumpScroll = createJumpScroller({\n    move,\n    scrollWindow,\n    scrollDroppable\n  });\n  const scroll = state => {\n    const autoScrollerOptions = getAutoScrollerOptions();\n    if (autoScrollerOptions.disabled || state.phase !== 'DRAGGING') {\n      return;\n    }\n    if (state.movementMode === 'FLUID') {\n      fluidScroller.scroll(state);\n      return;\n    }\n    if (!state.scrollJumpRequest) {\n      return;\n    }\n    jumpScroll(state);\n  };\n  const scroller = {\n    scroll,\n    start: fluidScroller.start,\n    stop: fluidScroller.stop\n  };\n  return scroller;\n};\nconst prefix = 'data-rfd';\nconst dragHandle = (() => {\n  const base = \"\".concat(prefix, \"-drag-handle\");\n  return {\n    base,\n    draggableId: \"\".concat(base, \"-draggable-id\"),\n    contextId: \"\".concat(base, \"-context-id\")\n  };\n})();\nconst draggable = (() => {\n  const base = \"\".concat(prefix, \"-draggable\");\n  return {\n    base,\n    contextId: \"\".concat(base, \"-context-id\"),\n    id: \"\".concat(base, \"-id\")\n  };\n})();\nconst droppable = (() => {\n  const base = \"\".concat(prefix, \"-droppable\");\n  return {\n    base,\n    contextId: \"\".concat(base, \"-context-id\"),\n    id: \"\".concat(base, \"-id\")\n  };\n})();\nconst scrollContainer = {\n  contextId: \"\".concat(prefix, \"-scroll-container-context-id\")\n};\nconst makeGetSelector = context => attribute => \"[\".concat(attribute, \"=\\\"\").concat(context, \"\\\"]\");\nconst getStyles = (rules, property) => rules.map(rule => {\n  const value = rule.styles[property];\n  if (!value) {\n    return '';\n  }\n  return \"\".concat(rule.selector, \" { \").concat(value, \" }\");\n}).join(' ');\nconst noPointerEvents = 'pointer-events: none;';\nvar getStyles$1 = contextId => {\n  const getSelector = makeGetSelector(contextId);\n  const dragHandle$1 = (() => {\n    const grabCursor = \"\\n      cursor: -webkit-grab;\\n      cursor: grab;\\n    \";\n    return {\n      selector: getSelector(dragHandle.contextId),\n      styles: {\n        always: \"\\n          -webkit-touch-callout: none;\\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\\n          touch-action: manipulation;\\n        \",\n        resting: grabCursor,\n        dragging: noPointerEvents,\n        dropAnimating: grabCursor\n      }\n    };\n  })();\n  const draggable$1 = (() => {\n    const transition = \"\\n      transition: \".concat(transitions.outOfTheWay, \";\\n    \");\n    return {\n      selector: getSelector(draggable.contextId),\n      styles: {\n        dragging: transition,\n        dropAnimating: transition,\n        userCancel: transition\n      }\n    };\n  })();\n  const droppable$1 = {\n    selector: getSelector(droppable.contextId),\n    styles: {\n      always: \"overflow-anchor: none;\"\n    }\n  };\n  const body = {\n    selector: 'body',\n    styles: {\n      dragging: \"\\n        cursor: grabbing;\\n        cursor: -webkit-grabbing;\\n        user-select: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        overflow-anchor: none;\\n      \"\n    }\n  };\n  const rules = [draggable$1, dragHandle$1, droppable$1, body];\n  return {\n    always: getStyles(rules, 'always'),\n    resting: getStyles(rules, 'resting'),\n    dragging: getStyles(rules, 'dragging'),\n    dropAnimating: getStyles(rules, 'dropAnimating'),\n    userCancel: getStyles(rules, 'userCancel')\n  };\n};\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect$1 : useEffect;\nvar useLayoutEffect = useIsomorphicLayoutEffect;\nconst getHead = () => {\n  const head = document.querySelector('head');\n  !head ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot find the head to append a style to') : invariant(false) : void 0;\n  return head;\n};\nconst createStyleEl = nonce => {\n  const el = document.createElement('style');\n  if (nonce) {\n    el.setAttribute('nonce', nonce);\n  }\n  el.type = 'text/css';\n  return el;\n};\nfunction useStyleMarshal(contextId, nonce) {\n  const styles = useMemo(() => getStyles$1(contextId), [contextId]);\n  const alwaysRef = useRef(null);\n  const dynamicRef = useRef(null);\n  const setDynamicStyle = useCallback(memoizeOne(proposed => {\n    const el = dynamicRef.current;\n    !el ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot set dynamic style element if it is not set') : invariant(false) : void 0;\n    el.textContent = proposed;\n  }), []);\n  const setAlwaysStyle = useCallback(proposed => {\n    const el = alwaysRef.current;\n    !el ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot set dynamic style element if it is not set') : invariant(false) : void 0;\n    el.textContent = proposed;\n  }, []);\n  useLayoutEffect(() => {\n    !(!alwaysRef.current && !dynamicRef.current) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'style elements already mounted') : invariant(false) : void 0;\n    const always = createStyleEl(nonce);\n    const dynamic = createStyleEl(nonce);\n    alwaysRef.current = always;\n    dynamicRef.current = dynamic;\n    always.setAttribute(\"\".concat(prefix, \"-always\"), contextId);\n    dynamic.setAttribute(\"\".concat(prefix, \"-dynamic\"), contextId);\n    getHead().appendChild(always);\n    getHead().appendChild(dynamic);\n    setAlwaysStyle(styles.always);\n    setDynamicStyle(styles.resting);\n    return () => {\n      const remove = ref => {\n        const current = ref.current;\n        !current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot unmount ref as it is not set') : invariant(false) : void 0;\n        getHead().removeChild(current);\n        ref.current = null;\n      };\n      remove(alwaysRef);\n      remove(dynamicRef);\n    };\n  }, [nonce, setAlwaysStyle, setDynamicStyle, styles.always, styles.resting, contextId]);\n  const dragging = useCallback(() => setDynamicStyle(styles.dragging), [setDynamicStyle, styles.dragging]);\n  const dropping = useCallback(reason => {\n    if (reason === 'DROP') {\n      setDynamicStyle(styles.dropAnimating);\n      return;\n    }\n    setDynamicStyle(styles.userCancel);\n  }, [setDynamicStyle, styles.dropAnimating, styles.userCancel]);\n  const resting = useCallback(() => {\n    if (!dynamicRef.current) {\n      return;\n    }\n    setDynamicStyle(styles.resting);\n  }, [setDynamicStyle, styles.resting]);\n  const marshal = useMemo(() => ({\n    dragging,\n    dropping,\n    resting\n  }), [dragging, dropping, resting]);\n  return marshal;\n}\nfunction querySelectorAll(parentNode, selector) {\n  return Array.from(parentNode.querySelectorAll(selector));\n}\nvar getWindowFromEl = el => {\n  if (el && el.ownerDocument && el.ownerDocument.defaultView) {\n    return el.ownerDocument.defaultView;\n  }\n  return window;\n};\nfunction isHtmlElement(el) {\n  return el instanceof getWindowFromEl(el).HTMLElement;\n}\nfunction findDragHandle(contextId, draggableId) {\n  const selector = \"[\".concat(dragHandle.contextId, \"=\\\"\").concat(contextId, \"\\\"]\");\n  const possible = querySelectorAll(document, selector);\n  if (!possible.length) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"Unable to find any drag handles in the context \\\"\".concat(contextId, \"\\\"\")) : void 0;\n    return null;\n  }\n  const handle = possible.find(el => {\n    return el.getAttribute(dragHandle.draggableId) === draggableId;\n  });\n  if (!handle) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"Unable to find drag handle with id \\\"\".concat(draggableId, \"\\\" as no handle with a matching id was found\")) : void 0;\n    return null;\n  }\n  if (!isHtmlElement(handle)) {\n    process.env.NODE_ENV !== \"production\" ? warning('drag handle needs to be a HTMLElement') : void 0;\n    return null;\n  }\n  return handle;\n}\nfunction useFocusMarshal(contextId) {\n  const entriesRef = useRef({});\n  const recordRef = useRef(null);\n  const restoreFocusFrameRef = useRef(null);\n  const isMountedRef = useRef(false);\n  const register = useCallback(function register(id, focus) {\n    const entry = {\n      id,\n      focus\n    };\n    entriesRef.current[id] = entry;\n    return function unregister() {\n      const entries = entriesRef.current;\n      const current = entries[id];\n      if (current !== entry) {\n        delete entries[id];\n      }\n    };\n  }, []);\n  const tryGiveFocus = useCallback(function tryGiveFocus(tryGiveFocusTo) {\n    const handle = findDragHandle(contextId, tryGiveFocusTo);\n    if (handle && handle !== document.activeElement) {\n      handle.focus();\n    }\n  }, [contextId]);\n  const tryShiftRecord = useCallback(function tryShiftRecord(previous, redirectTo) {\n    if (recordRef.current === previous) {\n      recordRef.current = redirectTo;\n    }\n  }, []);\n  const tryRestoreFocusRecorded = useCallback(function tryRestoreFocusRecorded() {\n    if (restoreFocusFrameRef.current) {\n      return;\n    }\n    if (!isMountedRef.current) {\n      return;\n    }\n    restoreFocusFrameRef.current = requestAnimationFrame(() => {\n      restoreFocusFrameRef.current = null;\n      const record = recordRef.current;\n      if (record) {\n        tryGiveFocus(record);\n      }\n    });\n  }, [tryGiveFocus]);\n  const tryRecordFocus = useCallback(function tryRecordFocus(id) {\n    recordRef.current = null;\n    const focused = document.activeElement;\n    if (!focused) {\n      return;\n    }\n    if (focused.getAttribute(dragHandle.draggableId) !== id) {\n      return;\n    }\n    recordRef.current = id;\n  }, []);\n  useLayoutEffect(() => {\n    isMountedRef.current = true;\n    return function clearFrameOnUnmount() {\n      isMountedRef.current = false;\n      const frameId = restoreFocusFrameRef.current;\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, []);\n  const marshal = useMemo(() => ({\n    register,\n    tryRecordFocus,\n    tryRestoreFocusRecorded,\n    tryShiftRecord\n  }), [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);\n  return marshal;\n}\nfunction createRegistry() {\n  const entries = {\n    draggables: {},\n    droppables: {}\n  };\n  const subscribers = [];\n  function subscribe(cb) {\n    subscribers.push(cb);\n    return function unsubscribe() {\n      const index = subscribers.indexOf(cb);\n      if (index === -1) {\n        return;\n      }\n      subscribers.splice(index, 1);\n    };\n  }\n  function notify(event) {\n    if (subscribers.length) {\n      subscribers.forEach(cb => cb(event));\n    }\n  }\n  function findDraggableById(id) {\n    return entries.draggables[id] || null;\n  }\n  function getDraggableById(id) {\n    const entry = findDraggableById(id);\n    !entry ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot find draggable entry with id [\".concat(id, \"]\")) : invariant(false) : void 0;\n    return entry;\n  }\n  const draggableAPI = {\n    register: entry => {\n      entries.draggables[entry.descriptor.id] = entry;\n      notify({\n        type: 'ADDITION',\n        value: entry\n      });\n    },\n    update: (entry, last) => {\n      const current = entries.draggables[last.descriptor.id];\n      if (!current) {\n        return;\n      }\n      if (current.uniqueId !== entry.uniqueId) {\n        return;\n      }\n      delete entries.draggables[last.descriptor.id];\n      entries.draggables[entry.descriptor.id] = entry;\n    },\n    unregister: entry => {\n      const draggableId = entry.descriptor.id;\n      const current = findDraggableById(draggableId);\n      if (!current) {\n        return;\n      }\n      if (entry.uniqueId !== current.uniqueId) {\n        return;\n      }\n      delete entries.draggables[draggableId];\n      if (entries.droppables[entry.descriptor.droppableId]) {\n        notify({\n          type: 'REMOVAL',\n          value: entry\n        });\n      }\n    },\n    getById: getDraggableById,\n    findById: findDraggableById,\n    exists: id => Boolean(findDraggableById(id)),\n    getAllByType: type => Object.values(entries.draggables).filter(entry => entry.descriptor.type === type)\n  };\n  function findDroppableById(id) {\n    return entries.droppables[id] || null;\n  }\n  function getDroppableById(id) {\n    const entry = findDroppableById(id);\n    !entry ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot find droppable entry with id [\".concat(id, \"]\")) : invariant(false) : void 0;\n    return entry;\n  }\n  const droppableAPI = {\n    register: entry => {\n      entries.droppables[entry.descriptor.id] = entry;\n    },\n    unregister: entry => {\n      const current = findDroppableById(entry.descriptor.id);\n      if (!current) {\n        return;\n      }\n      if (entry.uniqueId !== current.uniqueId) {\n        return;\n      }\n      delete entries.droppables[entry.descriptor.id];\n    },\n    getById: getDroppableById,\n    findById: findDroppableById,\n    exists: id => Boolean(findDroppableById(id)),\n    getAllByType: type => Object.values(entries.droppables).filter(entry => entry.descriptor.type === type)\n  };\n  function clean() {\n    entries.draggables = {};\n    entries.droppables = {};\n    subscribers.length = 0;\n  }\n  return {\n    draggable: draggableAPI,\n    droppable: droppableAPI,\n    subscribe,\n    clean\n  };\n}\nfunction useRegistry() {\n  const registry = useMemo(createRegistry, []);\n  useEffect(() => {\n    return function unmount() {\n      if (React.version.startsWith('16') || React.version.startsWith('17')) {\n        requestAnimationFrame(registry.clean);\n      } else {\n        registry.clean();\n      }\n    };\n  }, [registry]);\n  return registry;\n}\nvar StoreContext = React.createContext(null);\nvar getBodyElement = () => {\n  const body = document.body;\n  !body ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot find document.body') : invariant(false) : void 0;\n  return body;\n};\nconst visuallyHidden = {\n  position: 'absolute',\n  width: '1px',\n  height: '1px',\n  margin: '-1px',\n  border: '0',\n  padding: '0',\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  'clip-path': 'inset(100%)'\n};\nvar visuallyHidden$1 = visuallyHidden;\nconst getId = contextId => \"rfd-announcement-\".concat(contextId);\nfunction useAnnouncer(contextId) {\n  const id = useMemo(() => getId(contextId), [contextId]);\n  const ref = useRef(null);\n  useEffect(function setup() {\n    const el = document.createElement('div');\n    ref.current = el;\n    el.id = id;\n    el.setAttribute('aria-live', 'assertive');\n    el.setAttribute('aria-atomic', 'true');\n    _extends(el.style, visuallyHidden$1);\n    getBodyElement().appendChild(el);\n    return function cleanup() {\n      setTimeout(function remove() {\n        const body = getBodyElement();\n        if (body.contains(el)) {\n          body.removeChild(el);\n        }\n        if (el === ref.current) {\n          ref.current = null;\n        }\n      });\n    };\n  }, [id]);\n  const announce = useCallback(message => {\n    const el = ref.current;\n    if (el) {\n      el.textContent = message;\n      return;\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(\"\\n      A screen reader message was trying to be announced but it was unable to do so.\\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\\n      Consider calling provided.announce() before the unmount so that the instruction will\\n      not be lost for users relying on a screen reader.\\n\\n      Message not passed to screen reader:\\n\\n      \\\"\".concat(message, \"\\\"\\n    \")) : void 0;\n  }, []);\n  return announce;\n}\nlet count$1 = 0;\nconst defaults = {\n  separator: '::'\n};\nfunction resetDeprecatedUniqueId() {\n  count$1 = 0;\n}\nfunction useDeprecatedUniqueId(prefix) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults;\n  return useMemo(() => \"\".concat(prefix).concat(options.separator).concat(count$1++), [options.separator, prefix]);\n}\nfunction useUniqueId(prefix) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults;\n  const id = React.useId();\n  return useMemo(() => \"\".concat(prefix).concat(options.separator).concat(id), [options.separator, prefix, id]);\n}\nvar useUniqueId$1 = 'useId' in React ? useUniqueId : useDeprecatedUniqueId;\nfunction getElementId(_ref65) {\n  let {\n    contextId,\n    uniqueId\n  } = _ref65;\n  return \"rfd-hidden-text-\".concat(contextId, \"-\").concat(uniqueId);\n}\nfunction useHiddenTextElement(_ref66) {\n  let {\n    contextId,\n    text\n  } = _ref66;\n  const uniqueId = useUniqueId$1('hidden-text', {\n    separator: '-'\n  });\n  const id = useMemo(() => getElementId({\n    contextId,\n    uniqueId\n  }), [uniqueId, contextId]);\n  useEffect(function mount() {\n    const el = document.createElement('div');\n    el.id = id;\n    el.textContent = text;\n    el.style.display = 'none';\n    getBodyElement().appendChild(el);\n    return function unmount() {\n      const body = getBodyElement();\n      if (body.contains(el)) {\n        body.removeChild(el);\n      }\n    };\n  }, [id, text]);\n  return id;\n}\nvar AppContext = React.createContext(null);\nvar peerDependencies = {\n  react: \"^16.8.5 || ^17.0.0 || ^18.0.0\",\n  \"react-dom\": \"^16.8.5 || ^17.0.0 || ^18.0.0\"\n};\nconst semver = /(\\d+)\\.(\\d+)\\.(\\d+)/;\nconst getVersion = value => {\n  const result = semver.exec(value);\n  !(result != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Unable to parse React version \".concat(value)) : invariant(false) : void 0;\n  const major = Number(result[1]);\n  const minor = Number(result[2]);\n  const patch = Number(result[3]);\n  return {\n    major,\n    minor,\n    patch,\n    raw: value\n  };\n};\nconst isSatisfied = (expected, actual) => {\n  if (actual.major > expected.major) {\n    return true;\n  }\n  if (actual.major < expected.major) {\n    return false;\n  }\n  if (actual.minor > expected.minor) {\n    return true;\n  }\n  if (actual.minor < expected.minor) {\n    return false;\n  }\n  return actual.patch >= expected.patch;\n};\nvar checkReactVersion = (peerDepValue, actualValue) => {\n  const peerDep = getVersion(peerDepValue);\n  const actual = getVersion(actualValue);\n  if (isSatisfied(peerDep, actual)) {\n    return;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(\"\\n    React version: [\".concat(actual.raw, \"]\\n    does not satisfy expected peer dependency version: [\").concat(peerDep.raw, \"]\\n\\n    This can result in run time bugs, and even fatal crashes\\n  \")) : void 0;\n};\nconst suffix = \"\\n  We expect a html5 doctype: <!doctype html>\\n  This is to ensure consistent browser layout and measurement\\n\\n  More information: https://github.com/hello-pangea/dnd/blob/main/docs/guides/doctype.md\\n\";\nvar checkDoctype = doc => {\n  const doctype = doc.doctype;\n  if (!doctype) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"\\n      No <!doctype html> found.\\n\\n      \".concat(suffix, \"\\n    \")) : void 0;\n    return;\n  }\n  if (doctype.name.toLowerCase() !== 'html') {\n    process.env.NODE_ENV !== \"production\" ? warning(\"\\n      Unexpected <!doctype> found: (\".concat(doctype.name, \")\\n\\n      \").concat(suffix, \"\\n    \")) : void 0;\n  }\n  if (doctype.publicId !== '') {\n    process.env.NODE_ENV !== \"production\" ? warning(\"\\n      Unexpected <!doctype> publicId found: (\".concat(doctype.publicId, \")\\n      A html5 doctype does not have a publicId\\n\\n      \").concat(suffix, \"\\n    \")) : void 0;\n  }\n};\nfunction useDev(useHook) {\n  if (process.env.NODE_ENV !== 'production') {\n    useHook();\n  }\n}\nfunction useDevSetupWarning(fn, inputs) {\n  useDev(() => {\n    useEffect(() => {\n      try {\n        fn();\n      } catch (e) {\n        error(\"\\n          A setup problem was encountered.\\n\\n          > \".concat(e.message, \"\\n        \"));\n      }\n    }, inputs);\n  });\n}\nfunction useStartupValidation() {\n  useDevSetupWarning(() => {\n    checkReactVersion(peerDependencies.react, React.version);\n    checkDoctype(document);\n  }, []);\n}\nfunction usePrevious(current) {\n  const ref = useRef(current);\n  useEffect(() => {\n    ref.current = current;\n  });\n  return ref;\n}\nfunction create() {\n  let lock = null;\n  function isClaimed() {\n    return Boolean(lock);\n  }\n  function isActive(value) {\n    return value === lock;\n  }\n  function claim(abandon) {\n    !!lock ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot claim lock as it is already claimed') : invariant(false) : void 0;\n    const newLock = {\n      abandon\n    };\n    lock = newLock;\n    return newLock;\n  }\n  function release() {\n    !lock ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot release lock when there is no lock') : invariant(false) : void 0;\n    lock = null;\n  }\n  function tryAbandon() {\n    if (lock) {\n      lock.abandon();\n      release();\n    }\n  }\n  return {\n    isClaimed,\n    isActive,\n    claim,\n    release,\n    tryAbandon\n  };\n}\nfunction isDragging(state) {\n  if (state.phase === 'IDLE' || state.phase === 'DROP_ANIMATING') {\n    return false;\n  }\n  return state.isDragging;\n}\nconst tab = 9;\nconst enter = 13;\nconst escape = 27;\nconst space = 32;\nconst pageUp = 33;\nconst pageDown = 34;\nconst end = 35;\nconst home = 36;\nconst arrowLeft = 37;\nconst arrowUp = 38;\nconst arrowRight = 39;\nconst arrowDown = 40;\nconst preventedKeys = {\n  [enter]: true,\n  [tab]: true\n};\nvar preventStandardKeyEvents = event => {\n  if (preventedKeys[event.keyCode]) {\n    event.preventDefault();\n  }\n};\nconst supportedEventName = (() => {\n  const base = 'visibilitychange';\n  if (typeof document === 'undefined') {\n    return base;\n  }\n  const candidates = [base, \"ms\".concat(base), \"webkit\".concat(base), \"moz\".concat(base), \"o\".concat(base)];\n  const supported = candidates.find(eventName => \"on\".concat(eventName) in document);\n  return supported || base;\n})();\nvar supportedPageVisibilityEventName = supportedEventName;\nconst primaryButton = 0;\nconst sloppyClickThreshold = 5;\nfunction isSloppyClickThresholdExceeded(original, current) {\n  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;\n}\nconst idle$1 = {\n  type: 'IDLE'\n};\nfunction getCaptureBindings(_ref67) {\n  let {\n    cancel,\n    completed,\n    getPhase,\n    setPhase\n  } = _ref67;\n  return [{\n    eventName: 'mousemove',\n    fn: event => {\n      const {\n        button,\n        clientX,\n        clientY\n      } = event;\n      if (button !== primaryButton) {\n        return;\n      }\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      const phase = getPhase();\n      if (phase.type === 'DRAGGING') {\n        event.preventDefault();\n        phase.actions.move(point);\n        return;\n      }\n      !(phase.type === 'PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot be IDLE') : invariant(false) : void 0;\n      const pending = phase.point;\n      if (!isSloppyClickThresholdExceeded(pending, point)) {\n        return;\n      }\n      event.preventDefault();\n      const actions = phase.actions.fluidLift(point);\n      setPhase({\n        type: 'DRAGGING',\n        actions\n      });\n    }\n  }, {\n    eventName: 'mouseup',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n      phase.actions.drop({\n        shouldBlockNextClick: true\n      });\n      completed();\n    }\n  }, {\n    eventName: 'mousedown',\n    fn: event => {\n      if (getPhase().type === 'DRAGGING') {\n        event.preventDefault();\n      }\n      cancel();\n    }\n  }, {\n    eventName: 'keydown',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type === 'PENDING') {\n        cancel();\n        return;\n      }\n      if (event.keyCode === escape) {\n        event.preventDefault();\n        cancel();\n        return;\n      }\n      preventStandardKeyEvents(event);\n    }\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'scroll',\n    options: {\n      passive: true,\n      capture: false\n    },\n    fn: () => {\n      if (getPhase().type === 'PENDING') {\n        cancel();\n      }\n    }\n  }, {\n    eventName: 'webkitmouseforcedown',\n    fn: event => {\n      const phase = getPhase();\n      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected phase') : invariant(false) : void 0;\n      if (phase.actions.shouldRespectForcePress()) {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction useMouseSensor(api) {\n  const phaseRef = useRef(idle$1);\n  const unbindEventsRef = useRef(noop$2);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'mousedown',\n    fn: function onMouseDown(event) {\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.button !== primaryButton) {\n        return;\n      }\n      if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const actions = api.tryGetLock(draggableId, stop, {\n        sourceEvent: event\n      });\n      if (!actions) {\n        return;\n      }\n      event.preventDefault();\n      const point = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      unbindEventsRef.current();\n      startPendingDrag(actions, point);\n    }\n  }), [api]);\n  const preventForcePressBinding = useMemo(() => ({\n    eventName: 'webkitmouseforcewillbegin',\n    fn: event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const id = api.findClosestDraggableId(event);\n      if (!id) {\n        return;\n      }\n      const options = api.findOptionsForDraggable(id);\n      if (!options) {\n        return;\n      }\n      if (options.shouldRespectForcePress) {\n        return;\n      }\n      if (!api.canGetLock(id)) {\n        return;\n      }\n      event.preventDefault();\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function listenForCapture() {\n    const options = {\n      passive: false,\n      capture: true\n    };\n    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);\n  }, [preventForcePressBinding, startCaptureBinding]);\n  const stop = useCallback(() => {\n    const current = phaseRef.current;\n    if (current.type === 'IDLE') {\n      return;\n    }\n    phaseRef.current = idle$1;\n    unbindEventsRef.current();\n    listenForCapture();\n  }, [listenForCapture]);\n  const cancel = useCallback(() => {\n    const phase = phaseRef.current;\n    stop();\n    if (phase.type === 'DRAGGING') {\n      phase.actions.cancel({\n        shouldBlockNextClick: true\n      });\n    }\n    if (phase.type === 'PENDING') {\n      phase.actions.abort();\n    }\n  }, [stop]);\n  const bindCapturingEvents = useCallback(function bindCapturingEvents() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    const bindings = getCaptureBindings({\n      cancel,\n      completed: stop,\n      getPhase: () => phaseRef.current,\n      setPhase: phase => {\n        phaseRef.current = phase;\n      }\n    });\n    unbindEventsRef.current = bindEvents(window, bindings, options);\n  }, [cancel, stop]);\n  const startPendingDrag = useCallback(function startPendingDrag(actions, point) {\n    !(phaseRef.current.type === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to move from IDLE to PENDING drag') : invariant(false) : void 0;\n    phaseRef.current = {\n      type: 'PENDING',\n      point,\n      actions\n    };\n    bindCapturingEvents();\n  }, [bindCapturingEvents]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      unbindEventsRef.current();\n    };\n  }, [listenForCapture]);\n}\nfunction noop$1() {}\nconst scrollJumpKeys = {\n  [pageDown]: true,\n  [pageUp]: true,\n  [home]: true,\n  [end]: true\n};\nfunction getDraggingBindings(actions, stop) {\n  function cancel() {\n    stop();\n    actions.cancel();\n  }\n  function drop() {\n    stop();\n    actions.drop();\n  }\n  return [{\n    eventName: 'keydown',\n    fn: event => {\n      if (event.keyCode === escape) {\n        event.preventDefault();\n        cancel();\n        return;\n      }\n      if (event.keyCode === space) {\n        event.preventDefault();\n        drop();\n        return;\n      }\n      if (event.keyCode === arrowDown) {\n        event.preventDefault();\n        actions.moveDown();\n        return;\n      }\n      if (event.keyCode === arrowUp) {\n        event.preventDefault();\n        actions.moveUp();\n        return;\n      }\n      if (event.keyCode === arrowRight) {\n        event.preventDefault();\n        actions.moveRight();\n        return;\n      }\n      if (event.keyCode === arrowLeft) {\n        event.preventDefault();\n        actions.moveLeft();\n        return;\n      }\n      if (scrollJumpKeys[event.keyCode]) {\n        event.preventDefault();\n        return;\n      }\n      preventStandardKeyEvents(event);\n    }\n  }, {\n    eventName: 'mousedown',\n    fn: cancel\n  }, {\n    eventName: 'mouseup',\n    fn: cancel\n  }, {\n    eventName: 'click',\n    fn: cancel\n  }, {\n    eventName: 'touchstart',\n    fn: cancel\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'wheel',\n    fn: cancel,\n    options: {\n      passive: true\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction useKeyboardSensor(api) {\n  const unbindEventsRef = useRef(noop$1);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'keydown',\n    fn: function onKeyDown(event) {\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.keyCode !== space) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const preDrag = api.tryGetLock(draggableId, stop, {\n        sourceEvent: event\n      });\n      if (!preDrag) {\n        return;\n      }\n      event.preventDefault();\n      let isCapturing = true;\n      const actions = preDrag.snapLift();\n      unbindEventsRef.current();\n      function stop() {\n        !isCapturing ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot stop capturing a keyboard drag when not capturing') : invariant(false) : void 0;\n        isCapturing = false;\n        unbindEventsRef.current();\n        listenForCapture();\n      }\n      unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {\n        capture: true,\n        passive: false\n      });\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function tryStartCapture() {\n    const options = {\n      passive: false,\n      capture: true\n    };\n    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);\n  }, [startCaptureBinding]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      unbindEventsRef.current();\n    };\n  }, [listenForCapture]);\n}\nconst idle = {\n  type: 'IDLE'\n};\nconst timeForLongPress = 120;\nconst forcePressThreshold = 0.15;\nfunction getWindowBindings(_ref68) {\n  let {\n    cancel,\n    getPhase\n  } = _ref68;\n  return [{\n    eventName: 'orientationchange',\n    fn: cancel\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'contextmenu',\n    fn: event => {\n      event.preventDefault();\n    }\n  }, {\n    eventName: 'keydown',\n    fn: event => {\n      if (getPhase().type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      if (event.keyCode === escape) {\n        event.preventDefault();\n      }\n      cancel();\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction getHandleBindings(_ref69) {\n  let {\n    cancel,\n    completed,\n    getPhase\n  } = _ref69;\n  return [{\n    eventName: 'touchmove',\n    options: {\n      capture: false\n    },\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      phase.hasMoved = true;\n      const {\n        clientX,\n        clientY\n      } = event.touches[0];\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      event.preventDefault();\n      phase.actions.move(point);\n    }\n  }, {\n    eventName: 'touchend',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n      phase.actions.drop({\n        shouldBlockNextClick: true\n      });\n      completed();\n    }\n  }, {\n    eventName: 'touchcancel',\n    fn: event => {\n      if (getPhase().type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n      cancel();\n    }\n  }, {\n    eventName: 'touchforcechange',\n    fn: event => {\n      const phase = getPhase();\n      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n      const touch = event.touches[0];\n      if (!touch) {\n        return;\n      }\n      const isForcePress = touch.force >= forcePressThreshold;\n      if (!isForcePress) {\n        return;\n      }\n      const shouldRespect = phase.actions.shouldRespectForcePress();\n      if (phase.type === 'PENDING') {\n        if (shouldRespect) {\n          cancel();\n        }\n        return;\n      }\n      if (shouldRespect) {\n        if (phase.hasMoved) {\n          event.preventDefault();\n          return;\n        }\n        cancel();\n        return;\n      }\n      event.preventDefault();\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction useTouchSensor(api) {\n  const phaseRef = useRef(idle);\n  const unbindEventsRef = useRef(noop$2);\n  const getPhase = useCallback(function getPhase() {\n    return phaseRef.current;\n  }, []);\n  const setPhase = useCallback(function setPhase(phase) {\n    phaseRef.current = phase;\n  }, []);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'touchstart',\n    fn: function onTouchStart(event) {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const actions = api.tryGetLock(draggableId, stop, {\n        sourceEvent: event\n      });\n      if (!actions) {\n        return;\n      }\n      const touch = event.touches[0];\n      const {\n        clientX,\n        clientY\n      } = touch;\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      unbindEventsRef.current();\n      startPendingDrag(actions, point);\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function listenForCapture() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);\n  }, [startCaptureBinding]);\n  const stop = useCallback(() => {\n    const current = phaseRef.current;\n    if (current.type === 'IDLE') {\n      return;\n    }\n    if (current.type === 'PENDING') {\n      clearTimeout(current.longPressTimerId);\n    }\n    setPhase(idle);\n    unbindEventsRef.current();\n    listenForCapture();\n  }, [listenForCapture, setPhase]);\n  const cancel = useCallback(() => {\n    const phase = phaseRef.current;\n    stop();\n    if (phase.type === 'DRAGGING') {\n      phase.actions.cancel({\n        shouldBlockNextClick: true\n      });\n    }\n    if (phase.type === 'PENDING') {\n      phase.actions.abort();\n    }\n  }, [stop]);\n  const bindCapturingEvents = useCallback(function bindCapturingEvents() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    const args = {\n      cancel,\n      completed: stop,\n      getPhase\n    };\n    const unbindTarget = bindEvents(window, getHandleBindings(args), options);\n    const unbindWindow = bindEvents(window, getWindowBindings(args), options);\n    unbindEventsRef.current = function unbindAll() {\n      unbindTarget();\n      unbindWindow();\n    };\n  }, [cancel, getPhase, stop]);\n  const startDragging = useCallback(function startDragging() {\n    const phase = getPhase();\n    !(phase.type === 'PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot start dragging from phase \".concat(phase.type)) : invariant(false) : void 0;\n    const actions = phase.actions.fluidLift(phase.point);\n    setPhase({\n      type: 'DRAGGING',\n      actions,\n      hasMoved: false\n    });\n  }, [getPhase, setPhase]);\n  const startPendingDrag = useCallback(function startPendingDrag(actions, point) {\n    !(getPhase().type === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to move from IDLE to PENDING drag') : invariant(false) : void 0;\n    const longPressTimerId = setTimeout(startDragging, timeForLongPress);\n    setPhase({\n      type: 'PENDING',\n      point,\n      actions,\n      longPressTimerId\n    });\n    bindCapturingEvents();\n  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      unbindEventsRef.current();\n      const phase = getPhase();\n      if (phase.type === 'PENDING') {\n        clearTimeout(phase.longPressTimerId);\n        setPhase(idle);\n      }\n    };\n  }, [getPhase, listenForCapture, setPhase]);\n  useLayoutEffect(function webkitHack() {\n    const unbind = bindEvents(window, [{\n      eventName: 'touchmove',\n      fn: () => {},\n      options: {\n        capture: false,\n        passive: false\n      }\n    }]);\n    return unbind;\n  }, []);\n}\nfunction useValidateSensorHooks(sensorHooks) {\n  useDev(() => {\n    const previousRef = usePrevious(sensorHooks);\n    useDevSetupWarning(() => {\n      !(previousRef.current.length === sensorHooks.length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot change the amount of sensor hooks after mounting') : invariant(false) : void 0;\n    });\n  });\n}\nconst interactiveTagNames = ['input', 'button', 'textarea', 'select', 'option', 'optgroup', 'video', 'audio'];\nfunction isAnInteractiveElement(parent, current) {\n  if (current == null) {\n    return false;\n  }\n  const hasAnInteractiveTag = interactiveTagNames.includes(current.tagName.toLowerCase());\n  if (hasAnInteractiveTag) {\n    return true;\n  }\n  const attribute = current.getAttribute('contenteditable');\n  if (attribute === 'true' || attribute === '') {\n    return true;\n  }\n  if (current === parent) {\n    return false;\n  }\n  return isAnInteractiveElement(parent, current.parentElement);\n}\nfunction isEventInInteractiveElement(draggable, event) {\n  const target = event.target;\n  if (!isHtmlElement(target)) {\n    return false;\n  }\n  return isAnInteractiveElement(draggable, target);\n}\nvar getBorderBoxCenterPosition = el => getRect(el.getBoundingClientRect()).center;\nfunction isElement(el) {\n  return el instanceof getWindowFromEl(el).Element;\n}\nconst supportedMatchesName = (() => {\n  const base = 'matches';\n  if (typeof document === 'undefined') {\n    return base;\n  }\n  const candidates = [base, 'msMatchesSelector', 'webkitMatchesSelector'];\n  const value = candidates.find(name => name in Element.prototype);\n  return value || base;\n})();\nfunction closestPonyfill(el, selector) {\n  if (el == null) {\n    return null;\n  }\n  if (el[supportedMatchesName](selector)) {\n    return el;\n  }\n  return closestPonyfill(el.parentElement, selector);\n}\nfunction closest(el, selector) {\n  if (el.closest) {\n    return el.closest(selector);\n  }\n  return closestPonyfill(el, selector);\n}\nfunction getSelector(contextId) {\n  return \"[\".concat(dragHandle.contextId, \"=\\\"\").concat(contextId, \"\\\"]\");\n}\nfunction findClosestDragHandleFromEvent(contextId, event) {\n  const target = event.target;\n  if (!isElement(target)) {\n    process.env.NODE_ENV !== \"production\" ? warning('event.target must be a Element') : void 0;\n    return null;\n  }\n  const selector = getSelector(contextId);\n  const handle = closest(target, selector);\n  if (!handle) {\n    return null;\n  }\n  if (!isHtmlElement(handle)) {\n    process.env.NODE_ENV !== \"production\" ? warning('drag handle must be a HTMLElement') : void 0;\n    return null;\n  }\n  return handle;\n}\nfunction tryGetClosestDraggableIdFromEvent(contextId, event) {\n  const handle = findClosestDragHandleFromEvent(contextId, event);\n  if (!handle) {\n    return null;\n  }\n  return handle.getAttribute(dragHandle.draggableId);\n}\nfunction findDraggable(contextId, draggableId) {\n  const selector = \"[\".concat(draggable.contextId, \"=\\\"\").concat(contextId, \"\\\"]\");\n  const possible = querySelectorAll(document, selector);\n  const draggable$1 = possible.find(el => {\n    return el.getAttribute(draggable.id) === draggableId;\n  });\n  if (!draggable$1) {\n    return null;\n  }\n  if (!isHtmlElement(draggable$1)) {\n    process.env.NODE_ENV !== \"production\" ? warning('Draggable element is not a HTMLElement') : void 0;\n    return null;\n  }\n  return draggable$1;\n}\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction isActive(_ref70) {\n  let {\n    expected,\n    phase,\n    isLockActive,\n    shouldWarn\n  } = _ref70;\n  if (!isLockActive()) {\n    if (shouldWarn) {\n      process.env.NODE_ENV !== \"production\" ? warning(\"\\n        Cannot perform action.\\n        The sensor no longer has an action lock.\\n\\n        Tips:\\n\\n        - Throw away your action handlers when forceStop() is called\\n        - Check actions.isActive() if you really need to\\n      \") : void 0;\n    }\n    return false;\n  }\n  if (expected !== phase) {\n    if (shouldWarn) {\n      process.env.NODE_ENV !== \"production\" ? warning(\"\\n        Cannot perform action.\\n        The actions you used belong to an outdated phase\\n\\n        Current phase: \".concat(expected, \"\\n        You called an action from outdated phase: \").concat(phase, \"\\n\\n        Tips:\\n\\n        - Do not use preDragActions actions after calling preDragActions.lift()\\n      \")) : void 0;\n    }\n    return false;\n  }\n  return true;\n}\nfunction canStart(_ref71) {\n  let {\n    lockAPI,\n    store,\n    registry,\n    draggableId\n  } = _ref71;\n  if (lockAPI.isClaimed()) {\n    return false;\n  }\n  const entry = registry.draggable.findById(draggableId);\n  if (!entry) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"Unable to find draggable with id: \".concat(draggableId)) : void 0;\n    return false;\n  }\n  if (!entry.options.isEnabled) {\n    return false;\n  }\n  if (!canStartDrag(store.getState(), draggableId)) {\n    return false;\n  }\n  return true;\n}\nfunction tryStart(_ref72) {\n  let {\n    lockAPI,\n    contextId,\n    store,\n    registry,\n    draggableId,\n    forceSensorStop,\n    sourceEvent\n  } = _ref72;\n  const shouldStart = canStart({\n    lockAPI,\n    store,\n    registry,\n    draggableId\n  });\n  if (!shouldStart) {\n    return null;\n  }\n  const entry = registry.draggable.getById(draggableId);\n  const el = findDraggable(contextId, entry.descriptor.id);\n  if (!el) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"Unable to find draggable element with id: \".concat(draggableId)) : void 0;\n    return null;\n  }\n  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el, sourceEvent)) {\n    return null;\n  }\n  const lock = lockAPI.claim(forceSensorStop || noop$2);\n  let phase = 'PRE_DRAG';\n  function getShouldRespectForcePress() {\n    return entry.options.shouldRespectForcePress;\n  }\n  function isLockActive() {\n    return lockAPI.isActive(lock);\n  }\n  function tryDispatch(expected, getAction) {\n    if (isActive({\n      expected,\n      phase,\n      isLockActive,\n      shouldWarn: true\n    })) {\n      store.dispatch(getAction());\n    }\n  }\n  const tryDispatchWhenDragging = tryDispatch.bind(null, 'DRAGGING');\n  function lift(args) {\n    function completed() {\n      lockAPI.release();\n      phase = 'COMPLETED';\n    }\n    if (phase !== 'PRE_DRAG') {\n      completed();\n      process.env.NODE_ENV !== \"production\" ? invariant(false, \"Cannot lift in phase \".concat(phase)) : invariant(false);\n    }\n    store.dispatch(lift$1(args.liftActionArgs));\n    phase = 'DRAGGING';\n    function finish(reason) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shouldBlockNextClick: false\n      };\n      args.cleanup();\n      if (options.shouldBlockNextClick) {\n        const unbind = bindEvents(window, [{\n          eventName: 'click',\n          fn: preventDefault,\n          options: {\n            once: true,\n            passive: false,\n            capture: true\n          }\n        }]);\n        setTimeout(unbind);\n      }\n      completed();\n      store.dispatch(drop$1({\n        reason\n      }));\n    }\n    return _objectSpread({\n      isActive: () => isActive({\n        expected: 'DRAGGING',\n        phase,\n        isLockActive,\n        shouldWarn: false\n      }),\n      shouldRespectForcePress: getShouldRespectForcePress,\n      drop: options => finish('DROP', options),\n      cancel: options => finish('CANCEL', options)\n    }, args.actions);\n  }\n  function fluidLift(clientSelection) {\n    const move$1 = rafSchd(client => {\n      tryDispatchWhenDragging(() => move({\n        client\n      }));\n    });\n    const api = lift({\n      liftActionArgs: {\n        id: draggableId,\n        clientSelection,\n        movementMode: 'FLUID'\n      },\n      cleanup: () => move$1.cancel(),\n      actions: {\n        move: move$1\n      }\n    });\n    return _objectSpread(_objectSpread({}, api), {}, {\n      move: move$1\n    });\n  }\n  function snapLift() {\n    const actions = {\n      moveUp: () => tryDispatchWhenDragging(moveUp),\n      moveRight: () => tryDispatchWhenDragging(moveRight),\n      moveDown: () => tryDispatchWhenDragging(moveDown),\n      moveLeft: () => tryDispatchWhenDragging(moveLeft)\n    };\n    return lift({\n      liftActionArgs: {\n        id: draggableId,\n        clientSelection: getBorderBoxCenterPosition(el),\n        movementMode: 'SNAP'\n      },\n      cleanup: noop$2,\n      actions\n    });\n  }\n  function abortPreDrag() {\n    const shouldRelease = isActive({\n      expected: 'PRE_DRAG',\n      phase,\n      isLockActive,\n      shouldWarn: true\n    });\n    if (shouldRelease) {\n      lockAPI.release();\n    }\n  }\n  const preDrag = {\n    isActive: () => isActive({\n      expected: 'PRE_DRAG',\n      phase,\n      isLockActive,\n      shouldWarn: false\n    }),\n    shouldRespectForcePress: getShouldRespectForcePress,\n    fluidLift,\n    snapLift,\n    abort: abortPreDrag\n  };\n  return preDrag;\n}\nconst defaultSensors = [useMouseSensor, useKeyboardSensor, useTouchSensor];\nfunction useSensorMarshal(_ref73) {\n  let {\n    contextId,\n    store,\n    registry,\n    customSensors,\n    enableDefaultSensors\n  } = _ref73;\n  const useSensors = [...(enableDefaultSensors ? defaultSensors : []), ...(customSensors || [])];\n  const lockAPI = useState(() => create())[0];\n  const tryAbandonLock = useCallback(function tryAbandonLock(previous, current) {\n    if (isDragging(previous) && !isDragging(current)) {\n      lockAPI.tryAbandon();\n    }\n  }, [lockAPI]);\n  useLayoutEffect(function listenToStore() {\n    let previous = store.getState();\n    const unsubscribe = store.subscribe(() => {\n      const current = store.getState();\n      tryAbandonLock(previous, current);\n      previous = current;\n    });\n    return unsubscribe;\n  }, [lockAPI, store, tryAbandonLock]);\n  useLayoutEffect(() => {\n    return lockAPI.tryAbandon;\n  }, [lockAPI.tryAbandon]);\n  const canGetLock = useCallback(draggableId => {\n    return canStart({\n      lockAPI,\n      registry,\n      store,\n      draggableId\n    });\n  }, [lockAPI, registry, store]);\n  const tryGetLock = useCallback((draggableId, forceStop, options) => tryStart({\n    lockAPI,\n    registry,\n    contextId,\n    store,\n    draggableId,\n    forceSensorStop: forceStop || null,\n    sourceEvent: options && options.sourceEvent ? options.sourceEvent : null\n  }), [contextId, lockAPI, registry, store]);\n  const findClosestDraggableId = useCallback(event => tryGetClosestDraggableIdFromEvent(contextId, event), [contextId]);\n  const findOptionsForDraggable = useCallback(id => {\n    const entry = registry.draggable.findById(id);\n    return entry ? entry.options : null;\n  }, [registry.draggable]);\n  const tryReleaseLock = useCallback(function tryReleaseLock() {\n    if (!lockAPI.isClaimed()) {\n      return;\n    }\n    lockAPI.tryAbandon();\n    if (store.getState().phase !== 'IDLE') {\n      store.dispatch(flush());\n    }\n  }, [lockAPI, store]);\n  const isLockClaimed = useCallback(() => lockAPI.isClaimed(), [lockAPI]);\n  const api = useMemo(() => ({\n    canGetLock,\n    tryGetLock,\n    findClosestDraggableId,\n    findOptionsForDraggable,\n    tryReleaseLock,\n    isLockClaimed\n  }), [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);\n  useValidateSensorHooks(useSensors);\n  for (let i = 0; i < useSensors.length; i++) {\n    useSensors[i](api);\n  }\n}\nconst createResponders = props => ({\n  onBeforeCapture: t => {\n    const onBeforeCapureCallback = () => {\n      if (props.onBeforeCapture) {\n        props.onBeforeCapture(t);\n      }\n    };\n    if (React.version.startsWith('16') || React.version.startsWith('17')) {\n      onBeforeCapureCallback();\n    } else {\n      flushSync(onBeforeCapureCallback);\n    }\n  },\n  onBeforeDragStart: props.onBeforeDragStart,\n  onDragStart: props.onDragStart,\n  onDragEnd: props.onDragEnd,\n  onDragUpdate: props.onDragUpdate\n});\nconst createAutoScrollerOptions = props => _objectSpread(_objectSpread(_objectSpread({}, defaultAutoScrollerOptions), props.autoScrollerOptions), {}, {\n  durationDampening: _objectSpread(_objectSpread({}, defaultAutoScrollerOptions.durationDampening), props.autoScrollerOptions)\n});\nfunction getStore(lazyRef) {\n  !lazyRef.current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find store from lazy ref') : invariant(false) : void 0;\n  return lazyRef.current;\n}\nfunction App(props) {\n  const {\n    contextId,\n    setCallbacks,\n    sensors,\n    nonce,\n    dragHandleUsageInstructions\n  } = props;\n  const lazyStoreRef = useRef(null);\n  useStartupValidation();\n  const lastPropsRef = usePrevious(props);\n  const getResponders = useCallback(() => {\n    return createResponders(lastPropsRef.current);\n  }, [lastPropsRef]);\n  const getAutoScrollerOptions = useCallback(() => {\n    return createAutoScrollerOptions(lastPropsRef.current);\n  }, [lastPropsRef]);\n  const announce = useAnnouncer(contextId);\n  const dragHandleUsageInstructionsId = useHiddenTextElement({\n    contextId,\n    text: dragHandleUsageInstructions\n  });\n  const styleMarshal = useStyleMarshal(contextId, nonce);\n  const lazyDispatch = useCallback(action => {\n    getStore(lazyStoreRef).dispatch(action);\n  }, []);\n  const marshalCallbacks = useMemo(() => bindActionCreators({\n    publishWhileDragging,\n    updateDroppableScroll,\n    updateDroppableIsEnabled,\n    updateDroppableIsCombineEnabled,\n    collectionStarting\n  }, lazyDispatch), [lazyDispatch]);\n  const registry = useRegistry();\n  const dimensionMarshal = useMemo(() => {\n    return createDimensionMarshal(registry, marshalCallbacks);\n  }, [registry, marshalCallbacks]);\n  const autoScroller = useMemo(() => createAutoScroller(_objectSpread({\n    scrollWindow,\n    scrollDroppable: dimensionMarshal.scrollDroppable,\n    getAutoScrollerOptions\n  }, bindActionCreators({\n    move\n  }, lazyDispatch))), [dimensionMarshal.scrollDroppable, lazyDispatch, getAutoScrollerOptions]);\n  const focusMarshal = useFocusMarshal(contextId);\n  const store = useMemo(() => createStore({\n    announce,\n    autoScroller,\n    dimensionMarshal,\n    focusMarshal,\n    getResponders,\n    styleMarshal\n  }), [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);\n  if (process.env.NODE_ENV !== 'production') {\n    if (lazyStoreRef.current && lazyStoreRef.current !== store) {\n      process.env.NODE_ENV !== \"production\" ? warning('unexpected store change') : void 0;\n    }\n  }\n  lazyStoreRef.current = store;\n  const tryResetStore = useCallback(() => {\n    const current = getStore(lazyStoreRef);\n    const state = current.getState();\n    if (state.phase !== 'IDLE') {\n      current.dispatch(flush());\n    }\n  }, []);\n  const isDragging = useCallback(() => {\n    const state = getStore(lazyStoreRef).getState();\n    if (state.phase === 'DROP_ANIMATING') {\n      return true;\n    }\n    if (state.phase === 'IDLE') {\n      return false;\n    }\n    return state.isDragging;\n  }, []);\n  const appCallbacks = useMemo(() => ({\n    isDragging,\n    tryAbort: tryResetStore\n  }), [isDragging, tryResetStore]);\n  setCallbacks(appCallbacks);\n  const getCanLift = useCallback(id => canStartDrag(getStore(lazyStoreRef).getState(), id), []);\n  const getIsMovementAllowed = useCallback(() => isMovementAllowed(getStore(lazyStoreRef).getState()), []);\n  const appContext = useMemo(() => ({\n    marshal: dimensionMarshal,\n    focus: focusMarshal,\n    contextId,\n    canLift: getCanLift,\n    isMovementAllowed: getIsMovementAllowed,\n    dragHandleUsageInstructionsId,\n    registry\n  }), [contextId, dimensionMarshal, dragHandleUsageInstructionsId, focusMarshal, getCanLift, getIsMovementAllowed, registry]);\n  useSensorMarshal({\n    contextId,\n    store,\n    registry,\n    customSensors: sensors || null,\n    enableDefaultSensors: props.enableDefaultSensors !== false\n  });\n  useEffect(() => {\n    return tryResetStore;\n  }, [tryResetStore]);\n  return React.createElement(AppContext.Provider, {\n    value: appContext\n  }, React.createElement(Provider, {\n    context: StoreContext,\n    store: store\n  }, props.children));\n}\nlet count = 0;\nfunction resetDeprecatedUniqueContextId() {\n  count = 0;\n}\nfunction useDeprecatedUniqueContextId() {\n  return useMemo(() => \"\".concat(count++), []);\n}\nfunction useUniqueContextId() {\n  return React.useId();\n}\nvar useUniqueContextId$1 = 'useId' in React ? useUniqueContextId : useDeprecatedUniqueContextId;\nfunction resetServerContext() {\n  if ('useId' in React) {\n    process.env.NODE_ENV !== \"production\" ? warning(\"It is not necessary to call resetServerContext when using React 18+\") : void 0;\n    return;\n  }\n  resetDeprecatedUniqueContextId();\n  resetDeprecatedUniqueId();\n}\nfunction DragDropContext(props) {\n  const contextId = useUniqueContextId$1();\n  const dragHandleUsageInstructions = props.dragHandleUsageInstructions || preset$1.dragHandleUsageInstructions;\n  return React.createElement(ErrorBoundary, null, setCallbacks => React.createElement(App, {\n    nonce: props.nonce,\n    contextId: contextId,\n    setCallbacks: setCallbacks,\n    dragHandleUsageInstructions: dragHandleUsageInstructions,\n    enableDefaultSensors: props.enableDefaultSensors,\n    sensors: props.sensors,\n    onBeforeCapture: props.onBeforeCapture,\n    onBeforeDragStart: props.onBeforeDragStart,\n    onDragStart: props.onDragStart,\n    onDragUpdate: props.onDragUpdate,\n    onDragEnd: props.onDragEnd,\n    autoScrollerOptions: props.autoScrollerOptions\n  }, props.children));\n}\nconst zIndexOptions = {\n  dragging: 5000,\n  dropAnimating: 4500\n};\nconst getDraggingTransition = (shouldAnimateDragMovement, dropping) => {\n  if (dropping) {\n    return transitions.drop(dropping.duration);\n  }\n  if (shouldAnimateDragMovement) {\n    return transitions.snap;\n  }\n  return transitions.fluid;\n};\nconst getDraggingOpacity = (isCombining, isDropAnimating) => {\n  if (!isCombining) {\n    return undefined;\n  }\n  return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;\n};\nconst getShouldDraggingAnimate = dragging => {\n  if (dragging.forceShouldAnimate != null) {\n    return dragging.forceShouldAnimate;\n  }\n  return dragging.mode === 'SNAP';\n};\nfunction getDraggingStyle(dragging) {\n  const dimension = dragging.dimension;\n  const box = dimension.client;\n  const {\n    offset,\n    combineWith,\n    dropping\n  } = dragging;\n  const isCombining = Boolean(combineWith);\n  const shouldAnimate = getShouldDraggingAnimate(dragging);\n  const isDropAnimating = Boolean(dropping);\n  const transform = isDropAnimating ? transforms.drop(offset, isCombining) : transforms.moveTo(offset);\n  const style = {\n    position: 'fixed',\n    top: box.marginBox.top,\n    left: box.marginBox.left,\n    boxSizing: 'border-box',\n    width: box.borderBox.width,\n    height: box.borderBox.height,\n    transition: getDraggingTransition(shouldAnimate, dropping),\n    transform,\n    opacity: getDraggingOpacity(isCombining, isDropAnimating),\n    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,\n    pointerEvents: 'none'\n  };\n  return style;\n}\nfunction getSecondaryStyle(secondary) {\n  return {\n    transform: transforms.moveTo(secondary.offset),\n    transition: secondary.shouldAnimateDisplacement ? undefined : 'none'\n  };\n}\nfunction getStyle$1(mapped) {\n  return mapped.type === 'DRAGGING' ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);\n}\nfunction getDimension$1(descriptor, el) {\n  let windowScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : origin;\n  const computedStyles = window.getComputedStyle(el);\n  const borderBox = el.getBoundingClientRect();\n  const client = calculateBox(borderBox, computedStyles);\n  const page = withScroll(client, windowScroll);\n  const placeholder = {\n    client,\n    tagName: el.tagName.toLowerCase(),\n    display: computedStyles.display\n  };\n  const displaceBy = {\n    x: client.marginBox.width,\n    y: client.marginBox.height\n  };\n  const dimension = {\n    descriptor,\n    placeholder,\n    displaceBy,\n    client,\n    page\n  };\n  return dimension;\n}\nfunction useDraggablePublisher(args) {\n  const uniqueId = useUniqueId$1('draggable');\n  const {\n    descriptor,\n    registry,\n    getDraggableRef,\n    canDragInteractiveElements,\n    shouldRespectForcePress,\n    isEnabled\n  } = args;\n  const options = useMemo(() => ({\n    canDragInteractiveElements,\n    shouldRespectForcePress,\n    isEnabled\n  }), [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);\n  const getDimension = useCallback(windowScroll => {\n    const el = getDraggableRef();\n    !el ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot get dimension when no ref is set') : invariant(false) : void 0;\n    return getDimension$1(descriptor, el, windowScroll);\n  }, [descriptor, getDraggableRef]);\n  const entry = useMemo(() => ({\n    uniqueId,\n    descriptor,\n    options,\n    getDimension\n  }), [descriptor, getDimension, options, uniqueId]);\n  const publishedRef = useRef(entry);\n  const isFirstPublishRef = useRef(true);\n  useLayoutEffect(() => {\n    registry.draggable.register(publishedRef.current);\n    return () => registry.draggable.unregister(publishedRef.current);\n  }, [registry.draggable]);\n  useLayoutEffect(() => {\n    if (isFirstPublishRef.current) {\n      isFirstPublishRef.current = false;\n      return;\n    }\n    const last = publishedRef.current;\n    publishedRef.current = entry;\n    registry.draggable.update(entry, last);\n  }, [entry, registry.draggable]);\n}\nvar DroppableContext = React.createContext(null);\nfunction checkIsValidInnerRef(el) {\n  !(el && isHtmlElement(el)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"\\n    provided.innerRef has not been provided with a HTMLElement.\\n\\n    You can find a guide on using the innerRef callback functions at:\\n    https://github.com/hello-pangea/dnd/blob/main/docs/guides/using-inner-ref.md\\n  \") : invariant(false) : void 0;\n}\nfunction useValidation$1(props, contextId, getRef) {\n  useDevSetupWarning(() => {\n    function prefix(id) {\n      return \"Draggable[id: \".concat(id, \"]: \");\n    }\n    const id = props.draggableId;\n    !id ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Draggable requires a draggableId') : invariant(false) : void 0;\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Draggable requires a [string] draggableId.\\n      Provided: [type: \".concat(typeof id, \"] (value: \").concat(id, \")\")) : invariant(false) : void 0;\n    !Number.isInteger(props.index) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"\".concat(prefix(id), \" requires an integer index prop\")) : invariant(false) : void 0;\n    if (props.mapped.type === 'DRAGGING') {\n      return;\n    }\n    checkIsValidInnerRef(getRef());\n    if (props.isEnabled) {\n      !findDragHandle(contextId, id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"\".concat(prefix(id), \" Unable to find drag handle\")) : invariant(false) : void 0;\n    }\n  });\n}\nfunction useClonePropValidation(isClone) {\n  useDev(() => {\n    const initialRef = useRef(isClone);\n    useDevSetupWarning(() => {\n      !(isClone === initialRef.current) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Draggable isClone prop value changed during component life') : invariant(false) : void 0;\n    }, [isClone]);\n  });\n}\nfunction useRequiredContext(Context) {\n  const result = useContext(Context);\n  !result ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find required context') : invariant(false) : void 0;\n  return result;\n}\nfunction preventHtml5Dnd(event) {\n  event.preventDefault();\n}\nconst Draggable = props => {\n  const ref = useRef(null);\n  const setRef = useCallback(function () {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    ref.current = el;\n  }, []);\n  const getRef = useCallback(() => ref.current, []);\n  const {\n    contextId,\n    dragHandleUsageInstructionsId,\n    registry\n  } = useRequiredContext(AppContext);\n  const {\n    type,\n    droppableId\n  } = useRequiredContext(DroppableContext);\n  const descriptor = useMemo(() => ({\n    id: props.draggableId,\n    index: props.index,\n    type,\n    droppableId\n  }), [props.draggableId, props.index, type, droppableId]);\n  const {\n    children,\n    draggableId,\n    isEnabled,\n    shouldRespectForcePress,\n    canDragInteractiveElements,\n    isClone,\n    mapped,\n    dropAnimationFinished: dropAnimationFinishedAction\n  } = props;\n  useValidation$1(props, contextId, getRef);\n  useClonePropValidation(isClone);\n  if (!isClone) {\n    const forPublisher = useMemo(() => ({\n      descriptor,\n      registry,\n      getDraggableRef: getRef,\n      canDragInteractiveElements,\n      shouldRespectForcePress,\n      isEnabled\n    }), [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);\n    useDraggablePublisher(forPublisher);\n  }\n  const dragHandleProps = useMemo(() => isEnabled ? {\n    tabIndex: 0,\n    role: 'button',\n    'aria-describedby': dragHandleUsageInstructionsId,\n    'data-rfd-drag-handle-draggable-id': draggableId,\n    'data-rfd-drag-handle-context-id': contextId,\n    draggable: false,\n    onDragStart: preventHtml5Dnd\n  } : null, [contextId, dragHandleUsageInstructionsId, draggableId, isEnabled]);\n  const onMoveEnd = useCallback(event => {\n    if (mapped.type !== 'DRAGGING') {\n      return;\n    }\n    if (!mapped.dropping) {\n      return;\n    }\n    if (event.propertyName !== 'transform') {\n      return;\n    }\n    if (React.version.startsWith('16') || React.version.startsWith('17')) {\n      dropAnimationFinishedAction();\n    } else {\n      flushSync(dropAnimationFinishedAction);\n    }\n  }, [dropAnimationFinishedAction, mapped]);\n  const provided = useMemo(() => {\n    const style = getStyle$1(mapped);\n    const onTransitionEnd = mapped.type === 'DRAGGING' && mapped.dropping ? onMoveEnd : undefined;\n    const result = {\n      innerRef: setRef,\n      draggableProps: {\n        'data-rfd-draggable-context-id': contextId,\n        'data-rfd-draggable-id': draggableId,\n        style,\n        onTransitionEnd\n      },\n      dragHandleProps\n    };\n    return result;\n  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef]);\n  const rubric = useMemo(() => ({\n    draggableId: descriptor.id,\n    type: descriptor.type,\n    source: {\n      index: descriptor.index,\n      droppableId: descriptor.droppableId\n    }\n  }), [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);\n  return React.createElement(React.Fragment, null, children(provided, mapped.snapshot, rubric));\n};\nvar Draggable$1 = Draggable;\nvar isStrictEqual = (a, b) => a === b;\nvar whatIsDraggedOverFromResult = result => {\n  const {\n    combine,\n    destination\n  } = result;\n  if (destination) {\n    return destination.droppableId;\n  }\n  if (combine) {\n    return combine.droppableId;\n  }\n  return null;\n};\nconst getCombineWithFromResult = result => {\n  return result.combine ? result.combine.draggableId : null;\n};\nconst getCombineWithFromImpact = impact => {\n  return impact.at && impact.at.type === 'COMBINE' ? impact.at.combine.draggableId : null;\n};\nfunction getDraggableSelector() {\n  const memoizedOffset = memoizeOne((x, y) => ({\n    x,\n    y\n  }));\n  const getMemoizedSnapshot = memoizeOne(function (mode, isClone) {\n    let draggingOver = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let combineWith = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let dropping = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    return {\n      isDragging: true,\n      isClone,\n      isDropAnimating: Boolean(dropping),\n      dropAnimation: dropping,\n      mode,\n      draggingOver,\n      combineWith,\n      combineTargetFor: null\n    };\n  });\n  const getMemoizedProps = memoizeOne(function (offset, mode, dimension, isClone) {\n    let draggingOver = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let combineWith = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let forceShouldAnimate = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    return {\n      mapped: {\n        type: 'DRAGGING',\n        dropping: null,\n        draggingOver,\n        combineWith,\n        mode,\n        offset,\n        dimension,\n        forceShouldAnimate,\n        snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)\n      }\n    };\n  });\n  const selector = (state, ownProps) => {\n    if (isDragging(state)) {\n      if (state.critical.draggable.id !== ownProps.draggableId) {\n        return null;\n      }\n      const offset = state.current.client.offset;\n      const dimension = state.dimensions.draggables[ownProps.draggableId];\n      const draggingOver = whatIsDraggedOver(state.impact);\n      const combineWith = getCombineWithFromImpact(state.impact);\n      const forceShouldAnimate = state.forceShouldAnimate;\n      return getMemoizedProps(memoizedOffset(offset.x, offset.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (completed.result.draggableId !== ownProps.draggableId) {\n        return null;\n      }\n      const isClone = ownProps.isClone;\n      const dimension = state.dimensions.draggables[ownProps.draggableId];\n      const result = completed.result;\n      const mode = result.mode;\n      const draggingOver = whatIsDraggedOverFromResult(result);\n      const combineWith = getCombineWithFromResult(result);\n      const duration = state.dropDuration;\n      const dropping = {\n        duration,\n        curve: curves.drop,\n        moveTo: state.newHomeClientOffset,\n        opacity: combineWith ? combine.opacity.drop : null,\n        scale: combineWith ? combine.scale.drop : null\n      };\n      return {\n        mapped: {\n          type: 'DRAGGING',\n          offset: state.newHomeClientOffset,\n          dimension,\n          dropping,\n          draggingOver,\n          combineWith,\n          mode,\n          forceShouldAnimate: null,\n          snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, dropping)\n        }\n      };\n    }\n    return null;\n  };\n  return selector;\n}\nfunction getSecondarySnapshot() {\n  let combineTargetFor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return {\n    isDragging: false,\n    isDropAnimating: false,\n    isClone: false,\n    dropAnimation: null,\n    mode: null,\n    draggingOver: null,\n    combineTargetFor,\n    combineWith: null\n  };\n}\nconst atRest = {\n  mapped: {\n    type: 'SECONDARY',\n    offset: origin,\n    combineTargetFor: null,\n    shouldAnimateDisplacement: true,\n    snapshot: getSecondarySnapshot(null)\n  }\n};\nfunction getSecondarySelector() {\n  const memoizedOffset = memoizeOne((x, y) => ({\n    x,\n    y\n  }));\n  const getMemoizedSnapshot = memoizeOne(getSecondarySnapshot);\n  const getMemoizedProps = memoizeOne(function (offset) {\n    let combineTargetFor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let shouldAnimateDisplacement = arguments.length > 2 ? arguments[2] : undefined;\n    return {\n      mapped: {\n        type: 'SECONDARY',\n        offset,\n        combineTargetFor,\n        shouldAnimateDisplacement,\n        snapshot: getMemoizedSnapshot(combineTargetFor)\n      }\n    };\n  });\n  const getFallback = combineTargetFor => {\n    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;\n  };\n  const getProps = (ownId, draggingId, impact, afterCritical) => {\n    const visualDisplacement = impact.displaced.visible[ownId];\n    const isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);\n    const combine = tryGetCombine(impact);\n    const combineTargetFor = combine && combine.draggableId === ownId ? draggingId : null;\n    if (!visualDisplacement) {\n      if (!isAfterCriticalInVirtualList) {\n        return getFallback(combineTargetFor);\n      }\n      if (impact.displaced.invisible[ownId]) {\n        return null;\n      }\n      const change = negate(afterCritical.displacedBy.point);\n      const offset = memoizedOffset(change.x, change.y);\n      return getMemoizedProps(offset, combineTargetFor, true);\n    }\n    if (isAfterCriticalInVirtualList) {\n      return getFallback(combineTargetFor);\n    }\n    const displaceBy = impact.displacedBy.point;\n    const offset = memoizedOffset(displaceBy.x, displaceBy.y);\n    return getMemoizedProps(offset, combineTargetFor, visualDisplacement.shouldAnimate);\n  };\n  const selector = (state, ownProps) => {\n    if (isDragging(state)) {\n      if (state.critical.draggable.id === ownProps.draggableId) {\n        return null;\n      }\n      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (completed.result.draggableId === ownProps.draggableId) {\n        return null;\n      }\n      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);\n    }\n    return null;\n  };\n  return selector;\n}\nconst makeMapStateToProps$1 = () => {\n  const draggingSelector = getDraggableSelector();\n  const secondarySelector = getSecondarySelector();\n  const selector = (state, ownProps) => draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;\n  return selector;\n};\nconst mapDispatchToProps$1 = {\n  dropAnimationFinished: dropAnimationFinished\n};\nconst ConnectedDraggable = connect(makeMapStateToProps$1, mapDispatchToProps$1, null, {\n  context: StoreContext,\n  areStatePropsEqual: isStrictEqual\n})(Draggable$1);\nvar ConnectedDraggable$1 = ConnectedDraggable;\nfunction PrivateDraggable(props) {\n  const droppableContext = useRequiredContext(DroppableContext);\n  const isUsingCloneFor = droppableContext.isUsingCloneFor;\n  if (isUsingCloneFor === props.draggableId && !props.isClone) {\n    return null;\n  }\n  return React.createElement(ConnectedDraggable$1, props);\n}\nfunction PublicDraggable(props) {\n  const isEnabled = typeof props.isDragDisabled === 'boolean' ? !props.isDragDisabled : true;\n  const canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);\n  const shouldRespectForcePress = Boolean(props.shouldRespectForcePress);\n  return React.createElement(PrivateDraggable, _extends({}, props, {\n    isClone: false,\n    isEnabled: isEnabled,\n    canDragInteractiveElements: canDragInteractiveElements,\n    shouldRespectForcePress: shouldRespectForcePress\n  }));\n}\nconst isEqual = base => value => base === value;\nconst isScroll = isEqual('scroll');\nconst isAuto = isEqual('auto');\nconst isVisible = isEqual('visible');\nconst isEither = (overflow, fn) => fn(overflow.overflowX) || fn(overflow.overflowY);\nconst isBoth = (overflow, fn) => fn(overflow.overflowX) && fn(overflow.overflowY);\nconst isElementScrollable = el => {\n  const style = window.getComputedStyle(el);\n  const overflow = {\n    overflowX: style.overflowX,\n    overflowY: style.overflowY\n  };\n  return isEither(overflow, isScroll) || isEither(overflow, isAuto);\n};\nconst isBodyScrollable = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return false;\n  }\n  const body = getBodyElement();\n  const html = document.documentElement;\n  !html ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  if (!isElementScrollable(body)) {\n    return false;\n  }\n  const htmlStyle = window.getComputedStyle(html);\n  const htmlOverflow = {\n    overflowX: htmlStyle.overflowX,\n    overflowY: htmlStyle.overflowY\n  };\n  if (isBoth(htmlOverflow, isVisible)) {\n    return false;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(\"\\n    We have detected that your <body> element might be a scroll container.\\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\\n\\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\\n    we will be treating the <body> as *not* a scroll container\\n\\n    More information: https://github.com/hello-pangea/dnd/blob/main/docs/guides/how-we-detect-scroll-containers.md\\n  \") : void 0;\n  return false;\n};\nconst getClosestScrollable = el => {\n  if (el == null) {\n    return null;\n  }\n  if (el === document.body) {\n    return isBodyScrollable() ? el : null;\n  }\n  if (el === document.documentElement) {\n    return null;\n  }\n  if (!isElementScrollable(el)) {\n    return getClosestScrollable(el.parentElement);\n  }\n  return el;\n};\nvar checkForNestedScrollContainers = scrollable => {\n  if (!scrollable) {\n    return;\n  }\n  const anotherScrollParent = getClosestScrollable(scrollable.parentElement);\n  if (!anotherScrollParent) {\n    return;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(\"\\n    Droppable: unsupported nested scroll container detected.\\n    A Droppable can only have one scroll parent (which can be itself)\\n    Nested scroll containers are currently not supported.\\n\\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\\n  \") : void 0;\n};\nvar getScroll = el => ({\n  x: el.scrollLeft,\n  y: el.scrollTop\n});\nconst getIsFixed = el => {\n  if (!el) {\n    return false;\n  }\n  const style = window.getComputedStyle(el);\n  if (style.position === 'fixed') {\n    return true;\n  }\n  return getIsFixed(el.parentElement);\n};\nvar getEnv = start => {\n  const closestScrollable = getClosestScrollable(start);\n  const isFixedOnPage = getIsFixed(start);\n  return {\n    closestScrollable,\n    isFixedOnPage\n  };\n};\nvar getDroppableDimension = _ref74 => {\n  let {\n    descriptor,\n    isEnabled,\n    isCombineEnabled,\n    isFixedOnPage,\n    direction,\n    client,\n    page,\n    closest\n  } = _ref74;\n  const frame = (() => {\n    if (!closest) {\n      return null;\n    }\n    const {\n      scrollSize,\n      client: frameClient\n    } = closest;\n    const maxScroll = getMaxScroll({\n      scrollHeight: scrollSize.scrollHeight,\n      scrollWidth: scrollSize.scrollWidth,\n      height: frameClient.paddingBox.height,\n      width: frameClient.paddingBox.width\n    });\n    return {\n      pageMarginBox: closest.page.marginBox,\n      frameClient,\n      scrollSize,\n      shouldClipSubject: closest.shouldClipSubject,\n      scroll: {\n        initial: closest.scroll,\n        current: closest.scroll,\n        max: maxScroll,\n        diff: {\n          value: origin,\n          displacement: origin\n        }\n      }\n    };\n  })();\n  const axis = direction === 'vertical' ? vertical : horizontal;\n  const subject = getSubject({\n    page,\n    withPlaceholder: null,\n    axis,\n    frame\n  });\n  const dimension = {\n    descriptor,\n    isCombineEnabled,\n    isFixedOnPage,\n    axis,\n    isEnabled,\n    client,\n    page,\n    frame,\n    subject\n  };\n  return dimension;\n};\nconst getClient = (targetRef, closestScrollable) => {\n  const base = getBox(targetRef);\n  if (!closestScrollable) {\n    return base;\n  }\n  if (targetRef !== closestScrollable) {\n    return base;\n  }\n  const top = base.paddingBox.top - closestScrollable.scrollTop;\n  const left = base.paddingBox.left - closestScrollable.scrollLeft;\n  const bottom = top + closestScrollable.scrollHeight;\n  const right = left + closestScrollable.scrollWidth;\n  const paddingBox = {\n    top,\n    right,\n    bottom,\n    left\n  };\n  const borderBox = expand(paddingBox, base.border);\n  const client = createBox({\n    borderBox,\n    margin: base.margin,\n    border: base.border,\n    padding: base.padding\n  });\n  return client;\n};\nvar getDimension = _ref75 => {\n  let {\n    ref,\n    descriptor,\n    env,\n    windowScroll,\n    direction,\n    isDropDisabled,\n    isCombineEnabled,\n    shouldClipSubject\n  } = _ref75;\n  const closestScrollable = env.closestScrollable;\n  const client = getClient(ref, closestScrollable);\n  const page = withScroll(client, windowScroll);\n  const closest = (() => {\n    if (!closestScrollable) {\n      return null;\n    }\n    const frameClient = getBox(closestScrollable);\n    const scrollSize = {\n      scrollHeight: closestScrollable.scrollHeight,\n      scrollWidth: closestScrollable.scrollWidth\n    };\n    return {\n      client: frameClient,\n      page: withScroll(frameClient, windowScroll),\n      scroll: getScroll(closestScrollable),\n      scrollSize,\n      shouldClipSubject\n    };\n  })();\n  const dimension = getDroppableDimension({\n    descriptor,\n    isEnabled: !isDropDisabled,\n    isCombineEnabled,\n    isFixedOnPage: env.isFixedOnPage,\n    direction,\n    client,\n    page,\n    closest\n  });\n  return dimension;\n};\nconst immediate = {\n  passive: false\n};\nconst delayed = {\n  passive: true\n};\nvar getListenerOptions = options => options.shouldPublishImmediately ? immediate : delayed;\nconst getClosestScrollableFromDrag = dragging => dragging && dragging.env.closestScrollable || null;\nfunction useDroppablePublisher(args) {\n  const whileDraggingRef = useRef(null);\n  const appContext = useRequiredContext(AppContext);\n  const uniqueId = useUniqueId$1('droppable');\n  const {\n    registry,\n    marshal\n  } = appContext;\n  const previousRef = usePrevious(args);\n  const descriptor = useMemo(() => ({\n    id: args.droppableId,\n    type: args.type,\n    mode: args.mode\n  }), [args.droppableId, args.mode, args.type]);\n  const publishedDescriptorRef = useRef(descriptor);\n  const memoizedUpdateScroll = useMemo(() => memoizeOne((x, y) => {\n    !whileDraggingRef.current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only update scroll when dragging') : invariant(false) : void 0;\n    const scroll = {\n      x,\n      y\n    };\n    marshal.updateDroppableScroll(descriptor.id, scroll);\n  }), [descriptor.id, marshal]);\n  const getClosestScroll = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    if (!dragging || !dragging.env.closestScrollable) {\n      return origin;\n    }\n    return getScroll(dragging.env.closestScrollable);\n  }, []);\n  const updateScroll = useCallback(() => {\n    const scroll = getClosestScroll();\n    memoizedUpdateScroll(scroll.x, scroll.y);\n  }, [getClosestScroll, memoizedUpdateScroll]);\n  const scheduleScrollUpdate = useMemo(() => rafSchd(updateScroll), [updateScroll]);\n  const onClosestScroll = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    const closest = getClosestScrollableFromDrag(dragging);\n    !(dragging && closest) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find scroll options while scrolling') : invariant(false) : void 0;\n    const options = dragging.scrollOptions;\n    if (options.shouldPublishImmediately) {\n      updateScroll();\n      return;\n    }\n    scheduleScrollUpdate();\n  }, [scheduleScrollUpdate, updateScroll]);\n  const getDimensionAndWatchScroll = useCallback((windowScroll, options) => {\n    !!whileDraggingRef.current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot collect a droppable while a drag is occurring') : invariant(false) : void 0;\n    const previous = previousRef.current;\n    const ref = previous.getDroppableRef();\n    !ref ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot collect without a droppable ref') : invariant(false) : void 0;\n    const env = getEnv(ref);\n    const dragging = {\n      ref,\n      descriptor,\n      env,\n      scrollOptions: options\n    };\n    whileDraggingRef.current = dragging;\n    const dimension = getDimension({\n      ref,\n      descriptor,\n      env,\n      windowScroll,\n      direction: previous.direction,\n      isDropDisabled: previous.isDropDisabled,\n      isCombineEnabled: previous.isCombineEnabled,\n      shouldClipSubject: !previous.ignoreContainerClipping\n    });\n    const scrollable = env.closestScrollable;\n    if (scrollable) {\n      scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);\n      scrollable.addEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));\n      if (process.env.NODE_ENV !== 'production') {\n        checkForNestedScrollContainers(scrollable);\n      }\n    }\n    return dimension;\n  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);\n  const getScrollWhileDragging = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    const closest = getClosestScrollableFromDrag(dragging);\n    !(dragging && closest) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only recollect Droppable client for Droppables that have a scroll container') : invariant(false) : void 0;\n    return getScroll(closest);\n  }, []);\n  const dragStopped = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot stop drag when no active drag') : invariant(false) : void 0;\n    const closest = getClosestScrollableFromDrag(dragging);\n    whileDraggingRef.current = null;\n    if (!closest) {\n      return;\n    }\n    scheduleScrollUpdate.cancel();\n    closest.removeAttribute(scrollContainer.contextId);\n    closest.removeEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));\n  }, [onClosestScroll, scheduleScrollUpdate]);\n  const scroll = useCallback(change => {\n    const dragging = whileDraggingRef.current;\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot scroll when there is no drag') : invariant(false) : void 0;\n    const closest = getClosestScrollableFromDrag(dragging);\n    !closest ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot scroll a droppable with no closest scrollable') : invariant(false) : void 0;\n    closest.scrollTop += change.y;\n    closest.scrollLeft += change.x;\n  }, []);\n  const callbacks = useMemo(() => {\n    return {\n      getDimensionAndWatchScroll,\n      getScrollWhileDragging,\n      dragStopped,\n      scroll\n    };\n  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll]);\n  const entry = useMemo(() => ({\n    uniqueId,\n    descriptor,\n    callbacks\n  }), [callbacks, descriptor, uniqueId]);\n  useLayoutEffect(() => {\n    publishedDescriptorRef.current = entry.descriptor;\n    registry.droppable.register(entry);\n    return () => {\n      if (whileDraggingRef.current) {\n        process.env.NODE_ENV !== \"production\" ? warning('Unsupported: changing the droppableId or type of a Droppable during a drag') : void 0;\n        dragStopped();\n      }\n      registry.droppable.unregister(entry);\n    };\n  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);\n  useLayoutEffect(() => {\n    if (!whileDraggingRef.current) {\n      return;\n    }\n    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);\n  }, [args.isDropDisabled, marshal]);\n  useLayoutEffect(() => {\n    if (!whileDraggingRef.current) {\n      return;\n    }\n    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);\n  }, [args.isCombineEnabled, marshal]);\n}\nfunction noop() {}\nconst empty = {\n  width: 0,\n  height: 0,\n  margin: noSpacing\n};\nconst getSize = _ref76 => {\n  let {\n    isAnimatingOpenOnMount,\n    placeholder,\n    animate\n  } = _ref76;\n  if (isAnimatingOpenOnMount) {\n    return empty;\n  }\n  if (animate === 'close') {\n    return empty;\n  }\n  return {\n    height: placeholder.client.borderBox.height,\n    width: placeholder.client.borderBox.width,\n    margin: placeholder.client.margin\n  };\n};\nconst getStyle = _ref77 => {\n  let {\n    isAnimatingOpenOnMount,\n    placeholder,\n    animate\n  } = _ref77;\n  const size = getSize({\n    isAnimatingOpenOnMount,\n    placeholder,\n    animate\n  });\n  return {\n    display: placeholder.display,\n    boxSizing: 'border-box',\n    width: size.width,\n    height: size.height,\n    marginTop: size.margin.top,\n    marginRight: size.margin.right,\n    marginBottom: size.margin.bottom,\n    marginLeft: size.margin.left,\n    flexShrink: '0',\n    flexGrow: '0',\n    pointerEvents: 'none',\n    transition: animate !== 'none' ? transitions.placeholder : null\n  };\n};\nconst Placeholder = props => {\n  const animateOpenTimerRef = useRef(null);\n  const tryClearAnimateOpenTimer = useCallback(() => {\n    if (!animateOpenTimerRef.current) {\n      return;\n    }\n    clearTimeout(animateOpenTimerRef.current);\n    animateOpenTimerRef.current = null;\n  }, []);\n  const {\n    animate,\n    onTransitionEnd,\n    onClose,\n    contextId\n  } = props;\n  const [isAnimatingOpenOnMount, setIsAnimatingOpenOnMount] = useState(props.animate === 'open');\n  useEffect(() => {\n    if (!isAnimatingOpenOnMount) {\n      return noop;\n    }\n    if (animate !== 'open') {\n      tryClearAnimateOpenTimer();\n      setIsAnimatingOpenOnMount(false);\n      return noop;\n    }\n    if (animateOpenTimerRef.current) {\n      return noop;\n    }\n    animateOpenTimerRef.current = setTimeout(() => {\n      animateOpenTimerRef.current = null;\n      setIsAnimatingOpenOnMount(false);\n    });\n    return tryClearAnimateOpenTimer;\n  }, [animate, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);\n  const onSizeChangeEnd = useCallback(event => {\n    if (event.propertyName !== 'height') {\n      return;\n    }\n    onTransitionEnd();\n    if (animate === 'close') {\n      onClose();\n    }\n  }, [animate, onClose, onTransitionEnd]);\n  const style = getStyle({\n    isAnimatingOpenOnMount,\n    animate: props.animate,\n    placeholder: props.placeholder\n  });\n  return React.createElement(props.placeholder.tagName, {\n    style,\n    'data-rfd-placeholder-context-id': contextId,\n    onTransitionEnd: onSizeChangeEnd,\n    ref: props.innerRef\n  });\n};\nvar Placeholder$1 = React.memo(Placeholder);\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction runChecks(args, checks) {\n  checks.forEach(check => check(args));\n}\nconst shared = [function required(_ref78) {\n  let {\n    props\n  } = _ref78;\n  !props.droppableId ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A Droppable requires a droppableId prop') : invariant(false) : void 0;\n  !(typeof props.droppableId === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"A Droppable requires a [string] droppableId. Provided: [\".concat(typeof props.droppableId, \"]\")) : invariant(false) : void 0;\n}, function boolean(_ref79) {\n  let {\n    props\n  } = _ref79;\n  !isBoolean(props.isDropDisabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isDropDisabled must be a boolean') : invariant(false) : void 0;\n  !isBoolean(props.isCombineEnabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isCombineEnabled must be a boolean') : invariant(false) : void 0;\n  !isBoolean(props.ignoreContainerClipping) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ignoreContainerClipping must be a boolean') : invariant(false) : void 0;\n}, function ref(_ref80) {\n  let {\n    getDroppableRef\n  } = _ref80;\n  checkIsValidInnerRef(getDroppableRef());\n}];\nconst standard = [function placeholder(_ref81) {\n  let {\n    props,\n    getPlaceholderRef\n  } = _ref81;\n  if (!props.placeholder) {\n    return;\n  }\n  const ref = getPlaceholderRef();\n  if (ref) {\n    return;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(\"\\n      Droppable setup issue [droppableId: \\\"\".concat(props.droppableId, \"\\\"]:\\n      DroppableProvided > placeholder could not be found.\\n\\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\\n      More information: https://github.com/hello-pangea/dnd/blob/main/docs/api/droppable.md\\n    \")) : void 0;\n}];\nconst virtual = [function hasClone(_ref82) {\n  let {\n    props\n  } = _ref82;\n  !props.renderClone ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Must provide a clone render function (renderClone) for virtual lists') : invariant(false) : void 0;\n}, function hasNoPlaceholder(_ref83) {\n  let {\n    getPlaceholderRef\n  } = _ref83;\n  !!getPlaceholderRef() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected virtual list to not have a placeholder') : invariant(false) : void 0;\n}];\nfunction useValidation(args) {\n  useDevSetupWarning(() => {\n    runChecks(args, shared);\n    if (args.props.mode === 'standard') {\n      runChecks(args, standard);\n    }\n    if (args.props.mode === 'virtual') {\n      runChecks(args, virtual);\n    }\n  });\n}\nclass AnimateInOut extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isVisible: Boolean(this.props.on),\n      data: this.props.on,\n      animate: this.props.shouldAnimate && this.props.on ? 'open' : 'none'\n    };\n    this.onClose = () => {\n      if (this.state.animate !== 'close') {\n        return;\n      }\n      this.setState({\n        isVisible: false\n      });\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (!props.shouldAnimate) {\n      return {\n        isVisible: Boolean(props.on),\n        data: props.on,\n        animate: 'none'\n      };\n    }\n    if (props.on) {\n      return {\n        isVisible: true,\n        data: props.on,\n        animate: 'open'\n      };\n    }\n    if (state.isVisible) {\n      return {\n        isVisible: true,\n        data: state.data,\n        animate: 'close'\n      };\n    }\n    return {\n      isVisible: false,\n      animate: 'close',\n      data: null\n    };\n  }\n  render() {\n    if (!this.state.isVisible) {\n      return null;\n    }\n    const provided = {\n      onClose: this.onClose,\n      data: this.state.data,\n      animate: this.state.animate\n    };\n    return this.props.children(provided);\n  }\n}\nconst Droppable = props => {\n  const appContext = useContext(AppContext);\n  !appContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find app context') : invariant(false) : void 0;\n  const {\n    contextId,\n    isMovementAllowed\n  } = appContext;\n  const droppableRef = useRef(null);\n  const placeholderRef = useRef(null);\n  const {\n    children,\n    droppableId,\n    type,\n    mode,\n    direction,\n    ignoreContainerClipping,\n    isDropDisabled,\n    isCombineEnabled,\n    snapshot,\n    useClone,\n    updateViewportMaxScroll,\n    getContainerForClone\n  } = props;\n  const getDroppableRef = useCallback(() => droppableRef.current, []);\n  const setDroppableRef = useCallback(function () {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    droppableRef.current = value;\n  }, []);\n  const getPlaceholderRef = useCallback(() => placeholderRef.current, []);\n  const setPlaceholderRef = useCallback(function () {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    placeholderRef.current = value;\n  }, []);\n  useValidation({\n    props,\n    getDroppableRef,\n    getPlaceholderRef\n  });\n  const onPlaceholderTransitionEnd = useCallback(() => {\n    if (isMovementAllowed()) {\n      updateViewportMaxScroll({\n        maxScroll: getMaxWindowScroll()\n      });\n    }\n  }, [isMovementAllowed, updateViewportMaxScroll]);\n  useDroppablePublisher({\n    droppableId,\n    type,\n    mode,\n    direction,\n    isDropDisabled,\n    isCombineEnabled,\n    ignoreContainerClipping,\n    getDroppableRef\n  });\n  const placeholder = useMemo(() => React.createElement(AnimateInOut, {\n    on: props.placeholder,\n    shouldAnimate: props.shouldAnimatePlaceholder\n  }, _ref84 => {\n    let {\n      onClose,\n      data,\n      animate\n    } = _ref84;\n    return React.createElement(Placeholder$1, {\n      placeholder: data,\n      onClose: onClose,\n      innerRef: setPlaceholderRef,\n      animate: animate,\n      contextId: contextId,\n      onTransitionEnd: onPlaceholderTransitionEnd\n    });\n  }), [contextId, onPlaceholderTransitionEnd, props.placeholder, props.shouldAnimatePlaceholder, setPlaceholderRef]);\n  const provided = useMemo(() => ({\n    innerRef: setDroppableRef,\n    placeholder,\n    droppableProps: {\n      'data-rfd-droppable-id': droppableId,\n      'data-rfd-droppable-context-id': contextId\n    }\n  }), [contextId, droppableId, placeholder, setDroppableRef]);\n  const isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;\n  const droppableContext = useMemo(() => ({\n    droppableId,\n    type,\n    isUsingCloneFor\n  }), [droppableId, isUsingCloneFor, type]);\n  function getClone() {\n    if (!useClone) {\n      return null;\n    }\n    const {\n      dragging,\n      render\n    } = useClone;\n    const node = React.createElement(PrivateDraggable, {\n      draggableId: dragging.draggableId,\n      index: dragging.source.index,\n      isClone: true,\n      isEnabled: true,\n      shouldRespectForcePress: false,\n      canDragInteractiveElements: true\n    }, (draggableProvided, draggableSnapshot) => render(draggableProvided, draggableSnapshot, dragging));\n    return ReactDOM.createPortal(node, getContainerForClone());\n  }\n  return React.createElement(DroppableContext.Provider, {\n    value: droppableContext\n  }, children(provided, snapshot), getClone());\n};\nvar Droppable$1 = Droppable;\nfunction getBody() {\n  !document.body ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'document.body is not ready') : invariant(false) : void 0;\n  return document.body;\n}\nconst defaultProps = {\n  mode: 'standard',\n  type: 'DEFAULT',\n  direction: 'vertical',\n  isDropDisabled: false,\n  isCombineEnabled: false,\n  ignoreContainerClipping: false,\n  renderClone: null,\n  getContainerForClone: getBody\n};\nconst attachDefaultPropsToOwnProps = ownProps => {\n  let mergedProps = _objectSpread({}, ownProps);\n  let defaultPropKey;\n  for (defaultPropKey in defaultProps) {\n    if (ownProps[defaultPropKey] === undefined) {\n      mergedProps = _objectSpread(_objectSpread({}, mergedProps), {}, {\n        [defaultPropKey]: defaultProps[defaultPropKey]\n      });\n    }\n  }\n  return mergedProps;\n};\nconst isMatchingType = (type, critical) => type === critical.droppable.type;\nconst getDraggable = (critical, dimensions) => dimensions.draggables[critical.draggable.id];\nconst makeMapStateToProps = () => {\n  const idleWithAnimation = {\n    placeholder: null,\n    shouldAnimatePlaceholder: true,\n    snapshot: {\n      isDraggingOver: false,\n      draggingOverWith: null,\n      draggingFromThisWith: null,\n      isUsingPlaceholder: false\n    },\n    useClone: null\n  };\n  const idleWithoutAnimation = _objectSpread(_objectSpread({}, idleWithAnimation), {}, {\n    shouldAnimatePlaceholder: false\n  });\n  const getDraggableRubric = memoizeOne(descriptor => ({\n    draggableId: descriptor.id,\n    type: descriptor.type,\n    source: {\n      index: descriptor.index,\n      droppableId: descriptor.droppableId\n    }\n  }));\n  const getMapProps = memoizeOne((id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) => {\n    const draggableId = dragging.descriptor.id;\n    const isHome = dragging.descriptor.droppableId === id;\n    if (isHome) {\n      const useClone = renderClone ? {\n        render: renderClone,\n        dragging: getDraggableRubric(dragging.descriptor)\n      } : null;\n      const snapshot = {\n        isDraggingOver: isDraggingOverForConsumer,\n        draggingOverWith: isDraggingOverForConsumer ? draggableId : null,\n        draggingFromThisWith: draggableId,\n        isUsingPlaceholder: true\n      };\n      return {\n        placeholder: dragging.placeholder,\n        shouldAnimatePlaceholder: false,\n        snapshot,\n        useClone\n      };\n    }\n    if (!isEnabled) {\n      return idleWithoutAnimation;\n    }\n    if (!isDraggingOverForImpact) {\n      return idleWithAnimation;\n    }\n    const snapshot = {\n      isDraggingOver: isDraggingOverForConsumer,\n      draggingOverWith: draggableId,\n      draggingFromThisWith: null,\n      isUsingPlaceholder: true\n    };\n    return {\n      placeholder: dragging.placeholder,\n      shouldAnimatePlaceholder: true,\n      snapshot,\n      useClone: null\n    };\n  });\n  const selector = (state, ownProps) => {\n    const ownPropsWithDefaultProps = attachDefaultPropsToOwnProps(ownProps);\n    const id = ownPropsWithDefaultProps.droppableId;\n    const type = ownPropsWithDefaultProps.type;\n    const isEnabled = !ownPropsWithDefaultProps.isDropDisabled;\n    const renderClone = ownPropsWithDefaultProps.renderClone;\n    if (isDragging(state)) {\n      const critical = state.critical;\n      if (!isMatchingType(type, critical)) {\n        return idleWithoutAnimation;\n      }\n      const dragging = getDraggable(critical, state.dimensions);\n      const isDraggingOver = whatIsDraggedOver(state.impact) === id;\n      return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (!isMatchingType(type, completed.critical)) {\n        return idleWithoutAnimation;\n      }\n      const dragging = getDraggable(completed.critical, state.dimensions);\n      return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, dragging, renderClone);\n    }\n    if (state.phase === 'IDLE' && state.completed && !state.shouldFlush) {\n      const completed = state.completed;\n      if (!isMatchingType(type, completed.critical)) {\n        return idleWithoutAnimation;\n      }\n      const wasOver = whatIsDraggedOver(completed.impact) === id;\n      const wasCombining = Boolean(completed.impact.at && completed.impact.at.type === 'COMBINE');\n      const isHome = completed.critical.droppable.id === id;\n      if (wasOver) {\n        return wasCombining ? idleWithAnimation : idleWithoutAnimation;\n      }\n      if (isHome) {\n        return idleWithAnimation;\n      }\n      return idleWithoutAnimation;\n    }\n    return idleWithoutAnimation;\n  };\n  return selector;\n};\nconst mapDispatchToProps = {\n  updateViewportMaxScroll: updateViewportMaxScroll\n};\nconst ConnectedDroppable = connect(makeMapStateToProps, mapDispatchToProps, (stateProps, dispatchProps, ownProps) => {\n  return _objectSpread(_objectSpread(_objectSpread({}, attachDefaultPropsToOwnProps(ownProps)), stateProps), dispatchProps);\n}, {\n  context: StoreContext,\n  areStatePropsEqual: isStrictEqual\n})(Droppable$1);\nvar ConnectedDroppable$1 = ConnectedDroppable;\nexport { DragDropContext, PublicDraggable as Draggable, ConnectedDroppable$1 as Droppable, resetServerContext, useKeyboardSensor, useMouseSensor, useTouchSensor };","map":{"version":3,"names":["React","useLayoutEffect","useLayoutEffect$1","useEffect","useRef","useState","useContext","ReactDOM","flushSync","createStore","createStore$1","applyMiddleware","compose","bindActionCreators","Provider","connect","useMemo","useCallback","getRect","expand","offset","withScroll","calculateBox","getBox","createBox","memoizeOne","rafSchd","_extends","isProduction$1","process","env","NODE_ENV","spacesAndTabs","lineStartWithSpaces","clean$2","value","replace","trim","getDevMessage","message","concat","getFormattedMessage","isDisabledFlag","log","type","window","console","warning","bind","error","noop$2","getOptions","shared","fromBinding","_objectSpread","bindEvents","el","bindings","sharedOptions","unbindings","map","binding","options","addEventListener","eventName","fn","unbind","removeEventListener","unbindAll","forEach","isProduction","prefix$1","RbdInvariant","Error","prototype","toString","invariant","condition","ErrorBoundary","Component","constructor","arguments","callbacks","onWindowError","event","getCallbacks","isDragging","tryAbort","err","preventDefault","setCallbacks","componentDidMount","componentDidCatch","setState","componentWillUnmount","render","props","children","dragHandleUsageInstructions","position","index","onDragStart","start","source","withLocation","destination","isInHomeList","droppableId","startPosition","endPosition","withCombine","id","combine","inHomeList","draggableId","onDragUpdate","update","location","returnedToStart","onDragEnd","result","reason","preset","preset$1","origin","x","y","add","point1","point2","subtract","isEqual$1","negate","point","patch","line","otherValue","length","undefined","distance","Math","sqrt","closest$1","target","points","min","apply","executeClip","frame","subject","top","max","right","bottom","left","width","height","offsetByPosition","spacing","getCorners","noSpacing","scroll$1","scroll","diff","displacement","increase","axis","withPlaceholder","increasedBy","end","clip","shouldClipSubject","pageMarginBox","getSubject","_ref","page","scrolled","marginBox","increased","clipped","active","scrollDroppable","droppable","newScroll","scrollable","scrollDiff","initial","scrollDisplacement","current","toDroppableMap","droppables","reduce","previous","descriptor","toDraggableMap","draggables","toDroppableList","Object","values","toDraggableList","getDraggablesInsideDroppable","filter","draggable","sort","a","b","tryGetDestination","impact","at","tryGetCombine","removeDraggableFromList","remove","list","item","moveToNextCombine","_ref2","isMovingForward","insideDestination","previousImpact","isCombineEnabled","getImpact","all","displaced","closestId","withoutDraggable","last","indexOfClosest","findIndex","d","proposedIndex","before","isHomeOf","noDisplacedBy","emptyGroups","invisible","visible","noImpact","displacedBy","noImpact$1","isWithin","lowerBound","upperBound","isPartiallyVisibleThroughFrame","isWithinVertical","isWithinHorizontal","isContained","isPartiallyVisibleVertically","isPartiallyVisibleHorizontally","isPartiallyContained","isBiggerVertically","isBiggerHorizontally","isTargetBiggerThanFrame","isTargetBiggerOnOneAxis","isTotallyVisibleThroughFrame","vertical","direction","crossAxisLine","size","crossAxisStart","crossAxisEnd","crossAxisSize","horizontal","isTotallyVisibleThroughFrameOnAxis","getDroppableDisplaced","isVisibleInDroppable","isVisibleThroughFrameFn","isVisibleInViewport","viewport","isVisible$1","_ref3","toBeDisplaced","withDroppableDisplacement","displacedTarget","isPartiallyVisible","args","isTotallyVisible","isTotallyVisibleOnAxis","getShouldAnimate","forceShouldAnimate","shouldAnimate","getTarget","expandBy","getDisplacementGroups","_ref4","afterDragging","groups","push","isVisible","getIndexOfLastItem","indexOfLastItem","goAtEnd","_ref5","newIndex","calculateReorderImpact","_ref6","match","find","withoutDragging","sliceFrom","indexOf","impacted","slice","didStartAfterCritical","afterCritical","Boolean","effected","fromCombine","_ref7","combineId","combineWith","combineWithIndex","didCombineWithStartAfterCritical","fromReorder","_ref8","currentIndex","firstIndex","lastIndex","moveToNextIndex","_ref9","wasAt","getCombinedItemDisplacement","_ref0","isDisplaced","whenCombining","_ref1","center","borderBox","displaceBy","distanceFromStartToBorderBoxCenter","box","margin","distanceFromEndToBorderBoxCenter","getCrossAxisBorderBoxCenter","isMoving","goAfter","_ref10","moveRelativeTo","goBefore","_ref11","goIntoStart","_ref12","moveInto","contentBox","whenReordering","_ref13","draggablePage","closestAfter","closest","withDisplacement","getResultWithoutDroppableDisplacement","_ref14","original","getPageBorderBoxCenterFromImpact","withoutDisplacement","scrollViewport","updated","getDraggables$1","ids","tryGetVisible","i","speculativelyIncrease","_ref15","maxScrollChange","scrolledViewport","scrolledDroppable","withViewportScroll","withDroppableScroll","newImpact","withViewportDisplacement","getClientFromPageBorderBoxCenter","_ref16","pageBorderBoxCenter","withoutPageScrollChange","client","isTotallyVisibleInNewLocation","_ref17","newPageBorderBoxCenter","onlyOnMainAxis","changeNeeded","shifted","moveToNextPlace","_ref18","previousPageBorderBoxCenter","previousClientSelection","isEnabled","isVisibleInNewLocation","clientSelection","scrollJumpRequest","cautious","getKnownActive","rect","getBestCrossAxisDroppable","_ref19","isBetweenSourceClipped","candidates","activeOfTarget","isBetweenDestinationClipped","first","second","array","contains","isWithinDroppable","getCurrentPageBorderBoxCenter","getCurrentPageBorderBox","getClosestDraggable","_ref20","sorted","distanceToA","distanceToB","getDisplacedBy","getRequiredGrowthForPlaceholder","placeholderSize","mode","availableSpace","insideDroppable","spaceUsed","sum","dimension","requiredSpace","needsToGrowBy","withMaxScroll","addPlaceholder","requiredGrowth","added","oldFrameMaxScroll","maxScroll","newFrame","removePlaceholder","oldMaxScroll","moveToNewDroppable","_ref21","proposed","proposedPageBorderBoxCenter","isGoingBeforeTarget","relativeTo","moveCrossAxis","_ref22","isOver","whatIsDraggedOver","getDroppableOver$1","moveInDirection","_ref23","state","isActuallyOver","dimensions","isMainAxisMovementAllowed","home","critical","isMovingOnMainAxis","borderBoxCenter","selection","isMovementAllowed","phase","isPositionInFrame","run","getHasOverlap","getFurthestAway","_ref24","pageBorderBox","startCenter","candidate","getDroppableOver","_ref25","childCenter","isStartContained","isEndContained","offsetRectByPosition","area","getIsDisplaced","_ref26","atIndex","_ref27","getReorderImpact","_ref28","pageBorderBoxWithDroppableScroll","targetRect","targetStart","targetEnd","child","didStartAfterCritical$1","combineThresholdDivisor","getCombineImpact","_ref29","childRect","childSize","threshold","getDragImpact","_ref30","pageOffset","destinationId","patchDroppableMap","clearUnusedPlaceholder","_ref31","now","lastDroppable","recomputePlaceholders","_ref32","cleaned","patched","_ref33","forcedClientSelection","forcedDimensions","forcedViewport","forcedImpact","withUpdatedPlaceholders","getDraggables","recompute","_ref34","getClientBorderBoxCenter","_ref35","refreshSnap","_ref36","movementMode","needsVisibilityCheck","getHomeLocation","getLiftEffect","_ref37","insideHome","rawIndex","inVirtualList","patchDimensionMap","key","finish","offsetDraggable","_ref38","offset$1","initialWindowScroll","moved","placeholder","getFrame","adjustAdditionsForScrollChanges","_ref39","additions","updatedDroppables","windowScrollChange","modified","droppableScrollChange","totalChange","timingsKey","publishWhileDraggingInVirtual","_ref40","published","withScrollChange","existing","updatedAdditions","removals","wasOverId","wasOver","onLiftImpact","draggingState","dropPending","isWaiting","isSnapping","postDroppableChange","isEnabledChanging","removeScrollJumpRequest","idle$2","completed","shouldFlush","reducer","action","payload","isWindowScrollAllowed","every","isFixedOnPage","String","newState","dropDuration","newHomeClientOffset","beforeInitialCapture","lift$1","initialPublish","publishWhileDragging","collectionStarting","updateDroppableScroll","updateDroppableIsEnabled","updateDroppableIsCombineEnabled","move","moveByWindowScroll","updateViewportMaxScroll","moveUp","moveDown","moveRight","moveLeft","flush","animateDrop","completeDrop","drop$1","dropAnimationFinished","checkIndexes","indexes","errors","keys","formatted","hasError","join","validateDimensions","lift","marshal","_ref41","getState","dispatch","next","scrollOptions","shouldPublishImmediately","request","startPublishing","style","dragging","dropping","resting","curves","outOfTheWay","drop","opacity","combining","scale","timings","minDropTime","maxDropTime","outOfTheWayTiming","transitions","fluid","snap","duration","timing","moveTo","transforms","isCombining","translate","dropTimeRange","maxDropTimeAtDistance","cancelDropModifier","getDropDuration","_ref42","distance$1","percentage","withDuration","Number","toFixed","getNewHomeClientOffset","_ref43","newClientCenter","getDropImpact","_ref44","lastImpact","recomputedHomeImpact","didDropInsideDroppable","withoutMovement","dropMiddleware","_ref45","isWaitingForDrop","isAnimationRequired","getWindowScroll","pageXOffset","pageYOffset","getWindowScrollBinding","passive","capture","document","getScrollListener","_ref46","onWindowScroll","updateScroll","scheduled","isActive","stop","cancel","shouldEnd","scrollListener","store","listener","scrollListener$1","getExpiringAnnounce","announce","wasCalled","isExpired","timeoutId","setTimeout","clearTimeout","getAsyncMarshal","entries","execute","timerId","entry","splice","callback","shallow","areLocationsEqual","isCombineEqual","isCriticalEqual","isDraggableEqual","isDroppableEqual","withTimings","getDragStart","responder","data","getDefaultMessage","willExpire","provided","getPublisher","getResponders","asyncMarshal","beforeCapture","onBeforeCapture","beforeStart","onBeforeDragStart","lastCritical","lastLocation","lastCombine","hasCriticalChanged","hasLocationChanged","hasGroupingChanged","abort","responders","publisher","dropAnimationFinishMiddleware","dropAnimationFinish","dropAnimationFlushOnScrollMiddleware","frameId","clear","cancelAnimationFrame","once","flushDropAnimation","requestAnimationFrame","dropAnimationFlushOnScroll","dimensionMarshalStopper","stopPublishing","focus","isWatching","tryRecordFocus","tryRestoreFocusRecorded","tryShiftRecord","shouldStop","autoScroll","autoScroller","pendingDrop","postActionState","pendingDrop$1","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","name","_ref47","dimensionMarshal","focusMarshal","styleMarshal","clean$1","createPublisher","_ref48","registry","staging","collect","getById","getDimension","getScrollWhileDragging","publish","getMaxScroll","_ref49","scrollHeight","scrollWidth","adjustedMaxScroll","getDocumentElement","doc","documentElement","getMaxWindowScroll","clientWidth","clientHeight","getViewport","getInitialPublish","_ref50","windowScroll","getAllByType","getDimensionAndWatchScroll","shouldPublishUpdate","createDimensionMarshal","collection","exists","change","dragStopped","unsubscribe","subscriber","subscribe","canStartDrag","scrollWindow","scrollBy","getScrollableDroppables","getScrollableDroppableOver","maybe","getBestScrollableDroppable","_ref51","defaultAutoScrollerOptions","startFromPercentage","maxScrollAtPercentage","maxPixelScroll","ease","durationDampening","stopDampeningAt","accelerateAt","disabled","getDistanceThresholds","container","getAutoScrollerOptions","autoScrollerOptions","startScrollingFrom","maxScrollValueAt","thresholds","getPercentage","_ref52","startOfRange","endOfRange","range","currentInRange","minScroll","getValueFromDistance","distanceToEdge","percentageFromMaxScrollValueAt","percentageFromStartScrollingFrom","ceil","dampenValueByTime","proposedScroll","dragStartTime","stopAt","Date","runTime","betweenAccelerateAtAndStopAtPercentage","getValue","_ref53","shouldUseTimeDampening","getScrollOnAxis","_ref54","distanceToEdges","isCloserToEnd","adjustForSizeLimits","_ref55","isTooBigVertically","isTooBigHorizontally","clean","getScroll$1","_ref56","required","limited","smallestSigned","getOverlap","getRemainder","_ref57","targetScroll","overlap","canPartiallyScroll","_ref58","rawMax","smallestChange","canScrollWindow","getWindowOverlap","canScrollDroppable","getDroppableOverlap","getWindowScrollChange","_ref59","getDroppableScrollChange","_ref60","_ref61","createFluidScroller","_ref62","scheduleWindowScroll","scheduleDroppableScroll","tryScroll","start$1","wasScrollNeeded","fakeScrollCallback","createJumpScroller","_ref63","moveByOffset","scrollDroppableAsMuchAsItCan","whatTheDroppableCanScroll","remainder","scrollWindowAsMuchAsItCan","whatTheWindowCanScroll","jumpScroller","droppableRemainder","windowRemainder","createAutoScroller","_ref64","fluidScroller","jumpScroll","scroller","prefix","dragHandle","base","contextId","scrollContainer","makeGetSelector","context","attribute","getStyles","rules","property","rule","styles","selector","noPointerEvents","getStyles$1","getSelector","dragHandle$1","grabCursor","always","dropAnimating","draggable$1","transition","userCancel","droppable$1","body","useIsomorphicLayoutEffect","createElement","getHead","head","querySelector","createStyleEl","nonce","setAttribute","useStyleMarshal","alwaysRef","dynamicRef","setDynamicStyle","textContent","setAlwaysStyle","dynamic","appendChild","ref","removeChild","querySelectorAll","parentNode","Array","from","getWindowFromEl","ownerDocument","defaultView","isHtmlElement","HTMLElement","findDragHandle","possible","handle","getAttribute","useFocusMarshal","entriesRef","recordRef","restoreFocusFrameRef","isMountedRef","register","unregister","tryGiveFocus","tryGiveFocusTo","activeElement","redirectTo","record","focused","clearFrameOnUnmount","createRegistry","subscribers","cb","notify","findDraggableById","getDraggableById","draggableAPI","uniqueId","findById","findDroppableById","getDroppableById","droppableAPI","useRegistry","unmount","version","startsWith","StoreContext","createContext","getBodyElement","visuallyHidden","border","padding","overflow","visuallyHidden$1","getId","useAnnouncer","setup","cleanup","count$1","defaults","separator","resetDeprecatedUniqueId","useDeprecatedUniqueId","useUniqueId","useId","useUniqueId$1","getElementId","_ref65","useHiddenTextElement","_ref66","text","mount","display","AppContext","peerDependencies","react","semver","getVersion","exec","major","minor","raw","isSatisfied","expected","actual","checkReactVersion","peerDepValue","actualValue","peerDep","suffix","checkDoctype","doctype","toLowerCase","publicId","useDev","useHook","useDevSetupWarning","inputs","e","useStartupValidation","usePrevious","create","lock","isClaimed","claim","abandon","newLock","release","tryAbandon","tab","enter","escape","space","pageUp","pageDown","arrowLeft","arrowUp","arrowRight","arrowDown","preventedKeys","preventStandardKeyEvents","keyCode","supportedEventName","supported","supportedPageVisibilityEventName","primaryButton","sloppyClickThreshold","isSloppyClickThresholdExceeded","abs","idle$1","getCaptureBindings","_ref67","getPhase","setPhase","button","clientX","clientY","actions","pending","fluidLift","shouldBlockNextClick","shouldRespectForcePress","useMouseSensor","api","phaseRef","unbindEventsRef","startCaptureBinding","onMouseDown","defaultPrevented","ctrlKey","metaKey","shiftKey","altKey","findClosestDraggableId","tryGetLock","sourceEvent","startPendingDrag","preventForcePressBinding","findOptionsForDraggable","canGetLock","listenForCapture","bindCapturingEvents","noop$1","scrollJumpKeys","getDraggingBindings","useKeyboardSensor","onKeyDown","preDrag","isCapturing","snapLift","tryStartCapture","idle","timeForLongPress","forcePressThreshold","getWindowBindings","_ref68","getHandleBindings","_ref69","hasMoved","touches","touch","isForcePress","force","shouldRespect","useTouchSensor","onTouchStart","longPressTimerId","unbindTarget","unbindWindow","startDragging","webkitHack","useValidateSensorHooks","sensorHooks","previousRef","interactiveTagNames","isAnInteractiveElement","parent","hasAnInteractiveTag","includes","tagName","parentElement","isEventInInteractiveElement","getBorderBoxCenterPosition","getBoundingClientRect","isElement","Element","supportedMatchesName","closestPonyfill","findClosestDragHandleFromEvent","tryGetClosestDraggableIdFromEvent","findDraggable","_ref70","isLockActive","shouldWarn","canStart","_ref71","lockAPI","tryStart","_ref72","forceSensorStop","shouldStart","canDragInteractiveElements","getShouldRespectForcePress","tryDispatch","getAction","tryDispatchWhenDragging","liftActionArgs","move$1","abortPreDrag","shouldRelease","defaultSensors","useSensorMarshal","_ref73","customSensors","enableDefaultSensors","useSensors","tryAbandonLock","listenToStore","forceStop","tryReleaseLock","isLockClaimed","createResponders","t","onBeforeCapureCallback","createAutoScrollerOptions","getStore","lazyRef","App","sensors","lazyStoreRef","lastPropsRef","dragHandleUsageInstructionsId","lazyDispatch","marshalCallbacks","tryResetStore","appCallbacks","getCanLift","getIsMovementAllowed","appContext","canLift","count","resetDeprecatedUniqueContextId","useDeprecatedUniqueContextId","useUniqueContextId","useUniqueContextId$1","resetServerContext","DragDropContext","zIndexOptions","getDraggingTransition","shouldAnimateDragMovement","getDraggingOpacity","isDropAnimating","getShouldDraggingAnimate","getDraggingStyle","transform","boxSizing","zIndex","pointerEvents","getSecondaryStyle","secondary","shouldAnimateDisplacement","getStyle$1","mapped","getDimension$1","computedStyles","getComputedStyle","useDraggablePublisher","getDraggableRef","publishedRef","isFirstPublishRef","DroppableContext","checkIsValidInnerRef","useValidation$1","getRef","isInteger","useClonePropValidation","isClone","initialRef","useRequiredContext","Context","preventHtml5Dnd","Draggable","setRef","dropAnimationFinishedAction","forPublisher","dragHandleProps","tabIndex","role","onMoveEnd","propertyName","onTransitionEnd","innerRef","draggableProps","rubric","Fragment","snapshot","Draggable$1","isStrictEqual","whatIsDraggedOverFromResult","getCombineWithFromResult","getCombineWithFromImpact","getDraggableSelector","memoizedOffset","getMemoizedSnapshot","draggingOver","dropAnimation","combineTargetFor","getMemoizedProps","ownProps","curve","getSecondarySnapshot","atRest","getSecondarySelector","getFallback","getProps","ownId","draggingId","visualDisplacement","isAfterCriticalInVirtualList","makeMapStateToProps$1","draggingSelector","secondarySelector","mapDispatchToProps$1","ConnectedDraggable","areStatePropsEqual","ConnectedDraggable$1","PrivateDraggable","droppableContext","isUsingCloneFor","PublicDraggable","isDragDisabled","disableInteractiveElementBlocking","isEqual","isScroll","isAuto","isEither","overflowX","overflowY","isBoth","isElementScrollable","isBodyScrollable","html","htmlStyle","htmlOverflow","getClosestScrollable","checkForNestedScrollContainers","anotherScrollParent","getScroll","scrollLeft","scrollTop","getIsFixed","getEnv","closestScrollable","getDroppableDimension","_ref74","scrollSize","frameClient","paddingBox","getClient","targetRef","_ref75","isDropDisabled","immediate","delayed","getListenerOptions","getClosestScrollableFromDrag","useDroppablePublisher","whileDraggingRef","publishedDescriptorRef","memoizedUpdateScroll","getClosestScroll","scheduleScrollUpdate","onClosestScroll","getDroppableRef","ignoreContainerClipping","removeAttribute","noop","empty","getSize","_ref76","isAnimatingOpenOnMount","animate","getStyle","_ref77","marginTop","marginRight","marginBottom","marginLeft","flexShrink","flexGrow","Placeholder","animateOpenTimerRef","tryClearAnimateOpenTimer","onClose","setIsAnimatingOpenOnMount","onSizeChangeEnd","Placeholder$1","memo","isBoolean","runChecks","checks","check","_ref78","boolean","_ref79","_ref80","standard","_ref81","getPlaceholderRef","virtual","hasClone","_ref82","renderClone","hasNoPlaceholder","_ref83","useValidation","AnimateInOut","PureComponent","on","getDerivedStateFromProps","Droppable","droppableRef","placeholderRef","useClone","getContainerForClone","setDroppableRef","setPlaceholderRef","onPlaceholderTransitionEnd","shouldAnimatePlaceholder","_ref84","droppableProps","getClone","node","draggableProvided","draggableSnapshot","createPortal","Droppable$1","getBody","defaultProps","attachDefaultPropsToOwnProps","mergedProps","defaultPropKey","isMatchingType","getDraggable","makeMapStateToProps","idleWithAnimation","isDraggingOver","draggingOverWith","draggingFromThisWith","isUsingPlaceholder","idleWithoutAnimation","getDraggableRubric","getMapProps","isDraggingOverForConsumer","isDraggingOverForImpact","isHome","ownPropsWithDefaultProps","wasCombining","mapDispatchToProps","ConnectedDroppable","stateProps","dispatchProps","ConnectedDroppable$1"],"sources":["/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/node_modules/@hello-pangea/dnd/dist/dnd.esm.js"],"sourcesContent":["import React, { useLayoutEffect as useLayoutEffect$1, useEffect, useRef, useState, useContext } from 'react';\nimport ReactDOM, { flushSync } from 'react-dom';\nimport { createStore as createStore$1, applyMiddleware, compose, bindActionCreators } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { useMemo, useCallback } from 'use-memo-one';\nimport { getRect, expand, offset, withScroll, calculateBox, getBox, createBox } from 'css-box-model';\nimport memoizeOne from 'memoize-one';\nimport rafSchd from 'raf-schd';\nimport _extends from '@babel/runtime/helpers/esm/extends';\n\nconst isProduction$1 = process.env.NODE_ENV === 'production';\nconst spacesAndTabs = /[ \\t]{2,}/g;\nconst lineStartWithSpaces = /^[ \\t]*/gm;\nconst clean$2 = value => value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();\nconst getDevMessage = message => clean$2(`\n  %c@hello-pangea/dnd\n\n  %c${clean$2(message)}\n\n  %c👷‍ This is a development only message. It will be removed in production builds.\n`);\nconst getFormattedMessage = message => [getDevMessage(message), 'color: #00C584; font-size: 1.2em; font-weight: bold;', 'line-height: 1.5', 'color: #723874;'];\nconst isDisabledFlag = '__@hello-pangea/dnd-disable-dev-warnings';\nfunction log(type, message) {\n  if (isProduction$1) {\n    return;\n  }\n  if (typeof window !== 'undefined' && window[isDisabledFlag]) {\n    return;\n  }\n  console[type](...getFormattedMessage(message));\n}\nconst warning = log.bind(null, 'warn');\nconst error = log.bind(null, 'error');\n\nfunction noop$2() {}\n\nfunction getOptions(shared, fromBinding) {\n  return {\n    ...shared,\n    ...fromBinding\n  };\n}\nfunction bindEvents(el, bindings, sharedOptions) {\n  const unbindings = bindings.map(binding => {\n    const options = getOptions(sharedOptions, binding.options);\n    el.addEventListener(binding.eventName, binding.fn, options);\n    return function unbind() {\n      el.removeEventListener(binding.eventName, binding.fn, options);\n    };\n  });\n  return function unbindAll() {\n    unbindings.forEach(unbind => {\n      unbind();\n    });\n  };\n}\n\nconst isProduction = process.env.NODE_ENV === 'production';\nconst prefix$1 = 'Invariant failed';\nclass RbdInvariant extends Error {}\nRbdInvariant.prototype.toString = function toString() {\n  return this.message;\n};\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (isProduction) {\n    throw new RbdInvariant(prefix$1);\n  } else {\n    throw new RbdInvariant(`${prefix$1}: ${message || ''}`);\n  }\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.callbacks = null;\n    this.unbind = noop$2;\n    this.onWindowError = event => {\n      const callbacks = this.getCallbacks();\n      if (callbacks.isDragging()) {\n        callbacks.tryAbort();\n        process.env.NODE_ENV !== \"production\" ? warning(`\n        An error was caught by our window 'error' event listener while a drag was occurring.\n        The active drag has been aborted.\n      `) : void 0;\n      }\n      const err = event.error;\n      if (err instanceof RbdInvariant) {\n        event.preventDefault();\n        if (process.env.NODE_ENV !== 'production') {\n          error(err.message);\n        }\n      }\n    };\n    this.getCallbacks = () => {\n      if (!this.callbacks) {\n        throw new Error('Unable to find AppCallbacks in <ErrorBoundary/>');\n      }\n      return this.callbacks;\n    };\n    this.setCallbacks = callbacks => {\n      this.callbacks = callbacks;\n    };\n  }\n  componentDidMount() {\n    this.unbind = bindEvents(window, [{\n      eventName: 'error',\n      fn: this.onWindowError\n    }]);\n  }\n  componentDidCatch(err) {\n    if (err instanceof RbdInvariant) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(err.message);\n      }\n      this.setState({});\n      return;\n    }\n    throw err;\n  }\n  componentWillUnmount() {\n    this.unbind();\n  }\n  render() {\n    return this.props.children(this.setCallbacks);\n  }\n}\n\nconst dragHandleUsageInstructions = `\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n`;\nconst position = index => index + 1;\nconst onDragStart = start => `\n  You have lifted an item in position ${position(start.source.index)}\n`;\nconst withLocation = (source, destination) => {\n  const isInHomeList = source.droppableId === destination.droppableId;\n  const startPosition = position(source.index);\n  const endPosition = position(destination.index);\n  if (isInHomeList) {\n    return `\n      You have moved the item from position ${startPosition}\n      to position ${endPosition}\n    `;\n  }\n  return `\n    You have moved the item from position ${startPosition}\n    in list ${source.droppableId}\n    to list ${destination.droppableId}\n    in position ${endPosition}\n  `;\n};\nconst withCombine = (id, source, combine) => {\n  const inHomeList = source.droppableId === combine.droppableId;\n  if (inHomeList) {\n    return `\n      The item ${id}\n      has been combined with ${combine.draggableId}`;\n  }\n  return `\n      The item ${id}\n      in list ${source.droppableId}\n      has been combined with ${combine.draggableId}\n      in list ${combine.droppableId}\n    `;\n};\nconst onDragUpdate = update => {\n  const location = update.destination;\n  if (location) {\n    return withLocation(update.source, location);\n  }\n  const combine = update.combine;\n  if (combine) {\n    return withCombine(update.draggableId, update.source, combine);\n  }\n  return 'You are over an area that cannot be dropped on';\n};\nconst returnedToStart = source => `\n  The item has returned to its starting position\n  of ${position(source.index)}\n`;\nconst onDragEnd = result => {\n  if (result.reason === 'CANCEL') {\n    return `\n      Movement cancelled.\n      ${returnedToStart(result.source)}\n    `;\n  }\n  const location = result.destination;\n  const combine = result.combine;\n  if (location) {\n    return `\n      You have dropped the item.\n      ${withLocation(result.source, location)}\n    `;\n  }\n  if (combine) {\n    return `\n      You have dropped the item.\n      ${withCombine(result.draggableId, result.source, combine)}\n    `;\n  }\n  return `\n    The item has been dropped while not over a drop area.\n    ${returnedToStart(result.source)}\n  `;\n};\nconst preset = {\n  dragHandleUsageInstructions,\n  onDragStart,\n  onDragUpdate,\n  onDragEnd\n};\nvar preset$1 = preset;\n\nconst origin = {\n  x: 0,\n  y: 0\n};\nconst add = (point1, point2) => ({\n  x: point1.x + point2.x,\n  y: point1.y + point2.y\n});\nconst subtract = (point1, point2) => ({\n  x: point1.x - point2.x,\n  y: point1.y - point2.y\n});\nconst isEqual$1 = (point1, point2) => point1.x === point2.x && point1.y === point2.y;\nconst negate = point => ({\n  x: point.x !== 0 ? -point.x : 0,\n  y: point.y !== 0 ? -point.y : 0\n});\nconst patch = (line, value, otherValue = 0) => {\n  if (line === 'x') {\n    return {\n      x: value,\n      y: otherValue\n    };\n  }\n  return {\n    x: otherValue,\n    y: value\n  };\n};\nconst distance = (point1, point2) => Math.sqrt((point2.x - point1.x) ** 2 + (point2.y - point1.y) ** 2);\nconst closest$1 = (target, points) => Math.min(...points.map(point => distance(target, point)));\nconst apply = fn => point => ({\n  x: fn(point.x),\n  y: fn(point.y)\n});\n\nvar executeClip = ((frame, subject) => {\n  const result = getRect({\n    top: Math.max(subject.top, frame.top),\n    right: Math.min(subject.right, frame.right),\n    bottom: Math.min(subject.bottom, frame.bottom),\n    left: Math.max(subject.left, frame.left)\n  });\n  if (result.width <= 0 || result.height <= 0) {\n    return null;\n  }\n  return result;\n});\n\nconst offsetByPosition = (spacing, point) => ({\n  top: spacing.top + point.y,\n  left: spacing.left + point.x,\n  bottom: spacing.bottom + point.y,\n  right: spacing.right + point.x\n});\nconst getCorners = spacing => [{\n  x: spacing.left,\n  y: spacing.top\n}, {\n  x: spacing.right,\n  y: spacing.top\n}, {\n  x: spacing.left,\n  y: spacing.bottom\n}, {\n  x: spacing.right,\n  y: spacing.bottom\n}];\nconst noSpacing = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nconst scroll$1 = (target, frame) => {\n  if (!frame) {\n    return target;\n  }\n  return offsetByPosition(target, frame.scroll.diff.displacement);\n};\nconst increase = (target, axis, withPlaceholder) => {\n  if (withPlaceholder && withPlaceholder.increasedBy) {\n    return {\n      ...target,\n      [axis.end]: target[axis.end] + withPlaceholder.increasedBy[axis.line]\n    };\n  }\n  return target;\n};\nconst clip = (target, frame) => {\n  if (frame && frame.shouldClipSubject) {\n    return executeClip(frame.pageMarginBox, target);\n  }\n  return getRect(target);\n};\nvar getSubject = (({\n  page,\n  withPlaceholder,\n  axis,\n  frame\n}) => {\n  const scrolled = scroll$1(page.marginBox, frame);\n  const increased = increase(scrolled, axis, withPlaceholder);\n  const clipped = clip(increased, frame);\n  return {\n    page,\n    withPlaceholder,\n    active: clipped\n  };\n});\n\nvar scrollDroppable = ((droppable, newScroll) => {\n  !droppable.frame ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  const scrollable = droppable.frame;\n  const scrollDiff = subtract(newScroll, scrollable.scroll.initial);\n  const scrollDisplacement = negate(scrollDiff);\n  const frame = {\n    ...scrollable,\n    scroll: {\n      initial: scrollable.scroll.initial,\n      current: newScroll,\n      diff: {\n        value: scrollDiff,\n        displacement: scrollDisplacement\n      },\n      max: scrollable.scroll.max\n    }\n  };\n  const subject = getSubject({\n    page: droppable.subject.page,\n    withPlaceholder: droppable.subject.withPlaceholder,\n    axis: droppable.axis,\n    frame\n  });\n  const result = {\n    ...droppable,\n    frame,\n    subject\n  };\n  return result;\n});\n\nconst toDroppableMap = memoizeOne(droppables => droppables.reduce((previous, current) => {\n  previous[current.descriptor.id] = current;\n  return previous;\n}, {}));\nconst toDraggableMap = memoizeOne(draggables => draggables.reduce((previous, current) => {\n  previous[current.descriptor.id] = current;\n  return previous;\n}, {}));\nconst toDroppableList = memoizeOne(droppables => Object.values(droppables));\nconst toDraggableList = memoizeOne(draggables => Object.values(draggables));\n\nvar getDraggablesInsideDroppable = memoizeOne((droppableId, draggables) => {\n  const result = toDraggableList(draggables).filter(draggable => droppableId === draggable.descriptor.droppableId).sort((a, b) => a.descriptor.index - b.descriptor.index);\n  return result;\n});\n\nfunction tryGetDestination(impact) {\n  if (impact.at && impact.at.type === 'REORDER') {\n    return impact.at.destination;\n  }\n  return null;\n}\nfunction tryGetCombine(impact) {\n  if (impact.at && impact.at.type === 'COMBINE') {\n    return impact.at.combine;\n  }\n  return null;\n}\n\nvar removeDraggableFromList = memoizeOne((remove, list) => list.filter(item => item.descriptor.id !== remove.descriptor.id));\n\nvar moveToNextCombine = (({\n  isMovingForward,\n  draggable,\n  destination,\n  insideDestination,\n  previousImpact\n}) => {\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const location = tryGetDestination(previousImpact);\n  if (!location) {\n    return null;\n  }\n  function getImpact(target) {\n    const at = {\n      type: 'COMBINE',\n      combine: {\n        draggableId: target,\n        droppableId: destination.descriptor.id\n      }\n    };\n    return {\n      ...previousImpact,\n      at\n    };\n  }\n  const all = previousImpact.displaced.all;\n  const closestId = all.length ? all[0] : null;\n  if (isMovingForward) {\n    return closestId ? getImpact(closestId) : null;\n  }\n  const withoutDraggable = removeDraggableFromList(draggable, insideDestination);\n  if (!closestId) {\n    if (!withoutDraggable.length) {\n      return null;\n    }\n    const last = withoutDraggable[withoutDraggable.length - 1];\n    return getImpact(last.descriptor.id);\n  }\n  const indexOfClosest = withoutDraggable.findIndex(d => d.descriptor.id === closestId);\n  !(indexOfClosest !== -1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find displaced item in set') : invariant(false) : void 0;\n  const proposedIndex = indexOfClosest - 1;\n  if (proposedIndex < 0) {\n    return null;\n  }\n  const before = withoutDraggable[proposedIndex];\n  return getImpact(before.descriptor.id);\n});\n\nvar isHomeOf = ((draggable, destination) => draggable.descriptor.droppableId === destination.descriptor.id);\n\nconst noDisplacedBy = {\n  point: origin,\n  value: 0\n};\nconst emptyGroups = {\n  invisible: {},\n  visible: {},\n  all: []\n};\nconst noImpact = {\n  displaced: emptyGroups,\n  displacedBy: noDisplacedBy,\n  at: null\n};\nvar noImpact$1 = noImpact;\n\nvar isWithin = ((lowerBound, upperBound) => value => lowerBound <= value && value <= upperBound);\n\nvar isPartiallyVisibleThroughFrame = (frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    const isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n    if (isContained) {\n      return true;\n    }\n    const isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);\n    const isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);\n    const isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;\n    if (isPartiallyContained) {\n      return true;\n    }\n    const isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;\n    const isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;\n    const isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;\n    if (isTargetBiggerThanFrame) {\n      return true;\n    }\n    const isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;\n    return isTargetBiggerOnOneAxis;\n  };\n});\n\nvar isTotallyVisibleThroughFrame = (frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    const isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n    return isContained;\n  };\n});\n\nconst vertical = {\n  direction: 'vertical',\n  line: 'y',\n  crossAxisLine: 'x',\n  start: 'top',\n  end: 'bottom',\n  size: 'height',\n  crossAxisStart: 'left',\n  crossAxisEnd: 'right',\n  crossAxisSize: 'width'\n};\nconst horizontal = {\n  direction: 'horizontal',\n  line: 'x',\n  crossAxisLine: 'y',\n  start: 'left',\n  end: 'right',\n  size: 'width',\n  crossAxisStart: 'top',\n  crossAxisEnd: 'bottom',\n  crossAxisSize: 'height'\n};\n\nvar isTotallyVisibleThroughFrameOnAxis = (axis => frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    if (axis === vertical) {\n      return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);\n    }\n    return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n  };\n});\n\nconst getDroppableDisplaced = (target, destination) => {\n  const displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;\n  return offsetByPosition(target, displacement);\n};\nconst isVisibleInDroppable = (target, destination, isVisibleThroughFrameFn) => {\n  if (!destination.subject.active) {\n    return false;\n  }\n  return isVisibleThroughFrameFn(destination.subject.active)(target);\n};\nconst isVisibleInViewport = (target, viewport, isVisibleThroughFrameFn) => isVisibleThroughFrameFn(viewport)(target);\nconst isVisible$1 = ({\n  target: toBeDisplaced,\n  destination,\n  viewport,\n  withDroppableDisplacement,\n  isVisibleThroughFrameFn\n}) => {\n  const displacedTarget = withDroppableDisplacement ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;\n  return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);\n};\nconst isPartiallyVisible = args => isVisible$1({\n  ...args,\n  isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame\n});\nconst isTotallyVisible = args => isVisible$1({\n  ...args,\n  isVisibleThroughFrameFn: isTotallyVisibleThroughFrame\n});\nconst isTotallyVisibleOnAxis = args => isVisible$1({\n  ...args,\n  isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)\n});\n\nconst getShouldAnimate = (id, last, forceShouldAnimate) => {\n  if (typeof forceShouldAnimate === 'boolean') {\n    return forceShouldAnimate;\n  }\n  if (!last) {\n    return true;\n  }\n  const {\n    invisible,\n    visible\n  } = last;\n  if (invisible[id]) {\n    return false;\n  }\n  const previous = visible[id];\n  return previous ? previous.shouldAnimate : true;\n};\nfunction getTarget(draggable, displacedBy) {\n  const marginBox = draggable.page.marginBox;\n  const expandBy = {\n    top: displacedBy.point.y,\n    right: 0,\n    bottom: 0,\n    left: displacedBy.point.x\n  };\n  return getRect(expand(marginBox, expandBy));\n}\nfunction getDisplacementGroups({\n  afterDragging,\n  destination,\n  displacedBy,\n  viewport,\n  forceShouldAnimate,\n  last\n}) {\n  return afterDragging.reduce(function process(groups, draggable) {\n    const target = getTarget(draggable, displacedBy);\n    const id = draggable.descriptor.id;\n    groups.all.push(id);\n    const isVisible = isPartiallyVisible({\n      target,\n      destination,\n      viewport,\n      withDroppableDisplacement: true\n    });\n    if (!isVisible) {\n      groups.invisible[draggable.descriptor.id] = true;\n      return groups;\n    }\n    const shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);\n    const displacement = {\n      draggableId: id,\n      shouldAnimate\n    };\n    groups.visible[id] = displacement;\n    return groups;\n  }, {\n    all: [],\n    visible: {},\n    invisible: {}\n  });\n}\n\nfunction getIndexOfLastItem(draggables, options) {\n  if (!draggables.length) {\n    return 0;\n  }\n  const indexOfLastItem = draggables[draggables.length - 1].descriptor.index;\n  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;\n}\nfunction goAtEnd({\n  insideDestination,\n  inHomeList,\n  displacedBy,\n  destination\n}) {\n  const newIndex = getIndexOfLastItem(insideDestination, {\n    inHomeList\n  });\n  return {\n    displaced: emptyGroups,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: {\n        droppableId: destination.descriptor.id,\n        index: newIndex\n      }\n    }\n  };\n}\nfunction calculateReorderImpact({\n  draggable,\n  insideDestination,\n  destination,\n  viewport,\n  displacedBy,\n  last,\n  index,\n  forceShouldAnimate\n}) {\n  const inHomeList = isHomeOf(draggable, destination);\n  if (index == null) {\n    return goAtEnd({\n      insideDestination,\n      inHomeList,\n      displacedBy,\n      destination\n    });\n  }\n  const match = insideDestination.find(item => item.descriptor.index === index);\n  if (!match) {\n    return goAtEnd({\n      insideDestination,\n      inHomeList,\n      displacedBy,\n      destination\n    });\n  }\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const sliceFrom = insideDestination.indexOf(match);\n  const impacted = withoutDragging.slice(sliceFrom);\n  const displaced = getDisplacementGroups({\n    afterDragging: impacted,\n    destination,\n    displacedBy,\n    last,\n    viewport: viewport.frame,\n    forceShouldAnimate\n  });\n  return {\n    displaced,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: {\n        droppableId: destination.descriptor.id,\n        index\n      }\n    }\n  };\n}\n\nfunction didStartAfterCritical(draggableId, afterCritical) {\n  return Boolean(afterCritical.effected[draggableId]);\n}\n\nvar fromCombine = (({\n  isMovingForward,\n  destination,\n  draggables,\n  combine,\n  afterCritical\n}) => {\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const combineId = combine.draggableId;\n  const combineWith = draggables[combineId];\n  const combineWithIndex = combineWith.descriptor.index;\n  const didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);\n  if (didCombineWithStartAfterCritical) {\n    if (isMovingForward) {\n      return combineWithIndex;\n    }\n    return combineWithIndex - 1;\n  }\n  if (isMovingForward) {\n    return combineWithIndex + 1;\n  }\n  return combineWithIndex;\n});\n\nvar fromReorder = (({\n  isMovingForward,\n  isInHomeList,\n  insideDestination,\n  location\n}) => {\n  if (!insideDestination.length) {\n    return null;\n  }\n  const currentIndex = location.index;\n  const proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;\n  const firstIndex = insideDestination[0].descriptor.index;\n  const lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;\n  const upperBound = isInHomeList ? lastIndex : lastIndex + 1;\n  if (proposedIndex < firstIndex) {\n    return null;\n  }\n  if (proposedIndex > upperBound) {\n    return null;\n  }\n  return proposedIndex;\n});\n\nvar moveToNextIndex = (({\n  isMovingForward,\n  isInHomeList,\n  draggable,\n  draggables,\n  destination,\n  insideDestination,\n  previousImpact,\n  viewport,\n  afterCritical\n}) => {\n  const wasAt = previousImpact.at;\n  !wasAt ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot move in direction without previous impact location') : invariant(false) : void 0;\n  if (wasAt.type === 'REORDER') {\n    const newIndex = fromReorder({\n      isMovingForward,\n      isInHomeList,\n      location: wasAt.destination,\n      insideDestination\n    });\n    if (newIndex == null) {\n      return null;\n    }\n    return calculateReorderImpact({\n      draggable,\n      insideDestination,\n      destination,\n      viewport,\n      last: previousImpact.displaced,\n      displacedBy: previousImpact.displacedBy,\n      index: newIndex\n    });\n  }\n  const newIndex = fromCombine({\n    isMovingForward,\n    destination,\n    displaced: previousImpact.displaced,\n    draggables,\n    combine: wasAt.combine,\n    afterCritical\n  });\n  if (newIndex == null) {\n    return null;\n  }\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    last: previousImpact.displaced,\n    displacedBy: previousImpact.displacedBy,\n    index: newIndex\n  });\n});\n\nvar getCombinedItemDisplacement = (({\n  displaced,\n  afterCritical,\n  combineWith,\n  displacedBy\n}) => {\n  const isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);\n  if (didStartAfterCritical(combineWith, afterCritical)) {\n    return isDisplaced ? origin : negate(displacedBy.point);\n  }\n  return isDisplaced ? displacedBy.point : origin;\n});\n\nvar whenCombining = (({\n  afterCritical,\n  impact,\n  draggables\n}) => {\n  const combine = tryGetCombine(impact);\n  !combine ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  const combineWith = combine.draggableId;\n  const center = draggables[combineWith].page.borderBox.center;\n  const displaceBy = getCombinedItemDisplacement({\n    displaced: impact.displaced,\n    afterCritical,\n    combineWith,\n    displacedBy: impact.displacedBy\n  });\n  return add(center, displaceBy);\n});\n\nconst distanceFromStartToBorderBoxCenter = (axis, box) => box.margin[axis.start] + box.borderBox[axis.size] / 2;\nconst distanceFromEndToBorderBoxCenter = (axis, box) => box.margin[axis.end] + box.borderBox[axis.size] / 2;\nconst getCrossAxisBorderBoxCenter = (axis, target, isMoving) => target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;\nconst goAfter = ({\n  axis,\n  moveRelativeTo,\n  isMoving\n}) => patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\nconst goBefore = ({\n  axis,\n  moveRelativeTo,\n  isMoving\n}) => patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\nconst goIntoStart = ({\n  axis,\n  moveInto,\n  isMoving\n}) => patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));\n\nvar whenReordering = (({\n  impact,\n  draggable,\n  draggables,\n  droppable,\n  afterCritical\n}) => {\n  const insideDestination = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n  const draggablePage = draggable.page;\n  const axis = droppable.axis;\n  if (!insideDestination.length) {\n    return goIntoStart({\n      axis,\n      moveInto: droppable.page,\n      isMoving: draggablePage\n    });\n  }\n  const {\n    displaced,\n    displacedBy\n  } = impact;\n  const closestAfter = displaced.all[0];\n  if (closestAfter) {\n    const closest = draggables[closestAfter];\n    if (didStartAfterCritical(closestAfter, afterCritical)) {\n      return goBefore({\n        axis,\n        moveRelativeTo: closest.page,\n        isMoving: draggablePage\n      });\n    }\n    const withDisplacement = offset(closest.page, displacedBy.point);\n    return goBefore({\n      axis,\n      moveRelativeTo: withDisplacement,\n      isMoving: draggablePage\n    });\n  }\n  const last = insideDestination[insideDestination.length - 1];\n  if (last.descriptor.id === draggable.descriptor.id) {\n    return draggablePage.borderBox.center;\n  }\n  if (didStartAfterCritical(last.descriptor.id, afterCritical)) {\n    const page = offset(last.page, negate(afterCritical.displacedBy.point));\n    return goAfter({\n      axis,\n      moveRelativeTo: page,\n      isMoving: draggablePage\n    });\n  }\n  return goAfter({\n    axis,\n    moveRelativeTo: last.page,\n    isMoving: draggablePage\n  });\n});\n\nvar withDroppableDisplacement = ((droppable, point) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return point;\n  }\n  return add(point, frame.scroll.diff.displacement);\n});\n\nconst getResultWithoutDroppableDisplacement = ({\n  impact,\n  draggable,\n  droppable,\n  draggables,\n  afterCritical\n}) => {\n  const original = draggable.page.borderBox.center;\n  const at = impact.at;\n  if (!droppable) {\n    return original;\n  }\n  if (!at) {\n    return original;\n  }\n  if (at.type === 'REORDER') {\n    return whenReordering({\n      impact,\n      draggable,\n      draggables,\n      droppable,\n      afterCritical\n    });\n  }\n  return whenCombining({\n    impact,\n    draggables,\n    afterCritical\n  });\n};\nvar getPageBorderBoxCenterFromImpact = (args => {\n  const withoutDisplacement = getResultWithoutDroppableDisplacement(args);\n  const droppable = args.droppable;\n  const withDisplacement = droppable ? withDroppableDisplacement(droppable, withoutDisplacement) : withoutDisplacement;\n  return withDisplacement;\n});\n\nvar scrollViewport = ((viewport, newScroll) => {\n  const diff = subtract(newScroll, viewport.scroll.initial);\n  const displacement = negate(diff);\n  const frame = getRect({\n    top: newScroll.y,\n    bottom: newScroll.y + viewport.frame.height,\n    left: newScroll.x,\n    right: newScroll.x + viewport.frame.width\n  });\n  const updated = {\n    frame,\n    scroll: {\n      initial: viewport.scroll.initial,\n      max: viewport.scroll.max,\n      current: newScroll,\n      diff: {\n        value: diff,\n        displacement\n      }\n    }\n  };\n  return updated;\n});\n\nfunction getDraggables$1(ids, draggables) {\n  return ids.map(id => draggables[id]);\n}\nfunction tryGetVisible(id, groups) {\n  for (let i = 0; i < groups.length; i++) {\n    const displacement = groups[i].visible[id];\n    if (displacement) {\n      return displacement;\n    }\n  }\n  return null;\n}\nvar speculativelyIncrease = (({\n  impact,\n  viewport,\n  destination,\n  draggables,\n  maxScrollChange\n}) => {\n  const scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));\n  const scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;\n  const last = impact.displaced;\n  const withViewportScroll = getDisplacementGroups({\n    afterDragging: getDraggables$1(last.all, draggables),\n    destination,\n    displacedBy: impact.displacedBy,\n    viewport: scrolledViewport.frame,\n    last,\n    forceShouldAnimate: false\n  });\n  const withDroppableScroll = getDisplacementGroups({\n    afterDragging: getDraggables$1(last.all, draggables),\n    destination: scrolledDroppable,\n    displacedBy: impact.displacedBy,\n    viewport: viewport.frame,\n    last,\n    forceShouldAnimate: false\n  });\n  const invisible = {};\n  const visible = {};\n  const groups = [last, withViewportScroll, withDroppableScroll];\n  last.all.forEach(id => {\n    const displacement = tryGetVisible(id, groups);\n    if (displacement) {\n      visible[id] = displacement;\n      return;\n    }\n    invisible[id] = true;\n  });\n  const newImpact = {\n    ...impact,\n    displaced: {\n      all: last.all,\n      invisible,\n      visible\n    }\n  };\n  return newImpact;\n});\n\nvar withViewportDisplacement = ((viewport, point) => add(viewport.scroll.diff.displacement, point));\n\nvar getClientFromPageBorderBoxCenter = (({\n  pageBorderBoxCenter,\n  draggable,\n  viewport\n}) => {\n  const withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);\n  const offset = subtract(withoutPageScrollChange, draggable.page.borderBox.center);\n  return add(draggable.client.borderBox.center, offset);\n});\n\nvar isTotallyVisibleInNewLocation = (({\n  draggable,\n  destination,\n  newPageBorderBoxCenter,\n  viewport,\n  withDroppableDisplacement,\n  onlyOnMainAxis = false\n}) => {\n  const changeNeeded = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);\n  const shifted = offsetByPosition(draggable.page.borderBox, changeNeeded);\n  const args = {\n    target: shifted,\n    destination,\n    withDroppableDisplacement,\n    viewport\n  };\n  return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);\n});\n\nvar moveToNextPlace = (({\n  isMovingForward,\n  draggable,\n  destination,\n  draggables,\n  previousImpact,\n  viewport,\n  previousPageBorderBoxCenter,\n  previousClientSelection,\n  afterCritical\n}) => {\n  if (!destination.isEnabled) {\n    return null;\n  }\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const isInHomeList = isHomeOf(draggable, destination);\n  const impact = moveToNextCombine({\n    isMovingForward,\n    draggable,\n    destination,\n    insideDestination,\n    previousImpact\n  }) || moveToNextIndex({\n    isMovingForward,\n    isInHomeList,\n    draggable,\n    draggables,\n    destination,\n    insideDestination,\n    previousImpact,\n    viewport,\n    afterCritical\n  });\n  if (!impact) {\n    return null;\n  }\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    afterCritical\n  });\n  const isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n    draggable,\n    destination,\n    newPageBorderBoxCenter: pageBorderBoxCenter,\n    viewport: viewport.frame,\n    withDroppableDisplacement: false,\n    onlyOnMainAxis: true\n  });\n  if (isVisibleInNewLocation) {\n    const clientSelection = getClientFromPageBorderBoxCenter({\n      pageBorderBoxCenter,\n      draggable,\n      viewport\n    });\n    return {\n      clientSelection,\n      impact,\n      scrollJumpRequest: null\n    };\n  }\n  const distance = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);\n  const cautious = speculativelyIncrease({\n    impact,\n    viewport,\n    destination,\n    draggables,\n    maxScrollChange: distance\n  });\n  return {\n    clientSelection: previousClientSelection,\n    impact: cautious,\n    scrollJumpRequest: distance\n  };\n});\n\nconst getKnownActive = droppable => {\n  const rect = droppable.subject.active;\n  !rect ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot get clipped area from droppable') : invariant(false) : void 0;\n  return rect;\n};\nvar getBestCrossAxisDroppable = (({\n  isMovingForward,\n  pageBorderBoxCenter,\n  source,\n  droppables,\n  viewport\n}) => {\n  const active = source.subject.active;\n  if (!active) {\n    return null;\n  }\n  const axis = source.axis;\n  const isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);\n  const candidates = toDroppableList(droppables).filter(droppable => droppable !== source).filter(droppable => droppable.isEnabled).filter(droppable => Boolean(droppable.subject.active)).filter(droppable => isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable))).filter(droppable => {\n    const activeOfTarget = getKnownActive(droppable);\n    if (isMovingForward) {\n      return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];\n    }\n    return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];\n  }).filter(droppable => {\n    const activeOfTarget = getKnownActive(droppable);\n    const isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);\n    return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);\n  }).sort((a, b) => {\n    const first = getKnownActive(a)[axis.crossAxisStart];\n    const second = getKnownActive(b)[axis.crossAxisStart];\n    if (isMovingForward) {\n      return first - second;\n    }\n    return second - first;\n  }).filter((droppable, index, array) => getKnownActive(droppable)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart]);\n  if (!candidates.length) {\n    return null;\n  }\n  if (candidates.length === 1) {\n    return candidates[0];\n  }\n  const contains = candidates.filter(droppable => {\n    const isWithinDroppable = isWithin(getKnownActive(droppable)[axis.start], getKnownActive(droppable)[axis.end]);\n    return isWithinDroppable(pageBorderBoxCenter[axis.line]);\n  });\n  if (contains.length === 1) {\n    return contains[0];\n  }\n  if (contains.length > 1) {\n    return contains.sort((a, b) => getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start])[0];\n  }\n  return candidates.sort((a, b) => {\n    const first = closest$1(pageBorderBoxCenter, getCorners(getKnownActive(a)));\n    const second = closest$1(pageBorderBoxCenter, getCorners(getKnownActive(b)));\n    if (first !== second) {\n      return first - second;\n    }\n    return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];\n  })[0];\n});\n\nconst getCurrentPageBorderBoxCenter = (draggable, afterCritical) => {\n  const original = draggable.page.borderBox.center;\n  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;\n};\nconst getCurrentPageBorderBox = (draggable, afterCritical) => {\n  const original = draggable.page.borderBox;\n  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;\n};\n\nvar getClosestDraggable = (({\n  pageBorderBoxCenter,\n  viewport,\n  destination,\n  insideDestination,\n  afterCritical\n}) => {\n  const sorted = insideDestination.filter(draggable => isTotallyVisible({\n    target: getCurrentPageBorderBox(draggable, afterCritical),\n    destination,\n    viewport: viewport.frame,\n    withDroppableDisplacement: true\n  })).sort((a, b) => {\n    const distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a, afterCritical)));\n    const distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b, afterCritical)));\n    if (distanceToA < distanceToB) {\n      return -1;\n    }\n    if (distanceToB < distanceToA) {\n      return 1;\n    }\n    return a.descriptor.index - b.descriptor.index;\n  });\n  return sorted[0] || null;\n});\n\nvar getDisplacedBy = memoizeOne(function getDisplacedBy(axis, displaceBy) {\n  const displacement = displaceBy[axis.line];\n  return {\n    value: displacement,\n    point: patch(axis.line, displacement)\n  };\n});\n\nconst getRequiredGrowthForPlaceholder = (droppable, placeholderSize, draggables) => {\n  const axis = droppable.axis;\n  if (droppable.descriptor.mode === 'virtual') {\n    return patch(axis.line, placeholderSize[axis.line]);\n  }\n  const availableSpace = droppable.subject.page.contentBox[axis.size];\n  const insideDroppable = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n  const spaceUsed = insideDroppable.reduce((sum, dimension) => sum + dimension.client.marginBox[axis.size], 0);\n  const requiredSpace = spaceUsed + placeholderSize[axis.line];\n  const needsToGrowBy = requiredSpace - availableSpace;\n  if (needsToGrowBy <= 0) {\n    return null;\n  }\n  return patch(axis.line, needsToGrowBy);\n};\nconst withMaxScroll = (frame, max) => ({\n  ...frame,\n  scroll: {\n    ...frame.scroll,\n    max\n  }\n});\nconst addPlaceholder = (droppable, draggable, draggables) => {\n  const frame = droppable.frame;\n  !!isHomeOf(draggable, droppable) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Should not add placeholder space to home list') : invariant(false) : void 0;\n  !!droppable.subject.withPlaceholder ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot add placeholder size to a subject when it already has one') : invariant(false) : void 0;\n  const placeholderSize = getDisplacedBy(droppable.axis, draggable.displaceBy).point;\n  const requiredGrowth = getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables);\n  const added = {\n    placeholderSize,\n    increasedBy: requiredGrowth,\n    oldFrameMaxScroll: droppable.frame ? droppable.frame.scroll.max : null\n  };\n  if (!frame) {\n    const subject = getSubject({\n      page: droppable.subject.page,\n      withPlaceholder: added,\n      axis: droppable.axis,\n      frame: droppable.frame\n    });\n    return {\n      ...droppable,\n      subject\n    };\n  }\n  const maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;\n  const newFrame = withMaxScroll(frame, maxScroll);\n  const subject = getSubject({\n    page: droppable.subject.page,\n    withPlaceholder: added,\n    axis: droppable.axis,\n    frame: newFrame\n  });\n  return {\n    ...droppable,\n    subject,\n    frame: newFrame\n  };\n};\nconst removePlaceholder = droppable => {\n  const added = droppable.subject.withPlaceholder;\n  !added ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot remove placeholder form subject when there was none') : invariant(false) : void 0;\n  const frame = droppable.frame;\n  if (!frame) {\n    const subject = getSubject({\n      page: droppable.subject.page,\n      axis: droppable.axis,\n      frame: null,\n      withPlaceholder: null\n    });\n    return {\n      ...droppable,\n      subject\n    };\n  }\n  const oldMaxScroll = added.oldFrameMaxScroll;\n  !oldMaxScroll ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected droppable with frame to have old max frame scroll when removing placeholder') : invariant(false) : void 0;\n  const newFrame = withMaxScroll(frame, oldMaxScroll);\n  const subject = getSubject({\n    page: droppable.subject.page,\n    axis: droppable.axis,\n    frame: newFrame,\n    withPlaceholder: null\n  });\n  return {\n    ...droppable,\n    subject,\n    frame: newFrame\n  };\n};\n\nvar moveToNewDroppable = (({\n  previousPageBorderBoxCenter,\n  moveRelativeTo,\n  insideDestination,\n  draggable,\n  draggables,\n  destination,\n  viewport,\n  afterCritical\n}) => {\n  if (!moveRelativeTo) {\n    if (insideDestination.length) {\n      return null;\n    }\n    const proposed = {\n      displaced: emptyGroups,\n      displacedBy: noDisplacedBy,\n      at: {\n        type: 'REORDER',\n        destination: {\n          droppableId: destination.descriptor.id,\n          index: 0\n        }\n      }\n    };\n    const proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n      impact: proposed,\n      draggable,\n      droppable: destination,\n      draggables,\n      afterCritical\n    });\n    const withPlaceholder = isHomeOf(draggable, destination) ? destination : addPlaceholder(destination, draggable, draggables);\n    const isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n      draggable,\n      destination: withPlaceholder,\n      newPageBorderBoxCenter: proposedPageBorderBoxCenter,\n      viewport: viewport.frame,\n      withDroppableDisplacement: false,\n      onlyOnMainAxis: true\n    });\n    return isVisibleInNewLocation ? proposed : null;\n  }\n  const isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);\n  const proposedIndex = (() => {\n    const relativeTo = moveRelativeTo.descriptor.index;\n    if (moveRelativeTo.descriptor.id === draggable.descriptor.id) {\n      return relativeTo;\n    }\n    if (isGoingBeforeTarget) {\n      return relativeTo;\n    }\n    return relativeTo + 1;\n  })();\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    displacedBy,\n    last: emptyGroups,\n    index: proposedIndex\n  });\n});\n\nvar moveCrossAxis = (({\n  isMovingForward,\n  previousPageBorderBoxCenter,\n  draggable,\n  isOver,\n  draggables,\n  droppables,\n  viewport,\n  afterCritical\n}) => {\n  const destination = getBestCrossAxisDroppable({\n    isMovingForward,\n    pageBorderBoxCenter: previousPageBorderBoxCenter,\n    source: isOver,\n    droppables,\n    viewport\n  });\n  if (!destination) {\n    return null;\n  }\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const moveRelativeTo = getClosestDraggable({\n    pageBorderBoxCenter: previousPageBorderBoxCenter,\n    viewport,\n    destination,\n    insideDestination,\n    afterCritical\n  });\n  const impact = moveToNewDroppable({\n    previousPageBorderBoxCenter,\n    destination,\n    draggable,\n    draggables,\n    moveRelativeTo,\n    insideDestination,\n    viewport,\n    afterCritical\n  });\n  if (!impact) {\n    return null;\n  }\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    afterCritical\n  });\n  const clientSelection = getClientFromPageBorderBoxCenter({\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  });\n  return {\n    clientSelection,\n    impact,\n    scrollJumpRequest: null\n  };\n});\n\nvar whatIsDraggedOver = (impact => {\n  const at = impact.at;\n  if (!at) {\n    return null;\n  }\n  if (at.type === 'REORDER') {\n    return at.destination.droppableId;\n  }\n  return at.combine.droppableId;\n});\n\nconst getDroppableOver$1 = (impact, droppables) => {\n  const id = whatIsDraggedOver(impact);\n  return id ? droppables[id] : null;\n};\nvar moveInDirection = (({\n  state,\n  type\n}) => {\n  const isActuallyOver = getDroppableOver$1(state.impact, state.dimensions.droppables);\n  const isMainAxisMovementAllowed = Boolean(isActuallyOver);\n  const home = state.dimensions.droppables[state.critical.droppable.id];\n  const isOver = isActuallyOver || home;\n  const direction = isOver.axis.direction;\n  const isMovingOnMainAxis = direction === 'vertical' && (type === 'MOVE_UP' || type === 'MOVE_DOWN') || direction === 'horizontal' && (type === 'MOVE_LEFT' || type === 'MOVE_RIGHT');\n  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {\n    return null;\n  }\n  const isMovingForward = type === 'MOVE_DOWN' || type === 'MOVE_RIGHT';\n  const draggable = state.dimensions.draggables[state.critical.draggable.id];\n  const previousPageBorderBoxCenter = state.current.page.borderBoxCenter;\n  const {\n    draggables,\n    droppables\n  } = state.dimensions;\n  return isMovingOnMainAxis ? moveToNextPlace({\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    destination: isOver,\n    draggables,\n    viewport: state.viewport,\n    previousClientSelection: state.current.client.selection,\n    previousImpact: state.impact,\n    afterCritical: state.afterCritical\n  }) : moveCrossAxis({\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    isOver,\n    draggables,\n    droppables,\n    viewport: state.viewport,\n    afterCritical: state.afterCritical\n  });\n});\n\nfunction isMovementAllowed(state) {\n  return state.phase === 'DRAGGING' || state.phase === 'COLLECTING';\n}\n\nfunction isPositionInFrame(frame) {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return function run(point) {\n    return isWithinVertical(point.y) && isWithinHorizontal(point.x);\n  };\n}\n\nfunction getHasOverlap(first, second) {\n  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;\n}\nfunction getFurthestAway({\n  pageBorderBox,\n  draggable,\n  candidates\n}) {\n  const startCenter = draggable.page.borderBox.center;\n  const sorted = candidates.map(candidate => {\n    const axis = candidate.axis;\n    const target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);\n    return {\n      id: candidate.descriptor.id,\n      distance: distance(startCenter, target)\n    };\n  }).sort((a, b) => b.distance - a.distance);\n  return sorted[0] ? sorted[0].id : null;\n}\nfunction getDroppableOver({\n  pageBorderBox,\n  draggable,\n  droppables\n}) {\n  const candidates = toDroppableList(droppables).filter(item => {\n    if (!item.isEnabled) {\n      return false;\n    }\n    const active = item.subject.active;\n    if (!active) {\n      return false;\n    }\n    if (!getHasOverlap(pageBorderBox, active)) {\n      return false;\n    }\n    if (isPositionInFrame(active)(pageBorderBox.center)) {\n      return true;\n    }\n    const axis = item.axis;\n    const childCenter = active.center[axis.crossAxisLine];\n    const crossAxisStart = pageBorderBox[axis.crossAxisStart];\n    const crossAxisEnd = pageBorderBox[axis.crossAxisEnd];\n    const isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);\n    const isStartContained = isContained(crossAxisStart);\n    const isEndContained = isContained(crossAxisEnd);\n    if (!isStartContained && !isEndContained) {\n      return true;\n    }\n    if (isStartContained) {\n      return crossAxisStart < childCenter;\n    }\n    return crossAxisEnd > childCenter;\n  });\n  if (!candidates.length) {\n    return null;\n  }\n  if (candidates.length === 1) {\n    return candidates[0].descriptor.id;\n  }\n  return getFurthestAway({\n    pageBorderBox,\n    draggable,\n    candidates\n  });\n}\n\nconst offsetRectByPosition = (rect, point) => getRect(offsetByPosition(rect, point));\n\nvar withDroppableScroll = ((droppable, area) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return area;\n  }\n  return offsetRectByPosition(area, frame.scroll.diff.value);\n});\n\nfunction getIsDisplaced({\n  displaced,\n  id\n}) {\n  return Boolean(displaced.visible[id] || displaced.invisible[id]);\n}\n\nfunction atIndex({\n  draggable,\n  closest,\n  inHomeList\n}) {\n  if (!closest) {\n    return null;\n  }\n  if (!inHomeList) {\n    return closest.descriptor.index;\n  }\n  if (closest.descriptor.index > draggable.descriptor.index) {\n    return closest.descriptor.index - 1;\n  }\n  return closest.descriptor.index;\n}\nvar getReorderImpact = (({\n  pageBorderBoxWithDroppableScroll: targetRect,\n  draggable,\n  destination,\n  insideDestination,\n  last,\n  viewport,\n  afterCritical\n}) => {\n  const axis = destination.axis;\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  const displacement = displacedBy.value;\n  const targetStart = targetRect[axis.start];\n  const targetEnd = targetRect[axis.end];\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const closest = withoutDragging.find(child => {\n    const id = child.descriptor.id;\n    const childCenter = child.page.borderBox.center[axis.line];\n    const didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);\n    const isDisplaced = getIsDisplaced({\n      displaced: last,\n      id\n    });\n    if (didStartAfterCritical$1) {\n      if (isDisplaced) {\n        return targetEnd <= childCenter;\n      }\n      return targetStart < childCenter - displacement;\n    }\n    if (isDisplaced) {\n      return targetEnd <= childCenter + displacement;\n    }\n    return targetStart < childCenter;\n  }) || null;\n  const newIndex = atIndex({\n    draggable,\n    closest,\n    inHomeList: isHomeOf(draggable, destination)\n  });\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    last,\n    displacedBy,\n    index: newIndex\n  });\n});\n\nconst combineThresholdDivisor = 4;\nvar getCombineImpact = (({\n  draggable,\n  pageBorderBoxWithDroppableScroll: targetRect,\n  previousImpact,\n  destination,\n  insideDestination,\n  afterCritical\n}) => {\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const axis = destination.axis;\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  const displacement = displacedBy.value;\n  const targetStart = targetRect[axis.start];\n  const targetEnd = targetRect[axis.end];\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const combineWith = withoutDragging.find(child => {\n    const id = child.descriptor.id;\n    const childRect = child.page.borderBox;\n    const childSize = childRect[axis.size];\n    const threshold = childSize / combineThresholdDivisor;\n    const didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);\n    const isDisplaced = getIsDisplaced({\n      displaced: previousImpact.displaced,\n      id\n    });\n    if (didStartAfterCritical$1) {\n      if (isDisplaced) {\n        return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;\n      }\n      return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;\n    }\n    if (isDisplaced) {\n      return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;\n    }\n    return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;\n  });\n  if (!combineWith) {\n    return null;\n  }\n  const impact = {\n    displacedBy,\n    displaced: previousImpact.displaced,\n    at: {\n      type: 'COMBINE',\n      combine: {\n        draggableId: combineWith.descriptor.id,\n        droppableId: destination.descriptor.id\n      }\n    }\n  };\n  return impact;\n});\n\nvar getDragImpact = (({\n  pageOffset,\n  draggable,\n  draggables,\n  droppables,\n  previousImpact,\n  viewport,\n  afterCritical\n}) => {\n  const pageBorderBox = offsetRectByPosition(draggable.page.borderBox, pageOffset);\n  const destinationId = getDroppableOver({\n    pageBorderBox,\n    draggable,\n    droppables\n  });\n  if (!destinationId) {\n    return noImpact$1;\n  }\n  const destination = droppables[destinationId];\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);\n  return getCombineImpact({\n    pageBorderBoxWithDroppableScroll,\n    draggable,\n    previousImpact,\n    destination,\n    insideDestination,\n    afterCritical\n  }) || getReorderImpact({\n    pageBorderBoxWithDroppableScroll,\n    draggable,\n    destination,\n    insideDestination,\n    last: previousImpact.displaced,\n    viewport,\n    afterCritical\n  });\n});\n\nvar patchDroppableMap = ((droppables, updated) => ({\n  ...droppables,\n  [updated.descriptor.id]: updated\n}));\n\nconst clearUnusedPlaceholder = ({\n  previousImpact,\n  impact,\n  droppables\n}) => {\n  const last = whatIsDraggedOver(previousImpact);\n  const now = whatIsDraggedOver(impact);\n  if (!last) {\n    return droppables;\n  }\n  if (last === now) {\n    return droppables;\n  }\n  const lastDroppable = droppables[last];\n  if (!lastDroppable.subject.withPlaceholder) {\n    return droppables;\n  }\n  const updated = removePlaceholder(lastDroppable);\n  return patchDroppableMap(droppables, updated);\n};\nvar recomputePlaceholders = (({\n  draggable,\n  draggables,\n  droppables,\n  previousImpact,\n  impact\n}) => {\n  const cleaned = clearUnusedPlaceholder({\n    previousImpact,\n    impact,\n    droppables\n  });\n  const isOver = whatIsDraggedOver(impact);\n  if (!isOver) {\n    return cleaned;\n  }\n  const droppable = droppables[isOver];\n  if (isHomeOf(draggable, droppable)) {\n    return cleaned;\n  }\n  if (droppable.subject.withPlaceholder) {\n    return cleaned;\n  }\n  const patched = addPlaceholder(droppable, draggable, draggables);\n  return patchDroppableMap(cleaned, patched);\n});\n\nvar update = (({\n  state,\n  clientSelection: forcedClientSelection,\n  dimensions: forcedDimensions,\n  viewport: forcedViewport,\n  impact: forcedImpact,\n  scrollJumpRequest\n}) => {\n  const viewport = forcedViewport || state.viewport;\n  const dimensions = forcedDimensions || state.dimensions;\n  const clientSelection = forcedClientSelection || state.current.client.selection;\n  const offset = subtract(clientSelection, state.initial.client.selection);\n  const client = {\n    offset,\n    selection: clientSelection,\n    borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)\n  };\n  const page = {\n    selection: add(client.selection, viewport.scroll.current),\n    borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),\n    offset: add(client.offset, viewport.scroll.diff.value)\n  };\n  const current = {\n    client,\n    page\n  };\n  if (state.phase === 'COLLECTING') {\n    return {\n      ...state,\n      dimensions,\n      viewport,\n      current\n    };\n  }\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const newImpact = forcedImpact || getDragImpact({\n    pageOffset: page.offset,\n    draggable,\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables,\n    previousImpact: state.impact,\n    viewport,\n    afterCritical: state.afterCritical\n  });\n  const withUpdatedPlaceholders = recomputePlaceholders({\n    draggable,\n    impact: newImpact,\n    previousImpact: state.impact,\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables\n  });\n  const result = {\n    ...state,\n    current,\n    dimensions: {\n      draggables: dimensions.draggables,\n      droppables: withUpdatedPlaceholders\n    },\n    impact: newImpact,\n    viewport,\n    scrollJumpRequest: scrollJumpRequest || null,\n    forceShouldAnimate: scrollJumpRequest ? false : null\n  };\n  return result;\n});\n\nfunction getDraggables(ids, draggables) {\n  return ids.map(id => draggables[id]);\n}\nvar recompute = (({\n  impact,\n  viewport,\n  draggables,\n  destination,\n  forceShouldAnimate\n}) => {\n  const last = impact.displaced;\n  const afterDragging = getDraggables(last.all, draggables);\n  const displaced = getDisplacementGroups({\n    afterDragging,\n    destination,\n    displacedBy: impact.displacedBy,\n    viewport: viewport.frame,\n    forceShouldAnimate,\n    last\n  });\n  return {\n    ...impact,\n    displaced\n  };\n});\n\nvar getClientBorderBoxCenter = (({\n  impact,\n  draggable,\n  droppable,\n  draggables,\n  viewport,\n  afterCritical\n}) => {\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    draggables,\n    droppable,\n    afterCritical\n  });\n  return getClientFromPageBorderBoxCenter({\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  });\n});\n\nvar refreshSnap = (({\n  state,\n  dimensions: forcedDimensions,\n  viewport: forcedViewport\n}) => {\n  !(state.movementMode === 'SNAP') ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  const needsVisibilityCheck = state.impact;\n  const viewport = forcedViewport || state.viewport;\n  const dimensions = forcedDimensions || state.dimensions;\n  const {\n    draggables,\n    droppables\n  } = dimensions;\n  const draggable = draggables[state.critical.draggable.id];\n  const isOver = whatIsDraggedOver(needsVisibilityCheck);\n  !isOver ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Must be over a destination in SNAP movement mode') : invariant(false) : void 0;\n  const destination = droppables[isOver];\n  const impact = recompute({\n    impact: needsVisibilityCheck,\n    viewport,\n    destination,\n    draggables\n  });\n  const clientSelection = getClientBorderBoxCenter({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    viewport,\n    afterCritical: state.afterCritical\n  });\n  return update({\n    impact,\n    clientSelection,\n    state,\n    dimensions,\n    viewport\n  });\n});\n\nvar getHomeLocation = (descriptor => ({\n  index: descriptor.index,\n  droppableId: descriptor.droppableId\n}));\n\nvar getLiftEffect = (({\n  draggable,\n  home,\n  draggables,\n  viewport\n}) => {\n  const displacedBy = getDisplacedBy(home.axis, draggable.displaceBy);\n  const insideHome = getDraggablesInsideDroppable(home.descriptor.id, draggables);\n  const rawIndex = insideHome.indexOf(draggable);\n  !(rawIndex !== -1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected draggable to be inside home list') : invariant(false) : void 0;\n  const afterDragging = insideHome.slice(rawIndex + 1);\n  const effected = afterDragging.reduce((previous, item) => {\n    previous[item.descriptor.id] = true;\n    return previous;\n  }, {});\n  const afterCritical = {\n    inVirtualList: home.descriptor.mode === 'virtual',\n    displacedBy,\n    effected\n  };\n  const displaced = getDisplacementGroups({\n    afterDragging,\n    destination: home,\n    displacedBy,\n    last: null,\n    viewport: viewport.frame,\n    forceShouldAnimate: false\n  });\n  const impact = {\n    displaced,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: getHomeLocation(draggable.descriptor)\n    }\n  };\n  return {\n    impact,\n    afterCritical\n  };\n});\n\nvar patchDimensionMap = ((dimensions, updated) => ({\n  draggables: dimensions.draggables,\n  droppables: patchDroppableMap(dimensions.droppables, updated)\n}));\n\nconst start = key => {\n  if (process.env.NODE_ENV !== 'production') {\n    {\n      return;\n    }\n  }\n};\nconst finish = key => {\n  if (process.env.NODE_ENV !== 'production') {\n    {\n      return;\n    }\n  }\n};\n\nvar offsetDraggable = (({\n  draggable,\n  offset: offset$1,\n  initialWindowScroll\n}) => {\n  const client = offset(draggable.client, offset$1);\n  const page = withScroll(client, initialWindowScroll);\n  const moved = {\n    ...draggable,\n    placeholder: {\n      ...draggable.placeholder,\n      client\n    },\n    client,\n    page\n  };\n  return moved;\n});\n\nvar getFrame = (droppable => {\n  const frame = droppable.frame;\n  !frame ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected Droppable to have a frame') : invariant(false) : void 0;\n  return frame;\n});\n\nvar adjustAdditionsForScrollChanges = (({\n  additions,\n  updatedDroppables,\n  viewport\n}) => {\n  const windowScrollChange = viewport.scroll.diff.value;\n  return additions.map(draggable => {\n    const droppableId = draggable.descriptor.droppableId;\n    const modified = updatedDroppables[droppableId];\n    const frame = getFrame(modified);\n    const droppableScrollChange = frame.scroll.diff.value;\n    const totalChange = add(windowScrollChange, droppableScrollChange);\n    const moved = offsetDraggable({\n      draggable,\n      offset: totalChange,\n      initialWindowScroll: viewport.scroll.initial\n    });\n    return moved;\n  });\n});\n\nconst timingsKey = 'Processing dynamic changes';\nvar publishWhileDraggingInVirtual = (({\n  state,\n  published\n}) => {\n  start();\n  const withScrollChange = published.modified.map(update => {\n    const existing = state.dimensions.droppables[update.droppableId];\n    const scrolled = scrollDroppable(existing, update.scroll);\n    return scrolled;\n  });\n  const droppables = {\n    ...state.dimensions.droppables,\n    ...toDroppableMap(withScrollChange)\n  };\n  const updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({\n    additions: published.additions,\n    updatedDroppables: droppables,\n    viewport: state.viewport\n  }));\n  const draggables = {\n    ...state.dimensions.draggables,\n    ...updatedAdditions\n  };\n  published.removals.forEach(id => {\n    delete draggables[id];\n  });\n  const dimensions = {\n    droppables,\n    draggables\n  };\n  const wasOverId = whatIsDraggedOver(state.impact);\n  const wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const home = dimensions.droppables[state.critical.droppable.id];\n  const {\n    impact: onLiftImpact,\n    afterCritical\n  } = getLiftEffect({\n    draggable,\n    home,\n    draggables,\n    viewport: state.viewport\n  });\n  const previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;\n  const impact = getDragImpact({\n    pageOffset: state.current.page.offset,\n    draggable: dimensions.draggables[state.critical.draggable.id],\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables,\n    previousImpact,\n    viewport: state.viewport,\n    afterCritical\n  });\n  finish(timingsKey);\n  const draggingState = {\n    ...state,\n    phase: 'DRAGGING',\n    impact,\n    onLiftImpact,\n    dimensions,\n    afterCritical,\n    forceShouldAnimate: false\n  };\n  if (state.phase === 'COLLECTING') {\n    return draggingState;\n  }\n  const dropPending = {\n    ...draggingState,\n    phase: 'DROP_PENDING',\n    reason: state.reason,\n    isWaiting: false\n  };\n  return dropPending;\n});\n\nconst isSnapping = state => state.movementMode === 'SNAP';\nconst postDroppableChange = (state, updated, isEnabledChanging) => {\n  const dimensions = patchDimensionMap(state.dimensions, updated);\n  if (!isSnapping(state) || isEnabledChanging) {\n    return update({\n      state,\n      dimensions\n    });\n  }\n  return refreshSnap({\n    state,\n    dimensions\n  });\n};\nfunction removeScrollJumpRequest(state) {\n  if (state.isDragging && state.movementMode === 'SNAP') {\n    return {\n      ...state,\n      scrollJumpRequest: null\n    };\n  }\n  return state;\n}\nconst idle$2 = {\n  phase: 'IDLE',\n  completed: null,\n  shouldFlush: false\n};\nvar reducer = ((state = idle$2, action) => {\n  if (action.type === 'FLUSH') {\n    return {\n      ...idle$2,\n      shouldFlush: true\n    };\n  }\n  if (action.type === 'INITIAL_PUBLISH') {\n    !(state.phase === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'INITIAL_PUBLISH must come after a IDLE phase') : invariant(false) : void 0;\n    const {\n      critical,\n      clientSelection,\n      viewport,\n      dimensions,\n      movementMode\n    } = action.payload;\n    const draggable = dimensions.draggables[critical.draggable.id];\n    const home = dimensions.droppables[critical.droppable.id];\n    const client = {\n      selection: clientSelection,\n      borderBoxCenter: draggable.client.borderBox.center,\n      offset: origin\n    };\n    const initial = {\n      client,\n      page: {\n        selection: add(client.selection, viewport.scroll.initial),\n        borderBoxCenter: add(client.selection, viewport.scroll.initial),\n        offset: add(client.selection, viewport.scroll.diff.value)\n      }\n    };\n    const isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(item => !item.isFixedOnPage);\n    const {\n      impact,\n      afterCritical\n    } = getLiftEffect({\n      draggable,\n      home,\n      draggables: dimensions.draggables,\n      viewport\n    });\n    const result = {\n      phase: 'DRAGGING',\n      isDragging: true,\n      critical,\n      movementMode,\n      dimensions,\n      initial,\n      current: initial,\n      isWindowScrollAllowed,\n      impact,\n      afterCritical,\n      onLiftImpact: impact,\n      viewport,\n      scrollJumpRequest: null,\n      forceShouldAnimate: null\n    };\n    return result;\n  }\n  if (action.type === 'COLLECTION_STARTING') {\n    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Collection cannot start from phase ${state.phase}`) : invariant(false) : void 0;\n    const result = {\n      ...state,\n      phase: 'COLLECTING'\n    };\n    return result;\n  }\n  if (action.type === 'PUBLISH_WHILE_DRAGGING') {\n    !(state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Unexpected ${action.type} received in phase ${state.phase}`) : invariant(false) : void 0;\n    return publishWhileDraggingInVirtual({\n      state,\n      published: action.payload\n    });\n  }\n  if (action.type === 'MOVE') {\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${action.type} not permitted in phase ${state.phase}`) : invariant(false) : void 0;\n    const {\n      client: clientSelection\n    } = action.payload;\n    if (isEqual$1(clientSelection, state.current.client.selection)) {\n      return state;\n    }\n    return update({\n      state,\n      clientSelection,\n      impact: isSnapping(state) ? state.impact : null\n    });\n  }\n  if (action.type === 'UPDATE_DROPPABLE_SCROLL') {\n    if (state.phase === 'DROP_PENDING') {\n      return removeScrollJumpRequest(state);\n    }\n    if (state.phase === 'COLLECTING') {\n      return removeScrollJumpRequest(state);\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${action.type} not permitted in phase ${state.phase}`) : invariant(false) : void 0;\n    const {\n      id,\n      newScroll\n    } = action.payload;\n    const target = state.dimensions.droppables[id];\n    if (!target) {\n      return state;\n    }\n    const scrolled = scrollDroppable(target, newScroll);\n    return postDroppableChange(state, scrolled, false);\n  }\n  if (action.type === 'UPDATE_DROPPABLE_IS_ENABLED') {\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Attempting to move in an unsupported phase ${state.phase}`) : invariant(false) : void 0;\n    const {\n      id,\n      isEnabled\n    } = action.payload;\n    const target = state.dimensions.droppables[id];\n    !target ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot find Droppable[id: ${id}] to toggle its enabled state`) : invariant(false) : void 0;\n    !(target.isEnabled !== isEnabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Trying to set droppable isEnabled to ${String(isEnabled)}\n      but it is already ${String(target.isEnabled)}`) : invariant(false) : void 0;\n    const updated = {\n      ...target,\n      isEnabled\n    };\n    return postDroppableChange(state, updated, true);\n  }\n  if (action.type === 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED') {\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Attempting to move in an unsupported phase ${state.phase}`) : invariant(false) : void 0;\n    const {\n      id,\n      isCombineEnabled\n    } = action.payload;\n    const target = state.dimensions.droppables[id];\n    !target ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot find Droppable[id: ${id}] to toggle its isCombineEnabled state`) : invariant(false) : void 0;\n    !(target.isCombineEnabled !== isCombineEnabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Trying to set droppable isCombineEnabled to ${String(isCombineEnabled)}\n      but it is already ${String(target.isCombineEnabled)}`) : invariant(false) : void 0;\n    const updated = {\n      ...target,\n      isCombineEnabled\n    };\n    return postDroppableChange(state, updated, true);\n  }\n  if (action.type === 'MOVE_BY_WINDOW_SCROLL') {\n    if (state.phase === 'DROP_PENDING' || state.phase === 'DROP_ANIMATING') {\n      return state;\n    }\n    !isMovementAllowed(state) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot move by window in phase ${state.phase}`) : invariant(false) : void 0;\n    !state.isWindowScrollAllowed ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Window scrolling is currently not supported for fixed lists') : invariant(false) : void 0;\n    const newScroll = action.payload.newScroll;\n    if (isEqual$1(state.viewport.scroll.current, newScroll)) {\n      return removeScrollJumpRequest(state);\n    }\n    const viewport = scrollViewport(state.viewport, newScroll);\n    if (isSnapping(state)) {\n      return refreshSnap({\n        state,\n        viewport\n      });\n    }\n    return update({\n      state,\n      viewport\n    });\n  }\n  if (action.type === 'UPDATE_VIEWPORT_MAX_SCROLL') {\n    if (!isMovementAllowed(state)) {\n      return state;\n    }\n    const maxScroll = action.payload.maxScroll;\n    if (isEqual$1(maxScroll, state.viewport.scroll.max)) {\n      return state;\n    }\n    const withMaxScroll = {\n      ...state.viewport,\n      scroll: {\n        ...state.viewport.scroll,\n        max: maxScroll\n      }\n    };\n    return {\n      ...state,\n      viewport: withMaxScroll\n    };\n  }\n  if (action.type === 'MOVE_UP' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_RIGHT') {\n    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${action.type} received while not in DRAGGING phase`) : invariant(false) : void 0;\n    const result = moveInDirection({\n      state,\n      type: action.type\n    });\n    if (!result) {\n      return state;\n    }\n    return update({\n      state,\n      impact: result.impact,\n      clientSelection: result.clientSelection,\n      scrollJumpRequest: result.scrollJumpRequest\n    });\n  }\n  if (action.type === 'DROP_PENDING') {\n    const reason = action.payload.reason;\n    !(state.phase === 'COLLECTING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only move into the DROP_PENDING phase from the COLLECTING phase') : invariant(false) : void 0;\n    const newState = {\n      ...state,\n      phase: 'DROP_PENDING',\n      isWaiting: true,\n      reason\n    };\n    return newState;\n  }\n  if (action.type === 'DROP_ANIMATE') {\n    const {\n      completed,\n      dropDuration,\n      newHomeClientOffset\n    } = action.payload;\n    !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot animate drop from phase ${state.phase}`) : invariant(false) : void 0;\n    const result = {\n      phase: 'DROP_ANIMATING',\n      completed,\n      dropDuration,\n      newHomeClientOffset,\n      dimensions: state.dimensions\n    };\n    return result;\n  }\n  if (action.type === 'DROP_COMPLETE') {\n    const {\n      completed\n    } = action.payload;\n    return {\n      phase: 'IDLE',\n      completed,\n      shouldFlush: false\n    };\n  }\n  return state;\n});\n\nconst beforeInitialCapture = args => ({\n  type: 'BEFORE_INITIAL_CAPTURE',\n  payload: args\n});\nconst lift$1 = args => ({\n  type: 'LIFT',\n  payload: args\n});\nconst initialPublish = args => ({\n  type: 'INITIAL_PUBLISH',\n  payload: args\n});\nconst publishWhileDragging = args => ({\n  type: 'PUBLISH_WHILE_DRAGGING',\n  payload: args\n});\nconst collectionStarting = () => ({\n  type: 'COLLECTION_STARTING',\n  payload: null\n});\nconst updateDroppableScroll = args => ({\n  type: 'UPDATE_DROPPABLE_SCROLL',\n  payload: args\n});\nconst updateDroppableIsEnabled = args => ({\n  type: 'UPDATE_DROPPABLE_IS_ENABLED',\n  payload: args\n});\nconst updateDroppableIsCombineEnabled = args => ({\n  type: 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED',\n  payload: args\n});\nconst move = args => ({\n  type: 'MOVE',\n  payload: args\n});\nconst moveByWindowScroll = args => ({\n  type: 'MOVE_BY_WINDOW_SCROLL',\n  payload: args\n});\nconst updateViewportMaxScroll = args => ({\n  type: 'UPDATE_VIEWPORT_MAX_SCROLL',\n  payload: args\n});\nconst moveUp = () => ({\n  type: 'MOVE_UP',\n  payload: null\n});\nconst moveDown = () => ({\n  type: 'MOVE_DOWN',\n  payload: null\n});\nconst moveRight = () => ({\n  type: 'MOVE_RIGHT',\n  payload: null\n});\nconst moveLeft = () => ({\n  type: 'MOVE_LEFT',\n  payload: null\n});\nconst flush = () => ({\n  type: 'FLUSH',\n  payload: null\n});\nconst animateDrop = args => ({\n  type: 'DROP_ANIMATE',\n  payload: args\n});\nconst completeDrop = args => ({\n  type: 'DROP_COMPLETE',\n  payload: args\n});\nconst drop$1 = args => ({\n  type: 'DROP',\n  payload: args\n});\nconst dropPending = args => ({\n  type: 'DROP_PENDING',\n  payload: args\n});\nconst dropAnimationFinished = () => ({\n  type: 'DROP_ANIMATION_FINISHED',\n  payload: null\n});\n\nfunction checkIndexes(insideDestination) {\n  if (insideDestination.length <= 1) {\n    return;\n  }\n  const indexes = insideDestination.map(d => d.descriptor.index);\n  const errors = {};\n  for (let i = 1; i < indexes.length; i++) {\n    const current = indexes[i];\n    const previous = indexes[i - 1];\n    if (current !== previous + 1) {\n      errors[current] = true;\n    }\n  }\n  if (!Object.keys(errors).length) {\n    return;\n  }\n  const formatted = indexes.map(index => {\n    const hasError = Boolean(errors[index]);\n    return hasError ? `[🔥${index}]` : `${index}`;\n  }).join(', ');\n  process.env.NODE_ENV !== \"production\" ? warning(`\n    Detected non-consecutive <Draggable /> indexes.\n\n    (This can cause unexpected bugs)\n\n    ${formatted}\n  `) : void 0;\n}\nfunction validateDimensions(critical, dimensions) {\n  if (process.env.NODE_ENV !== 'production') {\n    const insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);\n    checkIndexes(insideDestination);\n  }\n}\n\nvar lift = (marshal => ({\n  getState,\n  dispatch\n}) => next => action => {\n  if (action.type !== 'LIFT') {\n    next(action);\n    return;\n  }\n  const {\n    id,\n    clientSelection,\n    movementMode\n  } = action.payload;\n  const initial = getState();\n  if (initial.phase === 'DROP_ANIMATING') {\n    dispatch(completeDrop({\n      completed: initial.completed\n    }));\n  }\n  !(getState().phase === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected phase to start a drag') : invariant(false) : void 0;\n  dispatch(flush());\n  dispatch(beforeInitialCapture({\n    draggableId: id,\n    movementMode\n  }));\n  const scrollOptions = {\n    shouldPublishImmediately: movementMode === 'SNAP'\n  };\n  const request = {\n    draggableId: id,\n    scrollOptions\n  };\n  const {\n    critical,\n    dimensions,\n    viewport\n  } = marshal.startPublishing(request);\n  validateDimensions(critical, dimensions);\n  dispatch(initialPublish({\n    critical,\n    dimensions,\n    clientSelection,\n    movementMode,\n    viewport\n  }));\n});\n\nvar style = (marshal => () => next => action => {\n  if (action.type === 'INITIAL_PUBLISH') {\n    marshal.dragging();\n  }\n  if (action.type === 'DROP_ANIMATE') {\n    marshal.dropping(action.payload.completed.result.reason);\n  }\n  if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE') {\n    marshal.resting();\n  }\n  next(action);\n});\n\nconst curves = {\n  outOfTheWay: 'cubic-bezier(0.2, 0, 0, 1)',\n  drop: 'cubic-bezier(.2,1,.1,1)'\n};\nconst combine = {\n  opacity: {\n    drop: 0,\n    combining: 0.7\n  },\n  scale: {\n    drop: 0.75\n  }\n};\nconst timings = {\n  outOfTheWay: 0.2,\n  minDropTime: 0.33,\n  maxDropTime: 0.55\n};\nconst outOfTheWayTiming = `${timings.outOfTheWay}s ${curves.outOfTheWay}`;\nconst transitions = {\n  fluid: `opacity ${outOfTheWayTiming}`,\n  snap: `transform ${outOfTheWayTiming}, opacity ${outOfTheWayTiming}`,\n  drop: duration => {\n    const timing = `${duration}s ${curves.drop}`;\n    return `transform ${timing}, opacity ${timing}`;\n  },\n  outOfTheWay: `transform ${outOfTheWayTiming}`,\n  placeholder: `height ${outOfTheWayTiming}, width ${outOfTheWayTiming}, margin ${outOfTheWayTiming}`\n};\nconst moveTo = offset => isEqual$1(offset, origin) ? undefined : `translate(${offset.x}px, ${offset.y}px)`;\nconst transforms = {\n  moveTo,\n  drop: (offset, isCombining) => {\n    const translate = moveTo(offset);\n    if (!translate) {\n      return undefined;\n    }\n    if (!isCombining) {\n      return translate;\n    }\n    return `${translate} scale(${combine.scale.drop})`;\n  }\n};\n\nconst {\n  minDropTime,\n  maxDropTime\n} = timings;\nconst dropTimeRange = maxDropTime - minDropTime;\nconst maxDropTimeAtDistance = 1500;\nconst cancelDropModifier = 0.6;\nvar getDropDuration = (({\n  current,\n  destination,\n  reason\n}) => {\n  const distance$1 = distance(current, destination);\n  if (distance$1 <= 0) {\n    return minDropTime;\n  }\n  if (distance$1 >= maxDropTimeAtDistance) {\n    return maxDropTime;\n  }\n  const percentage = distance$1 / maxDropTimeAtDistance;\n  const duration = minDropTime + dropTimeRange * percentage;\n  const withDuration = reason === 'CANCEL' ? duration * cancelDropModifier : duration;\n  return Number(withDuration.toFixed(2));\n});\n\nvar getNewHomeClientOffset = (({\n  impact,\n  draggable,\n  dimensions,\n  viewport,\n  afterCritical\n}) => {\n  const {\n    draggables,\n    droppables\n  } = dimensions;\n  const droppableId = whatIsDraggedOver(impact);\n  const destination = droppableId ? droppables[droppableId] : null;\n  const home = droppables[draggable.descriptor.droppableId];\n  const newClientCenter = getClientBorderBoxCenter({\n    impact,\n    draggable,\n    draggables,\n    afterCritical,\n    droppable: destination || home,\n    viewport\n  });\n  const offset = subtract(newClientCenter, draggable.client.borderBox.center);\n  return offset;\n});\n\nvar getDropImpact = (({\n  draggables,\n  reason,\n  lastImpact,\n  home,\n  viewport,\n  onLiftImpact\n}) => {\n  if (!lastImpact.at || reason !== 'DROP') {\n    const recomputedHomeImpact = recompute({\n      draggables,\n      impact: onLiftImpact,\n      destination: home,\n      viewport,\n      forceShouldAnimate: true\n    });\n    return {\n      impact: recomputedHomeImpact,\n      didDropInsideDroppable: false\n    };\n  }\n  if (lastImpact.at.type === 'REORDER') {\n    return {\n      impact: lastImpact,\n      didDropInsideDroppable: true\n    };\n  }\n  const withoutMovement = {\n    ...lastImpact,\n    displaced: emptyGroups\n  };\n  return {\n    impact: withoutMovement,\n    didDropInsideDroppable: true\n  };\n});\n\nconst dropMiddleware = ({\n  getState,\n  dispatch\n}) => next => action => {\n  if (action.type !== 'DROP') {\n    next(action);\n    return;\n  }\n  const state = getState();\n  const reason = action.payload.reason;\n  if (state.phase === 'COLLECTING') {\n    dispatch(dropPending({\n      reason\n    }));\n    return;\n  }\n  if (state.phase === 'IDLE') {\n    return;\n  }\n  const isWaitingForDrop = state.phase === 'DROP_PENDING' && state.isWaiting;\n  !!isWaitingForDrop ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A DROP action occurred while DROP_PENDING and still waiting') : invariant(false) : void 0;\n  !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot drop in phase: ${state.phase}`) : invariant(false) : void 0;\n  const critical = state.critical;\n  const dimensions = state.dimensions;\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const {\n    impact,\n    didDropInsideDroppable\n  } = getDropImpact({\n    reason,\n    lastImpact: state.impact,\n    afterCritical: state.afterCritical,\n    onLiftImpact: state.onLiftImpact,\n    home: state.dimensions.droppables[state.critical.droppable.id],\n    viewport: state.viewport,\n    draggables: state.dimensions.draggables\n  });\n  const destination = didDropInsideDroppable ? tryGetDestination(impact) : null;\n  const combine = didDropInsideDroppable ? tryGetCombine(impact) : null;\n  const source = {\n    index: critical.draggable.index,\n    droppableId: critical.droppable.id\n  };\n  const result = {\n    draggableId: draggable.descriptor.id,\n    type: draggable.descriptor.type,\n    source,\n    reason,\n    mode: state.movementMode,\n    destination,\n    combine\n  };\n  const newHomeClientOffset = getNewHomeClientOffset({\n    impact,\n    draggable,\n    dimensions,\n    viewport: state.viewport,\n    afterCritical: state.afterCritical\n  });\n  const completed = {\n    critical: state.critical,\n    afterCritical: state.afterCritical,\n    result,\n    impact\n  };\n  const isAnimationRequired = !isEqual$1(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);\n  if (!isAnimationRequired) {\n    dispatch(completeDrop({\n      completed\n    }));\n    return;\n  }\n  const dropDuration = getDropDuration({\n    current: state.current.client.offset,\n    destination: newHomeClientOffset,\n    reason\n  });\n  const args = {\n    newHomeClientOffset,\n    dropDuration,\n    completed\n  };\n  dispatch(animateDrop(args));\n};\nvar drop = dropMiddleware;\n\nvar getWindowScroll = (() => ({\n  x: window.pageXOffset,\n  y: window.pageYOffset\n}));\n\nfunction getWindowScrollBinding(update) {\n  return {\n    eventName: 'scroll',\n    options: {\n      passive: true,\n      capture: false\n    },\n    fn: event => {\n      if (event.target !== window && event.target !== window.document) {\n        return;\n      }\n      update();\n    }\n  };\n}\nfunction getScrollListener({\n  onWindowScroll\n}) {\n  function updateScroll() {\n    onWindowScroll(getWindowScroll());\n  }\n  const scheduled = rafSchd(updateScroll);\n  const binding = getWindowScrollBinding(scheduled);\n  let unbind = noop$2;\n  function isActive() {\n    return unbind !== noop$2;\n  }\n  function start() {\n    !!isActive() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot start scroll listener when already active') : invariant(false) : void 0;\n    unbind = bindEvents(window, [binding]);\n  }\n  function stop() {\n    !isActive() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot stop scroll listener when not active') : invariant(false) : void 0;\n    scheduled.cancel();\n    unbind();\n    unbind = noop$2;\n  }\n  return {\n    start,\n    stop,\n    isActive\n  };\n}\n\nconst shouldEnd = action => action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';\nconst scrollListener = store => {\n  const listener = getScrollListener({\n    onWindowScroll: newScroll => {\n      store.dispatch(moveByWindowScroll({\n        newScroll\n      }));\n    }\n  });\n  return next => action => {\n    if (!listener.isActive() && action.type === 'INITIAL_PUBLISH') {\n      listener.start();\n    }\n    if (listener.isActive() && shouldEnd(action)) {\n      listener.stop();\n    }\n    next(action);\n  };\n};\nvar scrollListener$1 = scrollListener;\n\nvar getExpiringAnnounce = (announce => {\n  let wasCalled = false;\n  let isExpired = false;\n  const timeoutId = setTimeout(() => {\n    isExpired = true;\n  });\n  const result = message => {\n    if (wasCalled) {\n      process.env.NODE_ENV !== \"production\" ? warning('Announcement already made. Not making a second announcement') : void 0;\n      return;\n    }\n    if (isExpired) {\n      process.env.NODE_ENV !== \"production\" ? warning(`\n        Announcements cannot be made asynchronously.\n        Default message has already been announced.\n      `) : void 0;\n      return;\n    }\n    wasCalled = true;\n    announce(message);\n    clearTimeout(timeoutId);\n  };\n  result.wasCalled = () => wasCalled;\n  return result;\n});\n\nvar getAsyncMarshal = (() => {\n  const entries = [];\n  const execute = timerId => {\n    const index = entries.findIndex(item => item.timerId === timerId);\n    !(index !== -1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find timer') : invariant(false) : void 0;\n    const [entry] = entries.splice(index, 1);\n    entry.callback();\n  };\n  const add = fn => {\n    const timerId = setTimeout(() => execute(timerId));\n    const entry = {\n      timerId,\n      callback: fn\n    };\n    entries.push(entry);\n  };\n  const flush = () => {\n    if (!entries.length) {\n      return;\n    }\n    const shallow = [...entries];\n    entries.length = 0;\n    shallow.forEach(entry => {\n      clearTimeout(entry.timerId);\n      entry.callback();\n    });\n  };\n  return {\n    add,\n    flush\n  };\n});\n\nconst areLocationsEqual = (first, second) => {\n  if (first == null && second == null) {\n    return true;\n  }\n  if (first == null || second == null) {\n    return false;\n  }\n  return first.droppableId === second.droppableId && first.index === second.index;\n};\nconst isCombineEqual = (first, second) => {\n  if (first == null && second == null) {\n    return true;\n  }\n  if (first == null || second == null) {\n    return false;\n  }\n  return first.draggableId === second.draggableId && first.droppableId === second.droppableId;\n};\nconst isCriticalEqual = (first, second) => {\n  if (first === second) {\n    return true;\n  }\n  const isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;\n  const isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;\n  return isDraggableEqual && isDroppableEqual;\n};\n\nconst withTimings = (key, fn) => {\n  start();\n  fn();\n  finish();\n};\nconst getDragStart = (critical, mode) => ({\n  draggableId: critical.draggable.id,\n  type: critical.droppable.type,\n  source: {\n    droppableId: critical.droppable.id,\n    index: critical.draggable.index\n  },\n  mode\n});\nfunction execute(responder, data, announce, getDefaultMessage) {\n  if (!responder) {\n    announce(getDefaultMessage(data));\n    return;\n  }\n  const willExpire = getExpiringAnnounce(announce);\n  const provided = {\n    announce: willExpire\n  };\n  responder(data, provided);\n  if (!willExpire.wasCalled()) {\n    announce(getDefaultMessage(data));\n  }\n}\nvar getPublisher = ((getResponders, announce) => {\n  const asyncMarshal = getAsyncMarshal();\n  let dragging = null;\n  const beforeCapture = (draggableId, mode) => {\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onBeforeCapture as a drag start has already been published') : invariant(false) : void 0;\n    withTimings('onBeforeCapture', () => {\n      const fn = getResponders().onBeforeCapture;\n      if (fn) {\n        const before = {\n          draggableId,\n          mode\n        };\n        fn(before);\n      }\n    });\n  };\n  const beforeStart = (critical, mode) => {\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;\n    withTimings('onBeforeDragStart', () => {\n      const fn = getResponders().onBeforeDragStart;\n      if (fn) {\n        fn(getDragStart(critical, mode));\n      }\n    });\n  };\n  const start = (critical, mode) => {\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;\n    const data = getDragStart(critical, mode);\n    dragging = {\n      mode,\n      lastCritical: critical,\n      lastLocation: data.source,\n      lastCombine: null\n    };\n    asyncMarshal.add(() => {\n      withTimings('onDragStart', () => execute(getResponders().onDragStart, data, announce, preset$1.onDragStart));\n    });\n  };\n  const update = (critical, impact) => {\n    const location = tryGetDestination(impact);\n    const combine = tryGetCombine(impact);\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onDragMove when onDragStart has not been called') : invariant(false) : void 0;\n    const hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);\n    if (hasCriticalChanged) {\n      dragging.lastCritical = critical;\n    }\n    const hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);\n    if (hasLocationChanged) {\n      dragging.lastLocation = location;\n    }\n    const hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine);\n    if (hasGroupingChanged) {\n      dragging.lastCombine = combine;\n    }\n    if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {\n      return;\n    }\n    const data = {\n      ...getDragStart(critical, dragging.mode),\n      combine,\n      destination: location\n    };\n    asyncMarshal.add(() => {\n      withTimings('onDragUpdate', () => execute(getResponders().onDragUpdate, data, announce, preset$1.onDragUpdate));\n    });\n  };\n  const flush = () => {\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only flush responders while dragging') : invariant(false) : void 0;\n    asyncMarshal.flush();\n  };\n  const drop = result => {\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fire onDragEnd when there is no matching onDragStart') : invariant(false) : void 0;\n    dragging = null;\n    withTimings('onDragEnd', () => execute(getResponders().onDragEnd, result, announce, preset$1.onDragEnd));\n  };\n  const abort = () => {\n    if (!dragging) {\n      return;\n    }\n    const result = {\n      ...getDragStart(dragging.lastCritical, dragging.mode),\n      combine: null,\n      destination: null,\n      reason: 'CANCEL'\n    };\n    drop(result);\n  };\n  return {\n    beforeCapture,\n    beforeStart,\n    start,\n    update,\n    flush,\n    drop,\n    abort\n  };\n});\n\nvar responders = ((getResponders, announce) => {\n  const publisher = getPublisher(getResponders, announce);\n  return store => next => action => {\n    if (action.type === 'BEFORE_INITIAL_CAPTURE') {\n      publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);\n      return;\n    }\n    if (action.type === 'INITIAL_PUBLISH') {\n      const critical = action.payload.critical;\n      publisher.beforeStart(critical, action.payload.movementMode);\n      next(action);\n      publisher.start(critical, action.payload.movementMode);\n      return;\n    }\n    if (action.type === 'DROP_COMPLETE') {\n      const result = action.payload.completed.result;\n      publisher.flush();\n      next(action);\n      publisher.drop(result);\n      return;\n    }\n    next(action);\n    if (action.type === 'FLUSH') {\n      publisher.abort();\n      return;\n    }\n    const state = store.getState();\n    if (state.phase === 'DRAGGING') {\n      publisher.update(state.critical, state.impact);\n    }\n  };\n});\n\nconst dropAnimationFinishMiddleware = store => next => action => {\n  if (action.type !== 'DROP_ANIMATION_FINISHED') {\n    next(action);\n    return;\n  }\n  const state = store.getState();\n  !(state.phase === 'DROP_ANIMATING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot finish a drop animating when no drop is occurring') : invariant(false) : void 0;\n  store.dispatch(completeDrop({\n    completed: state.completed\n  }));\n};\nvar dropAnimationFinish = dropAnimationFinishMiddleware;\n\nconst dropAnimationFlushOnScrollMiddleware = store => {\n  let unbind = null;\n  let frameId = null;\n  function clear() {\n    if (frameId) {\n      cancelAnimationFrame(frameId);\n      frameId = null;\n    }\n    if (unbind) {\n      unbind();\n      unbind = null;\n    }\n  }\n  return next => action => {\n    if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATION_FINISHED') {\n      clear();\n    }\n    next(action);\n    if (action.type !== 'DROP_ANIMATE') {\n      return;\n    }\n    const binding = {\n      eventName: 'scroll',\n      options: {\n        capture: true,\n        passive: false,\n        once: true\n      },\n      fn: function flushDropAnimation() {\n        const state = store.getState();\n        if (state.phase === 'DROP_ANIMATING') {\n          store.dispatch(dropAnimationFinished());\n        }\n      }\n    };\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      unbind = bindEvents(window, [binding]);\n    });\n  };\n};\nvar dropAnimationFlushOnScroll = dropAnimationFlushOnScrollMiddleware;\n\nvar dimensionMarshalStopper = (marshal => () => next => action => {\n  if (action.type === 'DROP_COMPLETE' || action.type === 'FLUSH' || action.type === 'DROP_ANIMATE') {\n    marshal.stopPublishing();\n  }\n  next(action);\n});\n\nvar focus = (marshal => {\n  let isWatching = false;\n  return () => next => action => {\n    if (action.type === 'INITIAL_PUBLISH') {\n      isWatching = true;\n      marshal.tryRecordFocus(action.payload.critical.draggable.id);\n      next(action);\n      marshal.tryRestoreFocusRecorded();\n      return;\n    }\n    next(action);\n    if (!isWatching) {\n      return;\n    }\n    if (action.type === 'FLUSH') {\n      isWatching = false;\n      marshal.tryRestoreFocusRecorded();\n      return;\n    }\n    if (action.type === 'DROP_COMPLETE') {\n      isWatching = false;\n      const result = action.payload.completed.result;\n      if (result.combine) {\n        marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);\n      }\n      marshal.tryRestoreFocusRecorded();\n    }\n  };\n});\n\nconst shouldStop = action => action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';\nvar autoScroll = (autoScroller => store => next => action => {\n  if (shouldStop(action)) {\n    autoScroller.stop();\n    next(action);\n    return;\n  }\n  if (action.type === 'INITIAL_PUBLISH') {\n    next(action);\n    const state = store.getState();\n    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected phase to be DRAGGING after INITIAL_PUBLISH') : invariant(false) : void 0;\n    autoScroller.start(state);\n    return;\n  }\n  next(action);\n  autoScroller.scroll(store.getState());\n});\n\nconst pendingDrop = store => next => action => {\n  next(action);\n  if (action.type !== 'PUBLISH_WHILE_DRAGGING') {\n    return;\n  }\n  const postActionState = store.getState();\n  if (postActionState.phase !== 'DROP_PENDING') {\n    return;\n  }\n  if (postActionState.isWaiting) {\n    return;\n  }\n  store.dispatch(drop$1({\n    reason: postActionState.reason\n  }));\n};\nvar pendingDrop$1 = pendingDrop;\n\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  name: '@hello-pangea/dnd'\n}) : compose;\nvar createStore = (({\n  dimensionMarshal,\n  focusMarshal,\n  styleMarshal,\n  getResponders,\n  announce,\n  autoScroller\n}) => createStore$1(reducer, composeEnhancers(applyMiddleware(style(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift(dimensionMarshal), drop, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop$1, autoScroll(autoScroller), scrollListener$1, focus(focusMarshal), responders(getResponders, announce)))));\n\nconst clean$1 = () => ({\n  additions: {},\n  removals: {},\n  modified: {}\n});\nfunction createPublisher({\n  registry,\n  callbacks\n}) {\n  let staging = clean$1();\n  let frameId = null;\n  const collect = () => {\n    if (frameId) {\n      return;\n    }\n    callbacks.collectionStarting();\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      start();\n      const {\n        additions,\n        removals,\n        modified\n      } = staging;\n      const added = Object.keys(additions).map(id => registry.draggable.getById(id).getDimension(origin)).sort((a, b) => a.descriptor.index - b.descriptor.index);\n      const updated = Object.keys(modified).map(id => {\n        const entry = registry.droppable.getById(id);\n        const scroll = entry.callbacks.getScrollWhileDragging();\n        return {\n          droppableId: id,\n          scroll\n        };\n      });\n      const result = {\n        additions: added,\n        removals: Object.keys(removals),\n        modified: updated\n      };\n      staging = clean$1();\n      finish();\n      callbacks.publish(result);\n    });\n  };\n  const add = entry => {\n    const id = entry.descriptor.id;\n    staging.additions[id] = entry;\n    staging.modified[entry.descriptor.droppableId] = true;\n    if (staging.removals[id]) {\n      delete staging.removals[id];\n    }\n    collect();\n  };\n  const remove = entry => {\n    const descriptor = entry.descriptor;\n    staging.removals[descriptor.id] = true;\n    staging.modified[descriptor.droppableId] = true;\n    if (staging.additions[descriptor.id]) {\n      delete staging.additions[descriptor.id];\n    }\n    collect();\n  };\n  const stop = () => {\n    if (!frameId) {\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    frameId = null;\n    staging = clean$1();\n  };\n  return {\n    add,\n    remove,\n    stop\n  };\n}\n\nvar getMaxScroll = (({\n  scrollHeight,\n  scrollWidth,\n  height,\n  width\n}) => {\n  const maxScroll = subtract({\n    x: scrollWidth,\n    y: scrollHeight\n  }, {\n    x: width,\n    y: height\n  });\n  const adjustedMaxScroll = {\n    x: Math.max(0, maxScroll.x),\n    y: Math.max(0, maxScroll.y)\n  };\n  return adjustedMaxScroll;\n});\n\nvar getDocumentElement = (() => {\n  const doc = document.documentElement;\n  !doc ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot find document.documentElement') : invariant(false) : void 0;\n  return doc;\n});\n\nvar getMaxWindowScroll = (() => {\n  const doc = getDocumentElement();\n  const maxScroll = getMaxScroll({\n    scrollHeight: doc.scrollHeight,\n    scrollWidth: doc.scrollWidth,\n    width: doc.clientWidth,\n    height: doc.clientHeight\n  });\n  return maxScroll;\n});\n\nvar getViewport = (() => {\n  const scroll = getWindowScroll();\n  const maxScroll = getMaxWindowScroll();\n  const top = scroll.y;\n  const left = scroll.x;\n  const doc = getDocumentElement();\n  const width = doc.clientWidth;\n  const height = doc.clientHeight;\n  const right = left + width;\n  const bottom = top + height;\n  const frame = getRect({\n    top,\n    left,\n    right,\n    bottom\n  });\n  const viewport = {\n    frame,\n    scroll: {\n      initial: scroll,\n      current: scroll,\n      max: maxScroll,\n      diff: {\n        value: origin,\n        displacement: origin\n      }\n    }\n  };\n  return viewport;\n});\n\nvar getInitialPublish = (({\n  critical,\n  scrollOptions,\n  registry\n}) => {\n  start();\n  const viewport = getViewport();\n  const windowScroll = viewport.scroll.current;\n  const home = critical.droppable;\n  const droppables = registry.droppable.getAllByType(home.type).map(entry => entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions));\n  const draggables = registry.draggable.getAllByType(critical.draggable.type).map(entry => entry.getDimension(windowScroll));\n  const dimensions = {\n    draggables: toDraggableMap(draggables),\n    droppables: toDroppableMap(droppables)\n  };\n  finish();\n  const result = {\n    dimensions,\n    critical,\n    viewport\n  };\n  return result;\n});\n\nfunction shouldPublishUpdate(registry, dragging, entry) {\n  if (entry.descriptor.id === dragging.id) {\n    return false;\n  }\n  if (entry.descriptor.type !== dragging.type) {\n    return false;\n  }\n  const home = registry.droppable.getById(entry.descriptor.droppableId);\n  if (home.descriptor.mode !== 'virtual') {\n    process.env.NODE_ENV !== \"production\" ? warning(`\n      You are attempting to add or remove a Draggable [id: ${entry.descriptor.id}]\n      while a drag is occurring. This is only supported for virtual lists.\n\n      See https://github.com/hello-pangea/dnd/blob/main/docs/patterns/virtual-lists.md\n    `) : void 0;\n    return false;\n  }\n  return true;\n}\nvar createDimensionMarshal = ((registry, callbacks) => {\n  let collection = null;\n  const publisher = createPublisher({\n    callbacks: {\n      publish: callbacks.publishWhileDragging,\n      collectionStarting: callbacks.collectionStarting\n    },\n    registry\n  });\n  const updateDroppableIsEnabled = (id, isEnabled) => {\n    !registry.droppable.exists(id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot update is enabled flag of Droppable ${id} as it is not registered`) : invariant(false) : void 0;\n    if (!collection) {\n      return;\n    }\n    callbacks.updateDroppableIsEnabled({\n      id,\n      isEnabled\n    });\n  };\n  const updateDroppableIsCombineEnabled = (id, isCombineEnabled) => {\n    if (!collection) {\n      return;\n    }\n    !registry.droppable.exists(id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot update isCombineEnabled flag of Droppable ${id} as it is not registered`) : invariant(false) : void 0;\n    callbacks.updateDroppableIsCombineEnabled({\n      id,\n      isCombineEnabled\n    });\n  };\n  const updateDroppableScroll = (id, newScroll) => {\n    if (!collection) {\n      return;\n    }\n    !registry.droppable.exists(id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot update the scroll on Droppable ${id} as it is not registered`) : invariant(false) : void 0;\n    callbacks.updateDroppableScroll({\n      id,\n      newScroll\n    });\n  };\n  const scrollDroppable = (id, change) => {\n    if (!collection) {\n      return;\n    }\n    registry.droppable.getById(id).callbacks.scroll(change);\n  };\n  const stopPublishing = () => {\n    if (!collection) {\n      return;\n    }\n    publisher.stop();\n    const home = collection.critical.droppable;\n    registry.droppable.getAllByType(home.type).forEach(entry => entry.callbacks.dragStopped());\n    collection.unsubscribe();\n    collection = null;\n  };\n  const subscriber = event => {\n    !collection ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Should only be subscribed when a collection is occurring') : invariant(false) : void 0;\n    const dragging = collection.critical.draggable;\n    if (event.type === 'ADDITION') {\n      if (shouldPublishUpdate(registry, dragging, event.value)) {\n        publisher.add(event.value);\n      }\n    }\n    if (event.type === 'REMOVAL') {\n      if (shouldPublishUpdate(registry, dragging, event.value)) {\n        publisher.remove(event.value);\n      }\n    }\n  };\n  const startPublishing = request => {\n    !!collection ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot start capturing critical dimensions as there is already a collection') : invariant(false) : void 0;\n    const entry = registry.draggable.getById(request.draggableId);\n    const home = registry.droppable.getById(entry.descriptor.droppableId);\n    const critical = {\n      draggable: entry.descriptor,\n      droppable: home.descriptor\n    };\n    const unsubscribe = registry.subscribe(subscriber);\n    collection = {\n      critical,\n      unsubscribe\n    };\n    return getInitialPublish({\n      critical,\n      registry,\n      scrollOptions: request.scrollOptions\n    });\n  };\n  const marshal = {\n    updateDroppableIsEnabled,\n    updateDroppableIsCombineEnabled,\n    scrollDroppable,\n    updateDroppableScroll,\n    startPublishing,\n    stopPublishing\n  };\n  return marshal;\n});\n\nvar canStartDrag = ((state, id) => {\n  if (state.phase === 'IDLE') {\n    return true;\n  }\n  if (state.phase !== 'DROP_ANIMATING') {\n    return false;\n  }\n  if (state.completed.result.draggableId === id) {\n    return false;\n  }\n  return state.completed.result.reason === 'DROP';\n});\n\nvar scrollWindow = (change => {\n  window.scrollBy(change.x, change.y);\n});\n\nconst getScrollableDroppables = memoizeOne(droppables => toDroppableList(droppables).filter(droppable => {\n  if (!droppable.isEnabled) {\n    return false;\n  }\n  if (!droppable.frame) {\n    return false;\n  }\n  return true;\n}));\nconst getScrollableDroppableOver = (target, droppables) => {\n  const maybe = getScrollableDroppables(droppables).find(droppable => {\n    !droppable.frame ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid result') : invariant(false) : void 0;\n    return isPositionInFrame(droppable.frame.pageMarginBox)(target);\n  }) || null;\n  return maybe;\n};\nvar getBestScrollableDroppable = (({\n  center,\n  destination,\n  droppables\n}) => {\n  if (destination) {\n    const dimension = droppables[destination];\n    if (!dimension.frame) {\n      return null;\n    }\n    return dimension;\n  }\n  const dimension = getScrollableDroppableOver(center, droppables);\n  return dimension;\n});\n\nconst defaultAutoScrollerOptions = {\n  startFromPercentage: 0.25,\n  maxScrollAtPercentage: 0.05,\n  maxPixelScroll: 28,\n  ease: percentage => percentage ** 2,\n  durationDampening: {\n    stopDampeningAt: 1200,\n    accelerateAt: 360\n  },\n  disabled: false\n};\n\nvar getDistanceThresholds = ((container, axis, getAutoScrollerOptions = () => defaultAutoScrollerOptions) => {\n  const autoScrollerOptions = getAutoScrollerOptions();\n  const startScrollingFrom = container[axis.size] * autoScrollerOptions.startFromPercentage;\n  const maxScrollValueAt = container[axis.size] * autoScrollerOptions.maxScrollAtPercentage;\n  const thresholds = {\n    startScrollingFrom,\n    maxScrollValueAt\n  };\n  return thresholds;\n});\n\nvar getPercentage = (({\n  startOfRange,\n  endOfRange,\n  current\n}) => {\n  const range = endOfRange - startOfRange;\n  if (range === 0) {\n    process.env.NODE_ENV !== \"production\" ? warning(`\n      Detected distance range of 0 in the fluid auto scroller\n      This is unexpected and would cause a divide by 0 issue.\n      Not allowing an auto scroll\n    `) : void 0;\n    return 0;\n  }\n  const currentInRange = current - startOfRange;\n  const percentage = currentInRange / range;\n  return percentage;\n});\n\nvar minScroll = 1;\n\nvar getValueFromDistance = ((distanceToEdge, thresholds, getAutoScrollerOptions = () => defaultAutoScrollerOptions) => {\n  const autoScrollerOptions = getAutoScrollerOptions();\n  if (distanceToEdge > thresholds.startScrollingFrom) {\n    return 0;\n  }\n  if (distanceToEdge <= thresholds.maxScrollValueAt) {\n    return autoScrollerOptions.maxPixelScroll;\n  }\n  if (distanceToEdge === thresholds.startScrollingFrom) {\n    return minScroll;\n  }\n  const percentageFromMaxScrollValueAt = getPercentage({\n    startOfRange: thresholds.maxScrollValueAt,\n    endOfRange: thresholds.startScrollingFrom,\n    current: distanceToEdge\n  });\n  const percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;\n  const scroll = autoScrollerOptions.maxPixelScroll * autoScrollerOptions.ease(percentageFromStartScrollingFrom);\n  return Math.ceil(scroll);\n});\n\nvar dampenValueByTime = ((proposedScroll, dragStartTime, getAutoScrollerOptions) => {\n  const autoScrollerOptions = getAutoScrollerOptions();\n  const accelerateAt = autoScrollerOptions.durationDampening.accelerateAt;\n  const stopAt = autoScrollerOptions.durationDampening.stopDampeningAt;\n  const startOfRange = dragStartTime;\n  const endOfRange = stopAt;\n  const now = Date.now();\n  const runTime = now - startOfRange;\n  if (runTime >= stopAt) {\n    return proposedScroll;\n  }\n  if (runTime < accelerateAt) {\n    return minScroll;\n  }\n  const betweenAccelerateAtAndStopAtPercentage = getPercentage({\n    startOfRange: accelerateAt,\n    endOfRange,\n    current: runTime\n  });\n  const scroll = proposedScroll * autoScrollerOptions.ease(betweenAccelerateAtAndStopAtPercentage);\n  return Math.ceil(scroll);\n});\n\nvar getValue = (({\n  distanceToEdge,\n  thresholds,\n  dragStartTime,\n  shouldUseTimeDampening,\n  getAutoScrollerOptions\n}) => {\n  const scroll = getValueFromDistance(distanceToEdge, thresholds, getAutoScrollerOptions);\n  if (scroll === 0) {\n    return 0;\n  }\n  if (!shouldUseTimeDampening) {\n    return scroll;\n  }\n  return Math.max(dampenValueByTime(scroll, dragStartTime, getAutoScrollerOptions), minScroll);\n});\n\nvar getScrollOnAxis = (({\n  container,\n  distanceToEdges,\n  dragStartTime,\n  axis,\n  shouldUseTimeDampening,\n  getAutoScrollerOptions\n}) => {\n  const thresholds = getDistanceThresholds(container, axis, getAutoScrollerOptions);\n  const isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];\n  if (isCloserToEnd) {\n    return getValue({\n      distanceToEdge: distanceToEdges[axis.end],\n      thresholds,\n      dragStartTime,\n      shouldUseTimeDampening,\n      getAutoScrollerOptions\n    });\n  }\n  return -1 * getValue({\n    distanceToEdge: distanceToEdges[axis.start],\n    thresholds,\n    dragStartTime,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n});\n\nvar adjustForSizeLimits = (({\n  container,\n  subject,\n  proposedScroll\n}) => {\n  const isTooBigVertically = subject.height > container.height;\n  const isTooBigHorizontally = subject.width > container.width;\n  if (!isTooBigHorizontally && !isTooBigVertically) {\n    return proposedScroll;\n  }\n  if (isTooBigHorizontally && isTooBigVertically) {\n    return null;\n  }\n  return {\n    x: isTooBigHorizontally ? 0 : proposedScroll.x,\n    y: isTooBigVertically ? 0 : proposedScroll.y\n  };\n});\n\nconst clean = apply(value => value === 0 ? 0 : value);\nvar getScroll$1 = (({\n  dragStartTime,\n  container,\n  subject,\n  center,\n  shouldUseTimeDampening,\n  getAutoScrollerOptions\n}) => {\n  const distanceToEdges = {\n    top: center.y - container.top,\n    right: container.right - center.x,\n    bottom: container.bottom - center.y,\n    left: center.x - container.left\n  };\n  const y = getScrollOnAxis({\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis: vertical,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  const x = getScrollOnAxis({\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis: horizontal,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  const required = clean({\n    x,\n    y\n  });\n  if (isEqual$1(required, origin)) {\n    return null;\n  }\n  const limited = adjustForSizeLimits({\n    container,\n    subject,\n    proposedScroll: required\n  });\n  if (!limited) {\n    return null;\n  }\n  return isEqual$1(limited, origin) ? null : limited;\n});\n\nconst smallestSigned = apply(value => {\n  if (value === 0) {\n    return 0;\n  }\n  return value > 0 ? 1 : -1;\n});\nconst getOverlap = (() => {\n  const getRemainder = (target, max) => {\n    if (target < 0) {\n      return target;\n    }\n    if (target > max) {\n      return target - max;\n    }\n    return 0;\n  };\n  return ({\n    current,\n    max,\n    change\n  }) => {\n    const targetScroll = add(current, change);\n    const overlap = {\n      x: getRemainder(targetScroll.x, max.x),\n      y: getRemainder(targetScroll.y, max.y)\n    };\n    if (isEqual$1(overlap, origin)) {\n      return null;\n    }\n    return overlap;\n  };\n})();\nconst canPartiallyScroll = ({\n  max: rawMax,\n  current,\n  change\n}) => {\n  const max = {\n    x: Math.max(current.x, rawMax.x),\n    y: Math.max(current.y, rawMax.y)\n  };\n  const smallestChange = smallestSigned(change);\n  const overlap = getOverlap({\n    max,\n    current,\n    change: smallestChange\n  });\n  if (!overlap) {\n    return true;\n  }\n  if (smallestChange.x !== 0 && overlap.x === 0) {\n    return true;\n  }\n  if (smallestChange.y !== 0 && overlap.y === 0) {\n    return true;\n  }\n  return false;\n};\nconst canScrollWindow = (viewport, change) => canPartiallyScroll({\n  current: viewport.scroll.current,\n  max: viewport.scroll.max,\n  change\n});\nconst getWindowOverlap = (viewport, change) => {\n  if (!canScrollWindow(viewport, change)) {\n    return null;\n  }\n  const max = viewport.scroll.max;\n  const current = viewport.scroll.current;\n  return getOverlap({\n    current,\n    max,\n    change\n  });\n};\nconst canScrollDroppable = (droppable, change) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return false;\n  }\n  return canPartiallyScroll({\n    current: frame.scroll.current,\n    max: frame.scroll.max,\n    change\n  });\n};\nconst getDroppableOverlap = (droppable, change) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return null;\n  }\n  if (!canScrollDroppable(droppable, change)) {\n    return null;\n  }\n  return getOverlap({\n    current: frame.scroll.current,\n    max: frame.scroll.max,\n    change\n  });\n};\n\nvar getWindowScrollChange = (({\n  viewport,\n  subject,\n  center,\n  dragStartTime,\n  shouldUseTimeDampening,\n  getAutoScrollerOptions\n}) => {\n  const scroll = getScroll$1({\n    dragStartTime,\n    container: viewport.frame,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  return scroll && canScrollWindow(viewport, scroll) ? scroll : null;\n});\n\nvar getDroppableScrollChange = (({\n  droppable,\n  subject,\n  center,\n  dragStartTime,\n  shouldUseTimeDampening,\n  getAutoScrollerOptions\n}) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return null;\n  }\n  const scroll = getScroll$1({\n    dragStartTime,\n    container: frame.pageMarginBox,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  return scroll && canScrollDroppable(droppable, scroll) ? scroll : null;\n});\n\nvar scroll = (({\n  state,\n  dragStartTime,\n  shouldUseTimeDampening,\n  scrollWindow,\n  scrollDroppable,\n  getAutoScrollerOptions\n}) => {\n  const center = state.current.page.borderBoxCenter;\n  const draggable = state.dimensions.draggables[state.critical.draggable.id];\n  const subject = draggable.page.marginBox;\n  if (state.isWindowScrollAllowed) {\n    const viewport = state.viewport;\n    const change = getWindowScrollChange({\n      dragStartTime,\n      viewport,\n      subject,\n      center,\n      shouldUseTimeDampening,\n      getAutoScrollerOptions\n    });\n    if (change) {\n      scrollWindow(change);\n      return;\n    }\n  }\n  const droppable = getBestScrollableDroppable({\n    center,\n    destination: whatIsDraggedOver(state.impact),\n    droppables: state.dimensions.droppables\n  });\n  if (!droppable) {\n    return;\n  }\n  const change = getDroppableScrollChange({\n    dragStartTime,\n    droppable,\n    subject,\n    center,\n    shouldUseTimeDampening,\n    getAutoScrollerOptions\n  });\n  if (change) {\n    scrollDroppable(droppable.descriptor.id, change);\n  }\n});\n\nvar createFluidScroller = (({\n  scrollWindow,\n  scrollDroppable,\n  getAutoScrollerOptions = () => defaultAutoScrollerOptions\n}) => {\n  const scheduleWindowScroll = rafSchd(scrollWindow);\n  const scheduleDroppableScroll = rafSchd(scrollDroppable);\n  let dragging = null;\n  const tryScroll = state => {\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot fluid scroll if not dragging') : invariant(false) : void 0;\n    const {\n      shouldUseTimeDampening,\n      dragStartTime\n    } = dragging;\n    scroll({\n      state,\n      scrollWindow: scheduleWindowScroll,\n      scrollDroppable: scheduleDroppableScroll,\n      dragStartTime,\n      shouldUseTimeDampening,\n      getAutoScrollerOptions\n    });\n  };\n  const start$1 = state => {\n    start();\n    !!dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot start auto scrolling when already started') : invariant(false) : void 0;\n    const dragStartTime = Date.now();\n    let wasScrollNeeded = false;\n    const fakeScrollCallback = () => {\n      wasScrollNeeded = true;\n    };\n    scroll({\n      state,\n      dragStartTime: 0,\n      shouldUseTimeDampening: false,\n      scrollWindow: fakeScrollCallback,\n      scrollDroppable: fakeScrollCallback,\n      getAutoScrollerOptions\n    });\n    dragging = {\n      dragStartTime,\n      shouldUseTimeDampening: wasScrollNeeded\n    };\n    finish();\n    if (wasScrollNeeded) {\n      tryScroll(state);\n    }\n  };\n  const stop = () => {\n    if (!dragging) {\n      return;\n    }\n    scheduleWindowScroll.cancel();\n    scheduleDroppableScroll.cancel();\n    dragging = null;\n  };\n  return {\n    start: start$1,\n    stop,\n    scroll: tryScroll\n  };\n});\n\nvar createJumpScroller = (({\n  move,\n  scrollDroppable,\n  scrollWindow\n}) => {\n  const moveByOffset = (state, offset) => {\n    const client = add(state.current.client.selection, offset);\n    move({\n      client\n    });\n  };\n  const scrollDroppableAsMuchAsItCan = (droppable, change) => {\n    if (!canScrollDroppable(droppable, change)) {\n      return change;\n    }\n    const overlap = getDroppableOverlap(droppable, change);\n    if (!overlap) {\n      scrollDroppable(droppable.descriptor.id, change);\n      return null;\n    }\n    const whatTheDroppableCanScroll = subtract(change, overlap);\n    scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);\n    const remainder = subtract(change, whatTheDroppableCanScroll);\n    return remainder;\n  };\n  const scrollWindowAsMuchAsItCan = (isWindowScrollAllowed, viewport, change) => {\n    if (!isWindowScrollAllowed) {\n      return change;\n    }\n    if (!canScrollWindow(viewport, change)) {\n      return change;\n    }\n    const overlap = getWindowOverlap(viewport, change);\n    if (!overlap) {\n      scrollWindow(change);\n      return null;\n    }\n    const whatTheWindowCanScroll = subtract(change, overlap);\n    scrollWindow(whatTheWindowCanScroll);\n    const remainder = subtract(change, whatTheWindowCanScroll);\n    return remainder;\n  };\n  const jumpScroller = state => {\n    const request = state.scrollJumpRequest;\n    if (!request) {\n      return;\n    }\n    const destination = whatIsDraggedOver(state.impact);\n    !destination ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot perform a jump scroll when there is no destination') : invariant(false) : void 0;\n    const droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);\n    if (!droppableRemainder) {\n      return;\n    }\n    const viewport = state.viewport;\n    const windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);\n    if (!windowRemainder) {\n      return;\n    }\n    moveByOffset(state, windowRemainder);\n  };\n  return jumpScroller;\n});\n\nvar createAutoScroller = (({\n  scrollDroppable,\n  scrollWindow,\n  move,\n  getAutoScrollerOptions\n}) => {\n  const fluidScroller = createFluidScroller({\n    scrollWindow,\n    scrollDroppable,\n    getAutoScrollerOptions\n  });\n  const jumpScroll = createJumpScroller({\n    move,\n    scrollWindow,\n    scrollDroppable\n  });\n  const scroll = state => {\n    const autoScrollerOptions = getAutoScrollerOptions();\n    if (autoScrollerOptions.disabled || state.phase !== 'DRAGGING') {\n      return;\n    }\n    if (state.movementMode === 'FLUID') {\n      fluidScroller.scroll(state);\n      return;\n    }\n    if (!state.scrollJumpRequest) {\n      return;\n    }\n    jumpScroll(state);\n  };\n  const scroller = {\n    scroll,\n    start: fluidScroller.start,\n    stop: fluidScroller.stop\n  };\n  return scroller;\n});\n\nconst prefix = 'data-rfd';\nconst dragHandle = (() => {\n  const base = `${prefix}-drag-handle`;\n  return {\n    base,\n    draggableId: `${base}-draggable-id`,\n    contextId: `${base}-context-id`\n  };\n})();\nconst draggable = (() => {\n  const base = `${prefix}-draggable`;\n  return {\n    base,\n    contextId: `${base}-context-id`,\n    id: `${base}-id`\n  };\n})();\nconst droppable = (() => {\n  const base = `${prefix}-droppable`;\n  return {\n    base,\n    contextId: `${base}-context-id`,\n    id: `${base}-id`\n  };\n})();\nconst scrollContainer = {\n  contextId: `${prefix}-scroll-container-context-id`\n};\n\nconst makeGetSelector = context => attribute => `[${attribute}=\"${context}\"]`;\nconst getStyles = (rules, property) => rules.map(rule => {\n  const value = rule.styles[property];\n  if (!value) {\n    return '';\n  }\n  return `${rule.selector} { ${value} }`;\n}).join(' ');\nconst noPointerEvents = 'pointer-events: none;';\nvar getStyles$1 = (contextId => {\n  const getSelector = makeGetSelector(contextId);\n  const dragHandle$1 = (() => {\n    const grabCursor = `\n      cursor: -webkit-grab;\n      cursor: grab;\n    `;\n    return {\n      selector: getSelector(dragHandle.contextId),\n      styles: {\n        always: `\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        `,\n        resting: grabCursor,\n        dragging: noPointerEvents,\n        dropAnimating: grabCursor\n      }\n    };\n  })();\n  const draggable$1 = (() => {\n    const transition = `\n      transition: ${transitions.outOfTheWay};\n    `;\n    return {\n      selector: getSelector(draggable.contextId),\n      styles: {\n        dragging: transition,\n        dropAnimating: transition,\n        userCancel: transition\n      }\n    };\n  })();\n  const droppable$1 = {\n    selector: getSelector(droppable.contextId),\n    styles: {\n      always: `overflow-anchor: none;`\n    }\n  };\n  const body = {\n    selector: 'body',\n    styles: {\n      dragging: `\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      `\n    }\n  };\n  const rules = [draggable$1, dragHandle$1, droppable$1, body];\n  return {\n    always: getStyles(rules, 'always'),\n    resting: getStyles(rules, 'resting'),\n    dragging: getStyles(rules, 'dragging'),\n    dropAnimating: getStyles(rules, 'dropAnimating'),\n    userCancel: getStyles(rules, 'userCancel')\n  };\n});\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect$1 : useEffect;\nvar useLayoutEffect = useIsomorphicLayoutEffect;\n\nconst getHead = () => {\n  const head = document.querySelector('head');\n  !head ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot find the head to append a style to') : invariant(false) : void 0;\n  return head;\n};\nconst createStyleEl = nonce => {\n  const el = document.createElement('style');\n  if (nonce) {\n    el.setAttribute('nonce', nonce);\n  }\n  el.type = 'text/css';\n  return el;\n};\nfunction useStyleMarshal(contextId, nonce) {\n  const styles = useMemo(() => getStyles$1(contextId), [contextId]);\n  const alwaysRef = useRef(null);\n  const dynamicRef = useRef(null);\n  const setDynamicStyle = useCallback(memoizeOne(proposed => {\n    const el = dynamicRef.current;\n    !el ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot set dynamic style element if it is not set') : invariant(false) : void 0;\n    el.textContent = proposed;\n  }), []);\n  const setAlwaysStyle = useCallback(proposed => {\n    const el = alwaysRef.current;\n    !el ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot set dynamic style element if it is not set') : invariant(false) : void 0;\n    el.textContent = proposed;\n  }, []);\n  useLayoutEffect(() => {\n    !(!alwaysRef.current && !dynamicRef.current) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'style elements already mounted') : invariant(false) : void 0;\n    const always = createStyleEl(nonce);\n    const dynamic = createStyleEl(nonce);\n    alwaysRef.current = always;\n    dynamicRef.current = dynamic;\n    always.setAttribute(`${prefix}-always`, contextId);\n    dynamic.setAttribute(`${prefix}-dynamic`, contextId);\n    getHead().appendChild(always);\n    getHead().appendChild(dynamic);\n    setAlwaysStyle(styles.always);\n    setDynamicStyle(styles.resting);\n    return () => {\n      const remove = ref => {\n        const current = ref.current;\n        !current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot unmount ref as it is not set') : invariant(false) : void 0;\n        getHead().removeChild(current);\n        ref.current = null;\n      };\n      remove(alwaysRef);\n      remove(dynamicRef);\n    };\n  }, [nonce, setAlwaysStyle, setDynamicStyle, styles.always, styles.resting, contextId]);\n  const dragging = useCallback(() => setDynamicStyle(styles.dragging), [setDynamicStyle, styles.dragging]);\n  const dropping = useCallback(reason => {\n    if (reason === 'DROP') {\n      setDynamicStyle(styles.dropAnimating);\n      return;\n    }\n    setDynamicStyle(styles.userCancel);\n  }, [setDynamicStyle, styles.dropAnimating, styles.userCancel]);\n  const resting = useCallback(() => {\n    if (!dynamicRef.current) {\n      return;\n    }\n    setDynamicStyle(styles.resting);\n  }, [setDynamicStyle, styles.resting]);\n  const marshal = useMemo(() => ({\n    dragging,\n    dropping,\n    resting\n  }), [dragging, dropping, resting]);\n  return marshal;\n}\n\nfunction querySelectorAll(parentNode, selector) {\n  return Array.from(parentNode.querySelectorAll(selector));\n}\n\nvar getWindowFromEl = (el => {\n  if (el && el.ownerDocument && el.ownerDocument.defaultView) {\n    return el.ownerDocument.defaultView;\n  }\n  return window;\n});\n\nfunction isHtmlElement(el) {\n  return el instanceof getWindowFromEl(el).HTMLElement;\n}\n\nfunction findDragHandle(contextId, draggableId) {\n  const selector = `[${dragHandle.contextId}=\"${contextId}\"]`;\n  const possible = querySelectorAll(document, selector);\n  if (!possible.length) {\n    process.env.NODE_ENV !== \"production\" ? warning(`Unable to find any drag handles in the context \"${contextId}\"`) : void 0;\n    return null;\n  }\n  const handle = possible.find(el => {\n    return el.getAttribute(dragHandle.draggableId) === draggableId;\n  });\n  if (!handle) {\n    process.env.NODE_ENV !== \"production\" ? warning(`Unable to find drag handle with id \"${draggableId}\" as no handle with a matching id was found`) : void 0;\n    return null;\n  }\n  if (!isHtmlElement(handle)) {\n    process.env.NODE_ENV !== \"production\" ? warning('drag handle needs to be a HTMLElement') : void 0;\n    return null;\n  }\n  return handle;\n}\n\nfunction useFocusMarshal(contextId) {\n  const entriesRef = useRef({});\n  const recordRef = useRef(null);\n  const restoreFocusFrameRef = useRef(null);\n  const isMountedRef = useRef(false);\n  const register = useCallback(function register(id, focus) {\n    const entry = {\n      id,\n      focus\n    };\n    entriesRef.current[id] = entry;\n    return function unregister() {\n      const entries = entriesRef.current;\n      const current = entries[id];\n      if (current !== entry) {\n        delete entries[id];\n      }\n    };\n  }, []);\n  const tryGiveFocus = useCallback(function tryGiveFocus(tryGiveFocusTo) {\n    const handle = findDragHandle(contextId, tryGiveFocusTo);\n    if (handle && handle !== document.activeElement) {\n      handle.focus();\n    }\n  }, [contextId]);\n  const tryShiftRecord = useCallback(function tryShiftRecord(previous, redirectTo) {\n    if (recordRef.current === previous) {\n      recordRef.current = redirectTo;\n    }\n  }, []);\n  const tryRestoreFocusRecorded = useCallback(function tryRestoreFocusRecorded() {\n    if (restoreFocusFrameRef.current) {\n      return;\n    }\n    if (!isMountedRef.current) {\n      return;\n    }\n    restoreFocusFrameRef.current = requestAnimationFrame(() => {\n      restoreFocusFrameRef.current = null;\n      const record = recordRef.current;\n      if (record) {\n        tryGiveFocus(record);\n      }\n    });\n  }, [tryGiveFocus]);\n  const tryRecordFocus = useCallback(function tryRecordFocus(id) {\n    recordRef.current = null;\n    const focused = document.activeElement;\n    if (!focused) {\n      return;\n    }\n    if (focused.getAttribute(dragHandle.draggableId) !== id) {\n      return;\n    }\n    recordRef.current = id;\n  }, []);\n  useLayoutEffect(() => {\n    isMountedRef.current = true;\n    return function clearFrameOnUnmount() {\n      isMountedRef.current = false;\n      const frameId = restoreFocusFrameRef.current;\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, []);\n  const marshal = useMemo(() => ({\n    register,\n    tryRecordFocus,\n    tryRestoreFocusRecorded,\n    tryShiftRecord\n  }), [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);\n  return marshal;\n}\n\nfunction createRegistry() {\n  const entries = {\n    draggables: {},\n    droppables: {}\n  };\n  const subscribers = [];\n  function subscribe(cb) {\n    subscribers.push(cb);\n    return function unsubscribe() {\n      const index = subscribers.indexOf(cb);\n      if (index === -1) {\n        return;\n      }\n      subscribers.splice(index, 1);\n    };\n  }\n  function notify(event) {\n    if (subscribers.length) {\n      subscribers.forEach(cb => cb(event));\n    }\n  }\n  function findDraggableById(id) {\n    return entries.draggables[id] || null;\n  }\n  function getDraggableById(id) {\n    const entry = findDraggableById(id);\n    !entry ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot find draggable entry with id [${id}]`) : invariant(false) : void 0;\n    return entry;\n  }\n  const draggableAPI = {\n    register: entry => {\n      entries.draggables[entry.descriptor.id] = entry;\n      notify({\n        type: 'ADDITION',\n        value: entry\n      });\n    },\n    update: (entry, last) => {\n      const current = entries.draggables[last.descriptor.id];\n      if (!current) {\n        return;\n      }\n      if (current.uniqueId !== entry.uniqueId) {\n        return;\n      }\n      delete entries.draggables[last.descriptor.id];\n      entries.draggables[entry.descriptor.id] = entry;\n    },\n    unregister: entry => {\n      const draggableId = entry.descriptor.id;\n      const current = findDraggableById(draggableId);\n      if (!current) {\n        return;\n      }\n      if (entry.uniqueId !== current.uniqueId) {\n        return;\n      }\n      delete entries.draggables[draggableId];\n      if (entries.droppables[entry.descriptor.droppableId]) {\n        notify({\n          type: 'REMOVAL',\n          value: entry\n        });\n      }\n    },\n    getById: getDraggableById,\n    findById: findDraggableById,\n    exists: id => Boolean(findDraggableById(id)),\n    getAllByType: type => Object.values(entries.draggables).filter(entry => entry.descriptor.type === type)\n  };\n  function findDroppableById(id) {\n    return entries.droppables[id] || null;\n  }\n  function getDroppableById(id) {\n    const entry = findDroppableById(id);\n    !entry ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot find droppable entry with id [${id}]`) : invariant(false) : void 0;\n    return entry;\n  }\n  const droppableAPI = {\n    register: entry => {\n      entries.droppables[entry.descriptor.id] = entry;\n    },\n    unregister: entry => {\n      const current = findDroppableById(entry.descriptor.id);\n      if (!current) {\n        return;\n      }\n      if (entry.uniqueId !== current.uniqueId) {\n        return;\n      }\n      delete entries.droppables[entry.descriptor.id];\n    },\n    getById: getDroppableById,\n    findById: findDroppableById,\n    exists: id => Boolean(findDroppableById(id)),\n    getAllByType: type => Object.values(entries.droppables).filter(entry => entry.descriptor.type === type)\n  };\n  function clean() {\n    entries.draggables = {};\n    entries.droppables = {};\n    subscribers.length = 0;\n  }\n  return {\n    draggable: draggableAPI,\n    droppable: droppableAPI,\n    subscribe,\n    clean\n  };\n}\n\nfunction useRegistry() {\n  const registry = useMemo(createRegistry, []);\n  useEffect(() => {\n    return function unmount() {\n      if (React.version.startsWith('16') || React.version.startsWith('17')) {\n        requestAnimationFrame(registry.clean);\n      } else {\n        registry.clean();\n      }\n    };\n  }, [registry]);\n  return registry;\n}\n\nvar StoreContext = React.createContext(null);\n\nvar getBodyElement = (() => {\n  const body = document.body;\n  !body ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot find document.body') : invariant(false) : void 0;\n  return body;\n});\n\nconst visuallyHidden = {\n  position: 'absolute',\n  width: '1px',\n  height: '1px',\n  margin: '-1px',\n  border: '0',\n  padding: '0',\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  'clip-path': 'inset(100%)'\n};\nvar visuallyHidden$1 = visuallyHidden;\n\nconst getId = contextId => `rfd-announcement-${contextId}`;\nfunction useAnnouncer(contextId) {\n  const id = useMemo(() => getId(contextId), [contextId]);\n  const ref = useRef(null);\n  useEffect(function setup() {\n    const el = document.createElement('div');\n    ref.current = el;\n    el.id = id;\n    el.setAttribute('aria-live', 'assertive');\n    el.setAttribute('aria-atomic', 'true');\n    _extends(el.style, visuallyHidden$1);\n    getBodyElement().appendChild(el);\n    return function cleanup() {\n      setTimeout(function remove() {\n        const body = getBodyElement();\n        if (body.contains(el)) {\n          body.removeChild(el);\n        }\n        if (el === ref.current) {\n          ref.current = null;\n        }\n      });\n    };\n  }, [id]);\n  const announce = useCallback(message => {\n    const el = ref.current;\n    if (el) {\n      el.textContent = message;\n      return;\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(`\n      A screen reader message was trying to be announced but it was unable to do so.\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\n      Consider calling provided.announce() before the unmount so that the instruction will\n      not be lost for users relying on a screen reader.\n\n      Message not passed to screen reader:\n\n      \"${message}\"\n    `) : void 0;\n  }, []);\n  return announce;\n}\n\nlet count$1 = 0;\nconst defaults = {\n  separator: '::'\n};\nfunction resetDeprecatedUniqueId() {\n  count$1 = 0;\n}\nfunction useDeprecatedUniqueId(prefix, options = defaults) {\n  return useMemo(() => `${prefix}${options.separator}${count$1++}`, [options.separator, prefix]);\n}\nfunction useUniqueId(prefix, options = defaults) {\n  const id = React.useId();\n  return useMemo(() => `${prefix}${options.separator}${id}`, [options.separator, prefix, id]);\n}\nvar useUniqueId$1 = 'useId' in React ? useUniqueId : useDeprecatedUniqueId;\n\nfunction getElementId({\n  contextId,\n  uniqueId\n}) {\n  return `rfd-hidden-text-${contextId}-${uniqueId}`;\n}\nfunction useHiddenTextElement({\n  contextId,\n  text\n}) {\n  const uniqueId = useUniqueId$1('hidden-text', {\n    separator: '-'\n  });\n  const id = useMemo(() => getElementId({\n    contextId,\n    uniqueId\n  }), [uniqueId, contextId]);\n  useEffect(function mount() {\n    const el = document.createElement('div');\n    el.id = id;\n    el.textContent = text;\n    el.style.display = 'none';\n    getBodyElement().appendChild(el);\n    return function unmount() {\n      const body = getBodyElement();\n      if (body.contains(el)) {\n        body.removeChild(el);\n      }\n    };\n  }, [id, text]);\n  return id;\n}\n\nvar AppContext = React.createContext(null);\n\nvar peerDependencies = {\n\treact: \"^16.8.5 || ^17.0.0 || ^18.0.0\",\n\t\"react-dom\": \"^16.8.5 || ^17.0.0 || ^18.0.0\"\n};\n\nconst semver = /(\\d+)\\.(\\d+)\\.(\\d+)/;\nconst getVersion = value => {\n  const result = semver.exec(value);\n  !(result != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Unable to parse React version ${value}`) : invariant(false) : void 0;\n  const major = Number(result[1]);\n  const minor = Number(result[2]);\n  const patch = Number(result[3]);\n  return {\n    major,\n    minor,\n    patch,\n    raw: value\n  };\n};\nconst isSatisfied = (expected, actual) => {\n  if (actual.major > expected.major) {\n    return true;\n  }\n  if (actual.major < expected.major) {\n    return false;\n  }\n  if (actual.minor > expected.minor) {\n    return true;\n  }\n  if (actual.minor < expected.minor) {\n    return false;\n  }\n  return actual.patch >= expected.patch;\n};\nvar checkReactVersion = ((peerDepValue, actualValue) => {\n  const peerDep = getVersion(peerDepValue);\n  const actual = getVersion(actualValue);\n  if (isSatisfied(peerDep, actual)) {\n    return;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(`\n    React version: [${actual.raw}]\n    does not satisfy expected peer dependency version: [${peerDep.raw}]\n\n    This can result in run time bugs, and even fatal crashes\n  `) : void 0;\n});\n\nconst suffix = `\n  We expect a html5 doctype: <!doctype html>\n  This is to ensure consistent browser layout and measurement\n\n  More information: https://github.com/hello-pangea/dnd/blob/main/docs/guides/doctype.md\n`;\nvar checkDoctype = (doc => {\n  const doctype = doc.doctype;\n  if (!doctype) {\n    process.env.NODE_ENV !== \"production\" ? warning(`\n      No <!doctype html> found.\n\n      ${suffix}\n    `) : void 0;\n    return;\n  }\n  if (doctype.name.toLowerCase() !== 'html') {\n    process.env.NODE_ENV !== \"production\" ? warning(`\n      Unexpected <!doctype> found: (${doctype.name})\n\n      ${suffix}\n    `) : void 0;\n  }\n  if (doctype.publicId !== '') {\n    process.env.NODE_ENV !== \"production\" ? warning(`\n      Unexpected <!doctype> publicId found: (${doctype.publicId})\n      A html5 doctype does not have a publicId\n\n      ${suffix}\n    `) : void 0;\n  }\n});\n\nfunction useDev(useHook) {\n  if (process.env.NODE_ENV !== 'production') {\n    useHook();\n  }\n}\n\nfunction useDevSetupWarning(fn, inputs) {\n  useDev(() => {\n    useEffect(() => {\n      try {\n        fn();\n      } catch (e) {\n        error(`\n          A setup problem was encountered.\n\n          > ${e.message}\n        `);\n      }\n    }, inputs);\n  });\n}\n\nfunction useStartupValidation() {\n  useDevSetupWarning(() => {\n    checkReactVersion(peerDependencies.react, React.version);\n    checkDoctype(document);\n  }, []);\n}\n\nfunction usePrevious(current) {\n  const ref = useRef(current);\n  useEffect(() => {\n    ref.current = current;\n  });\n  return ref;\n}\n\nfunction create() {\n  let lock = null;\n  function isClaimed() {\n    return Boolean(lock);\n  }\n  function isActive(value) {\n    return value === lock;\n  }\n  function claim(abandon) {\n    !!lock ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot claim lock as it is already claimed') : invariant(false) : void 0;\n    const newLock = {\n      abandon\n    };\n    lock = newLock;\n    return newLock;\n  }\n  function release() {\n    !lock ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot release lock when there is no lock') : invariant(false) : void 0;\n    lock = null;\n  }\n  function tryAbandon() {\n    if (lock) {\n      lock.abandon();\n      release();\n    }\n  }\n  return {\n    isClaimed,\n    isActive,\n    claim,\n    release,\n    tryAbandon\n  };\n}\n\nfunction isDragging(state) {\n  if (state.phase === 'IDLE' || state.phase === 'DROP_ANIMATING') {\n    return false;\n  }\n  return state.isDragging;\n}\n\nconst tab = 9;\nconst enter = 13;\nconst escape = 27;\nconst space = 32;\nconst pageUp = 33;\nconst pageDown = 34;\nconst end = 35;\nconst home = 36;\nconst arrowLeft = 37;\nconst arrowUp = 38;\nconst arrowRight = 39;\nconst arrowDown = 40;\n\nconst preventedKeys = {\n  [enter]: true,\n  [tab]: true\n};\nvar preventStandardKeyEvents = (event => {\n  if (preventedKeys[event.keyCode]) {\n    event.preventDefault();\n  }\n});\n\nconst supportedEventName = (() => {\n  const base = 'visibilitychange';\n  if (typeof document === 'undefined') {\n    return base;\n  }\n  const candidates = [base, `ms${base}`, `webkit${base}`, `moz${base}`, `o${base}`];\n  const supported = candidates.find(eventName => `on${eventName}` in document);\n  return supported || base;\n})();\nvar supportedPageVisibilityEventName = supportedEventName;\n\nconst primaryButton = 0;\nconst sloppyClickThreshold = 5;\nfunction isSloppyClickThresholdExceeded(original, current) {\n  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;\n}\nconst idle$1 = {\n  type: 'IDLE'\n};\nfunction getCaptureBindings({\n  cancel,\n  completed,\n  getPhase,\n  setPhase\n}) {\n  return [{\n    eventName: 'mousemove',\n    fn: event => {\n      const {\n        button,\n        clientX,\n        clientY\n      } = event;\n      if (button !== primaryButton) {\n        return;\n      }\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      const phase = getPhase();\n      if (phase.type === 'DRAGGING') {\n        event.preventDefault();\n        phase.actions.move(point);\n        return;\n      }\n      !(phase.type === 'PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot be IDLE') : invariant(false) : void 0;\n      const pending = phase.point;\n      if (!isSloppyClickThresholdExceeded(pending, point)) {\n        return;\n      }\n      event.preventDefault();\n      const actions = phase.actions.fluidLift(point);\n      setPhase({\n        type: 'DRAGGING',\n        actions\n      });\n    }\n  }, {\n    eventName: 'mouseup',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n      phase.actions.drop({\n        shouldBlockNextClick: true\n      });\n      completed();\n    }\n  }, {\n    eventName: 'mousedown',\n    fn: event => {\n      if (getPhase().type === 'DRAGGING') {\n        event.preventDefault();\n      }\n      cancel();\n    }\n  }, {\n    eventName: 'keydown',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type === 'PENDING') {\n        cancel();\n        return;\n      }\n      if (event.keyCode === escape) {\n        event.preventDefault();\n        cancel();\n        return;\n      }\n      preventStandardKeyEvents(event);\n    }\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'scroll',\n    options: {\n      passive: true,\n      capture: false\n    },\n    fn: () => {\n      if (getPhase().type === 'PENDING') {\n        cancel();\n      }\n    }\n  }, {\n    eventName: 'webkitmouseforcedown',\n    fn: event => {\n      const phase = getPhase();\n      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected phase') : invariant(false) : void 0;\n      if (phase.actions.shouldRespectForcePress()) {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction useMouseSensor(api) {\n  const phaseRef = useRef(idle$1);\n  const unbindEventsRef = useRef(noop$2);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'mousedown',\n    fn: function onMouseDown(event) {\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.button !== primaryButton) {\n        return;\n      }\n      if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const actions = api.tryGetLock(draggableId, stop, {\n        sourceEvent: event\n      });\n      if (!actions) {\n        return;\n      }\n      event.preventDefault();\n      const point = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      unbindEventsRef.current();\n      startPendingDrag(actions, point);\n    }\n  }), [api]);\n  const preventForcePressBinding = useMemo(() => ({\n    eventName: 'webkitmouseforcewillbegin',\n    fn: event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const id = api.findClosestDraggableId(event);\n      if (!id) {\n        return;\n      }\n      const options = api.findOptionsForDraggable(id);\n      if (!options) {\n        return;\n      }\n      if (options.shouldRespectForcePress) {\n        return;\n      }\n      if (!api.canGetLock(id)) {\n        return;\n      }\n      event.preventDefault();\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function listenForCapture() {\n    const options = {\n      passive: false,\n      capture: true\n    };\n    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);\n  }, [preventForcePressBinding, startCaptureBinding]);\n  const stop = useCallback(() => {\n    const current = phaseRef.current;\n    if (current.type === 'IDLE') {\n      return;\n    }\n    phaseRef.current = idle$1;\n    unbindEventsRef.current();\n    listenForCapture();\n  }, [listenForCapture]);\n  const cancel = useCallback(() => {\n    const phase = phaseRef.current;\n    stop();\n    if (phase.type === 'DRAGGING') {\n      phase.actions.cancel({\n        shouldBlockNextClick: true\n      });\n    }\n    if (phase.type === 'PENDING') {\n      phase.actions.abort();\n    }\n  }, [stop]);\n  const bindCapturingEvents = useCallback(function bindCapturingEvents() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    const bindings = getCaptureBindings({\n      cancel,\n      completed: stop,\n      getPhase: () => phaseRef.current,\n      setPhase: phase => {\n        phaseRef.current = phase;\n      }\n    });\n    unbindEventsRef.current = bindEvents(window, bindings, options);\n  }, [cancel, stop]);\n  const startPendingDrag = useCallback(function startPendingDrag(actions, point) {\n    !(phaseRef.current.type === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to move from IDLE to PENDING drag') : invariant(false) : void 0;\n    phaseRef.current = {\n      type: 'PENDING',\n      point,\n      actions\n    };\n    bindCapturingEvents();\n  }, [bindCapturingEvents]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      unbindEventsRef.current();\n    };\n  }, [listenForCapture]);\n}\n\nfunction noop$1() {}\nconst scrollJumpKeys = {\n  [pageDown]: true,\n  [pageUp]: true,\n  [home]: true,\n  [end]: true\n};\nfunction getDraggingBindings(actions, stop) {\n  function cancel() {\n    stop();\n    actions.cancel();\n  }\n  function drop() {\n    stop();\n    actions.drop();\n  }\n  return [{\n    eventName: 'keydown',\n    fn: event => {\n      if (event.keyCode === escape) {\n        event.preventDefault();\n        cancel();\n        return;\n      }\n      if (event.keyCode === space) {\n        event.preventDefault();\n        drop();\n        return;\n      }\n      if (event.keyCode === arrowDown) {\n        event.preventDefault();\n        actions.moveDown();\n        return;\n      }\n      if (event.keyCode === arrowUp) {\n        event.preventDefault();\n        actions.moveUp();\n        return;\n      }\n      if (event.keyCode === arrowRight) {\n        event.preventDefault();\n        actions.moveRight();\n        return;\n      }\n      if (event.keyCode === arrowLeft) {\n        event.preventDefault();\n        actions.moveLeft();\n        return;\n      }\n      if (scrollJumpKeys[event.keyCode]) {\n        event.preventDefault();\n        return;\n      }\n      preventStandardKeyEvents(event);\n    }\n  }, {\n    eventName: 'mousedown',\n    fn: cancel\n  }, {\n    eventName: 'mouseup',\n    fn: cancel\n  }, {\n    eventName: 'click',\n    fn: cancel\n  }, {\n    eventName: 'touchstart',\n    fn: cancel\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'wheel',\n    fn: cancel,\n    options: {\n      passive: true\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction useKeyboardSensor(api) {\n  const unbindEventsRef = useRef(noop$1);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'keydown',\n    fn: function onKeyDown(event) {\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.keyCode !== space) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const preDrag = api.tryGetLock(draggableId, stop, {\n        sourceEvent: event\n      });\n      if (!preDrag) {\n        return;\n      }\n      event.preventDefault();\n      let isCapturing = true;\n      const actions = preDrag.snapLift();\n      unbindEventsRef.current();\n      function stop() {\n        !isCapturing ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot stop capturing a keyboard drag when not capturing') : invariant(false) : void 0;\n        isCapturing = false;\n        unbindEventsRef.current();\n        listenForCapture();\n      }\n      unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {\n        capture: true,\n        passive: false\n      });\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function tryStartCapture() {\n    const options = {\n      passive: false,\n      capture: true\n    };\n    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);\n  }, [startCaptureBinding]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      unbindEventsRef.current();\n    };\n  }, [listenForCapture]);\n}\n\nconst idle = {\n  type: 'IDLE'\n};\nconst timeForLongPress = 120;\nconst forcePressThreshold = 0.15;\nfunction getWindowBindings({\n  cancel,\n  getPhase\n}) {\n  return [{\n    eventName: 'orientationchange',\n    fn: cancel\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'contextmenu',\n    fn: event => {\n      event.preventDefault();\n    }\n  }, {\n    eventName: 'keydown',\n    fn: event => {\n      if (getPhase().type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      if (event.keyCode === escape) {\n        event.preventDefault();\n      }\n      cancel();\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction getHandleBindings({\n  cancel,\n  completed,\n  getPhase\n}) {\n  return [{\n    eventName: 'touchmove',\n    options: {\n      capture: false\n    },\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      phase.hasMoved = true;\n      const {\n        clientX,\n        clientY\n      } = event.touches[0];\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      event.preventDefault();\n      phase.actions.move(point);\n    }\n  }, {\n    eventName: 'touchend',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n      phase.actions.drop({\n        shouldBlockNextClick: true\n      });\n      completed();\n    }\n  }, {\n    eventName: 'touchcancel',\n    fn: event => {\n      if (getPhase().type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n      event.preventDefault();\n      cancel();\n    }\n  }, {\n    eventName: 'touchforcechange',\n    fn: event => {\n      const phase = getPhase();\n      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n      const touch = event.touches[0];\n      if (!touch) {\n        return;\n      }\n      const isForcePress = touch.force >= forcePressThreshold;\n      if (!isForcePress) {\n        return;\n      }\n      const shouldRespect = phase.actions.shouldRespectForcePress();\n      if (phase.type === 'PENDING') {\n        if (shouldRespect) {\n          cancel();\n        }\n        return;\n      }\n      if (shouldRespect) {\n        if (phase.hasMoved) {\n          event.preventDefault();\n          return;\n        }\n        cancel();\n        return;\n      }\n      event.preventDefault();\n    }\n  }, {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nfunction useTouchSensor(api) {\n  const phaseRef = useRef(idle);\n  const unbindEventsRef = useRef(noop$2);\n  const getPhase = useCallback(function getPhase() {\n    return phaseRef.current;\n  }, []);\n  const setPhase = useCallback(function setPhase(phase) {\n    phaseRef.current = phase;\n  }, []);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'touchstart',\n    fn: function onTouchStart(event) {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const actions = api.tryGetLock(draggableId, stop, {\n        sourceEvent: event\n      });\n      if (!actions) {\n        return;\n      }\n      const touch = event.touches[0];\n      const {\n        clientX,\n        clientY\n      } = touch;\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      unbindEventsRef.current();\n      startPendingDrag(actions, point);\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function listenForCapture() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);\n  }, [startCaptureBinding]);\n  const stop = useCallback(() => {\n    const current = phaseRef.current;\n    if (current.type === 'IDLE') {\n      return;\n    }\n    if (current.type === 'PENDING') {\n      clearTimeout(current.longPressTimerId);\n    }\n    setPhase(idle);\n    unbindEventsRef.current();\n    listenForCapture();\n  }, [listenForCapture, setPhase]);\n  const cancel = useCallback(() => {\n    const phase = phaseRef.current;\n    stop();\n    if (phase.type === 'DRAGGING') {\n      phase.actions.cancel({\n        shouldBlockNextClick: true\n      });\n    }\n    if (phase.type === 'PENDING') {\n      phase.actions.abort();\n    }\n  }, [stop]);\n  const bindCapturingEvents = useCallback(function bindCapturingEvents() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    const args = {\n      cancel,\n      completed: stop,\n      getPhase\n    };\n    const unbindTarget = bindEvents(window, getHandleBindings(args), options);\n    const unbindWindow = bindEvents(window, getWindowBindings(args), options);\n    unbindEventsRef.current = function unbindAll() {\n      unbindTarget();\n      unbindWindow();\n    };\n  }, [cancel, getPhase, stop]);\n  const startDragging = useCallback(function startDragging() {\n    const phase = getPhase();\n    !(phase.type === 'PENDING') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot start dragging from phase ${phase.type}`) : invariant(false) : void 0;\n    const actions = phase.actions.fluidLift(phase.point);\n    setPhase({\n      type: 'DRAGGING',\n      actions,\n      hasMoved: false\n    });\n  }, [getPhase, setPhase]);\n  const startPendingDrag = useCallback(function startPendingDrag(actions, point) {\n    !(getPhase().type === 'IDLE') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to move from IDLE to PENDING drag') : invariant(false) : void 0;\n    const longPressTimerId = setTimeout(startDragging, timeForLongPress);\n    setPhase({\n      type: 'PENDING',\n      point,\n      actions,\n      longPressTimerId\n    });\n    bindCapturingEvents();\n  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      unbindEventsRef.current();\n      const phase = getPhase();\n      if (phase.type === 'PENDING') {\n        clearTimeout(phase.longPressTimerId);\n        setPhase(idle);\n      }\n    };\n  }, [getPhase, listenForCapture, setPhase]);\n  useLayoutEffect(function webkitHack() {\n    const unbind = bindEvents(window, [{\n      eventName: 'touchmove',\n      fn: () => {},\n      options: {\n        capture: false,\n        passive: false\n      }\n    }]);\n    return unbind;\n  }, []);\n}\n\nfunction useValidateSensorHooks(sensorHooks) {\n  useDev(() => {\n    const previousRef = usePrevious(sensorHooks);\n    useDevSetupWarning(() => {\n      !(previousRef.current.length === sensorHooks.length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot change the amount of sensor hooks after mounting') : invariant(false) : void 0;\n    });\n  });\n}\n\nconst interactiveTagNames = ['input', 'button', 'textarea', 'select', 'option', 'optgroup', 'video', 'audio'];\nfunction isAnInteractiveElement(parent, current) {\n  if (current == null) {\n    return false;\n  }\n  const hasAnInteractiveTag = interactiveTagNames.includes(current.tagName.toLowerCase());\n  if (hasAnInteractiveTag) {\n    return true;\n  }\n  const attribute = current.getAttribute('contenteditable');\n  if (attribute === 'true' || attribute === '') {\n    return true;\n  }\n  if (current === parent) {\n    return false;\n  }\n  return isAnInteractiveElement(parent, current.parentElement);\n}\nfunction isEventInInteractiveElement(draggable, event) {\n  const target = event.target;\n  if (!isHtmlElement(target)) {\n    return false;\n  }\n  return isAnInteractiveElement(draggable, target);\n}\n\nvar getBorderBoxCenterPosition = (el => getRect(el.getBoundingClientRect()).center);\n\nfunction isElement(el) {\n  return el instanceof getWindowFromEl(el).Element;\n}\n\nconst supportedMatchesName = (() => {\n  const base = 'matches';\n  if (typeof document === 'undefined') {\n    return base;\n  }\n  const candidates = [base, 'msMatchesSelector', 'webkitMatchesSelector'];\n  const value = candidates.find(name => name in Element.prototype);\n  return value || base;\n})();\nfunction closestPonyfill(el, selector) {\n  if (el == null) {\n    return null;\n  }\n  if (el[supportedMatchesName](selector)) {\n    return el;\n  }\n  return closestPonyfill(el.parentElement, selector);\n}\nfunction closest(el, selector) {\n  if (el.closest) {\n    return el.closest(selector);\n  }\n  return closestPonyfill(el, selector);\n}\n\nfunction getSelector(contextId) {\n  return `[${dragHandle.contextId}=\"${contextId}\"]`;\n}\nfunction findClosestDragHandleFromEvent(contextId, event) {\n  const target = event.target;\n  if (!isElement(target)) {\n    process.env.NODE_ENV !== \"production\" ? warning('event.target must be a Element') : void 0;\n    return null;\n  }\n  const selector = getSelector(contextId);\n  const handle = closest(target, selector);\n  if (!handle) {\n    return null;\n  }\n  if (!isHtmlElement(handle)) {\n    process.env.NODE_ENV !== \"production\" ? warning('drag handle must be a HTMLElement') : void 0;\n    return null;\n  }\n  return handle;\n}\nfunction tryGetClosestDraggableIdFromEvent(contextId, event) {\n  const handle = findClosestDragHandleFromEvent(contextId, event);\n  if (!handle) {\n    return null;\n  }\n  return handle.getAttribute(dragHandle.draggableId);\n}\n\nfunction findDraggable(contextId, draggableId) {\n  const selector = `[${draggable.contextId}=\"${contextId}\"]`;\n  const possible = querySelectorAll(document, selector);\n  const draggable$1 = possible.find(el => {\n    return el.getAttribute(draggable.id) === draggableId;\n  });\n  if (!draggable$1) {\n    return null;\n  }\n  if (!isHtmlElement(draggable$1)) {\n    process.env.NODE_ENV !== \"production\" ? warning('Draggable element is not a HTMLElement') : void 0;\n    return null;\n  }\n  return draggable$1;\n}\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction isActive({\n  expected,\n  phase,\n  isLockActive,\n  shouldWarn\n}) {\n  if (!isLockActive()) {\n    if (shouldWarn) {\n      process.env.NODE_ENV !== \"production\" ? warning(`\n        Cannot perform action.\n        The sensor no longer has an action lock.\n\n        Tips:\n\n        - Throw away your action handlers when forceStop() is called\n        - Check actions.isActive() if you really need to\n      `) : void 0;\n    }\n    return false;\n  }\n  if (expected !== phase) {\n    if (shouldWarn) {\n      process.env.NODE_ENV !== \"production\" ? warning(`\n        Cannot perform action.\n        The actions you used belong to an outdated phase\n\n        Current phase: ${expected}\n        You called an action from outdated phase: ${phase}\n\n        Tips:\n\n        - Do not use preDragActions actions after calling preDragActions.lift()\n      `) : void 0;\n    }\n    return false;\n  }\n  return true;\n}\nfunction canStart({\n  lockAPI,\n  store,\n  registry,\n  draggableId\n}) {\n  if (lockAPI.isClaimed()) {\n    return false;\n  }\n  const entry = registry.draggable.findById(draggableId);\n  if (!entry) {\n    process.env.NODE_ENV !== \"production\" ? warning(`Unable to find draggable with id: ${draggableId}`) : void 0;\n    return false;\n  }\n  if (!entry.options.isEnabled) {\n    return false;\n  }\n  if (!canStartDrag(store.getState(), draggableId)) {\n    return false;\n  }\n  return true;\n}\nfunction tryStart({\n  lockAPI,\n  contextId,\n  store,\n  registry,\n  draggableId,\n  forceSensorStop,\n  sourceEvent\n}) {\n  const shouldStart = canStart({\n    lockAPI,\n    store,\n    registry,\n    draggableId\n  });\n  if (!shouldStart) {\n    return null;\n  }\n  const entry = registry.draggable.getById(draggableId);\n  const el = findDraggable(contextId, entry.descriptor.id);\n  if (!el) {\n    process.env.NODE_ENV !== \"production\" ? warning(`Unable to find draggable element with id: ${draggableId}`) : void 0;\n    return null;\n  }\n  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el, sourceEvent)) {\n    return null;\n  }\n  const lock = lockAPI.claim(forceSensorStop || noop$2);\n  let phase = 'PRE_DRAG';\n  function getShouldRespectForcePress() {\n    return entry.options.shouldRespectForcePress;\n  }\n  function isLockActive() {\n    return lockAPI.isActive(lock);\n  }\n  function tryDispatch(expected, getAction) {\n    if (isActive({\n      expected,\n      phase,\n      isLockActive,\n      shouldWarn: true\n    })) {\n      store.dispatch(getAction());\n    }\n  }\n  const tryDispatchWhenDragging = tryDispatch.bind(null, 'DRAGGING');\n  function lift(args) {\n    function completed() {\n      lockAPI.release();\n      phase = 'COMPLETED';\n    }\n    if (phase !== 'PRE_DRAG') {\n      completed();\n      process.env.NODE_ENV !== \"production\" ? invariant(false, `Cannot lift in phase ${phase}`) : invariant(false) ;\n    }\n    store.dispatch(lift$1(args.liftActionArgs));\n    phase = 'DRAGGING';\n    function finish(reason, options = {\n      shouldBlockNextClick: false\n    }) {\n      args.cleanup();\n      if (options.shouldBlockNextClick) {\n        const unbind = bindEvents(window, [{\n          eventName: 'click',\n          fn: preventDefault,\n          options: {\n            once: true,\n            passive: false,\n            capture: true\n          }\n        }]);\n        setTimeout(unbind);\n      }\n      completed();\n      store.dispatch(drop$1({\n        reason\n      }));\n    }\n    return {\n      isActive: () => isActive({\n        expected: 'DRAGGING',\n        phase,\n        isLockActive,\n        shouldWarn: false\n      }),\n      shouldRespectForcePress: getShouldRespectForcePress,\n      drop: options => finish('DROP', options),\n      cancel: options => finish('CANCEL', options),\n      ...args.actions\n    };\n  }\n  function fluidLift(clientSelection) {\n    const move$1 = rafSchd(client => {\n      tryDispatchWhenDragging(() => move({\n        client\n      }));\n    });\n    const api = lift({\n      liftActionArgs: {\n        id: draggableId,\n        clientSelection,\n        movementMode: 'FLUID'\n      },\n      cleanup: () => move$1.cancel(),\n      actions: {\n        move: move$1\n      }\n    });\n    return {\n      ...api,\n      move: move$1\n    };\n  }\n  function snapLift() {\n    const actions = {\n      moveUp: () => tryDispatchWhenDragging(moveUp),\n      moveRight: () => tryDispatchWhenDragging(moveRight),\n      moveDown: () => tryDispatchWhenDragging(moveDown),\n      moveLeft: () => tryDispatchWhenDragging(moveLeft)\n    };\n    return lift({\n      liftActionArgs: {\n        id: draggableId,\n        clientSelection: getBorderBoxCenterPosition(el),\n        movementMode: 'SNAP'\n      },\n      cleanup: noop$2,\n      actions\n    });\n  }\n  function abortPreDrag() {\n    const shouldRelease = isActive({\n      expected: 'PRE_DRAG',\n      phase,\n      isLockActive,\n      shouldWarn: true\n    });\n    if (shouldRelease) {\n      lockAPI.release();\n    }\n  }\n  const preDrag = {\n    isActive: () => isActive({\n      expected: 'PRE_DRAG',\n      phase,\n      isLockActive,\n      shouldWarn: false\n    }),\n    shouldRespectForcePress: getShouldRespectForcePress,\n    fluidLift,\n    snapLift,\n    abort: abortPreDrag\n  };\n  return preDrag;\n}\nconst defaultSensors = [useMouseSensor, useKeyboardSensor, useTouchSensor];\nfunction useSensorMarshal({\n  contextId,\n  store,\n  registry,\n  customSensors,\n  enableDefaultSensors\n}) {\n  const useSensors = [...(enableDefaultSensors ? defaultSensors : []), ...(customSensors || [])];\n  const lockAPI = useState(() => create())[0];\n  const tryAbandonLock = useCallback(function tryAbandonLock(previous, current) {\n    if (isDragging(previous) && !isDragging(current)) {\n      lockAPI.tryAbandon();\n    }\n  }, [lockAPI]);\n  useLayoutEffect(function listenToStore() {\n    let previous = store.getState();\n    const unsubscribe = store.subscribe(() => {\n      const current = store.getState();\n      tryAbandonLock(previous, current);\n      previous = current;\n    });\n    return unsubscribe;\n  }, [lockAPI, store, tryAbandonLock]);\n  useLayoutEffect(() => {\n    return lockAPI.tryAbandon;\n  }, [lockAPI.tryAbandon]);\n  const canGetLock = useCallback(draggableId => {\n    return canStart({\n      lockAPI,\n      registry,\n      store,\n      draggableId\n    });\n  }, [lockAPI, registry, store]);\n  const tryGetLock = useCallback((draggableId, forceStop, options) => tryStart({\n    lockAPI,\n    registry,\n    contextId,\n    store,\n    draggableId,\n    forceSensorStop: forceStop || null,\n    sourceEvent: options && options.sourceEvent ? options.sourceEvent : null\n  }), [contextId, lockAPI, registry, store]);\n  const findClosestDraggableId = useCallback(event => tryGetClosestDraggableIdFromEvent(contextId, event), [contextId]);\n  const findOptionsForDraggable = useCallback(id => {\n    const entry = registry.draggable.findById(id);\n    return entry ? entry.options : null;\n  }, [registry.draggable]);\n  const tryReleaseLock = useCallback(function tryReleaseLock() {\n    if (!lockAPI.isClaimed()) {\n      return;\n    }\n    lockAPI.tryAbandon();\n    if (store.getState().phase !== 'IDLE') {\n      store.dispatch(flush());\n    }\n  }, [lockAPI, store]);\n  const isLockClaimed = useCallback(() => lockAPI.isClaimed(), [lockAPI]);\n  const api = useMemo(() => ({\n    canGetLock,\n    tryGetLock,\n    findClosestDraggableId,\n    findOptionsForDraggable,\n    tryReleaseLock,\n    isLockClaimed\n  }), [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);\n  useValidateSensorHooks(useSensors);\n  for (let i = 0; i < useSensors.length; i++) {\n    useSensors[i](api);\n  }\n}\n\nconst createResponders = props => ({\n  onBeforeCapture: t => {\n    const onBeforeCapureCallback = () => {\n      if (props.onBeforeCapture) {\n        props.onBeforeCapture(t);\n      }\n    };\n    if (React.version.startsWith('16') || React.version.startsWith('17')) {\n      onBeforeCapureCallback();\n    } else {\n      flushSync(onBeforeCapureCallback);\n    }\n  },\n  onBeforeDragStart: props.onBeforeDragStart,\n  onDragStart: props.onDragStart,\n  onDragEnd: props.onDragEnd,\n  onDragUpdate: props.onDragUpdate\n});\nconst createAutoScrollerOptions = props => ({\n  ...defaultAutoScrollerOptions,\n  ...props.autoScrollerOptions,\n  durationDampening: {\n    ...defaultAutoScrollerOptions.durationDampening,\n    ...props.autoScrollerOptions\n  }\n});\nfunction getStore(lazyRef) {\n  !lazyRef.current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find store from lazy ref') : invariant(false) : void 0;\n  return lazyRef.current;\n}\nfunction App(props) {\n  const {\n    contextId,\n    setCallbacks,\n    sensors,\n    nonce,\n    dragHandleUsageInstructions\n  } = props;\n  const lazyStoreRef = useRef(null);\n  useStartupValidation();\n  const lastPropsRef = usePrevious(props);\n  const getResponders = useCallback(() => {\n    return createResponders(lastPropsRef.current);\n  }, [lastPropsRef]);\n  const getAutoScrollerOptions = useCallback(() => {\n    return createAutoScrollerOptions(lastPropsRef.current);\n  }, [lastPropsRef]);\n  const announce = useAnnouncer(contextId);\n  const dragHandleUsageInstructionsId = useHiddenTextElement({\n    contextId,\n    text: dragHandleUsageInstructions\n  });\n  const styleMarshal = useStyleMarshal(contextId, nonce);\n  const lazyDispatch = useCallback(action => {\n    getStore(lazyStoreRef).dispatch(action);\n  }, []);\n  const marshalCallbacks = useMemo(() => bindActionCreators({\n    publishWhileDragging,\n    updateDroppableScroll,\n    updateDroppableIsEnabled,\n    updateDroppableIsCombineEnabled,\n    collectionStarting\n  }, lazyDispatch), [lazyDispatch]);\n  const registry = useRegistry();\n  const dimensionMarshal = useMemo(() => {\n    return createDimensionMarshal(registry, marshalCallbacks);\n  }, [registry, marshalCallbacks]);\n  const autoScroller = useMemo(() => createAutoScroller({\n    scrollWindow,\n    scrollDroppable: dimensionMarshal.scrollDroppable,\n    getAutoScrollerOptions,\n    ...bindActionCreators({\n      move\n    }, lazyDispatch)\n  }), [dimensionMarshal.scrollDroppable, lazyDispatch, getAutoScrollerOptions]);\n  const focusMarshal = useFocusMarshal(contextId);\n  const store = useMemo(() => createStore({\n    announce,\n    autoScroller,\n    dimensionMarshal,\n    focusMarshal,\n    getResponders,\n    styleMarshal\n  }), [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);\n  if (process.env.NODE_ENV !== 'production') {\n    if (lazyStoreRef.current && lazyStoreRef.current !== store) {\n      process.env.NODE_ENV !== \"production\" ? warning('unexpected store change') : void 0;\n    }\n  }\n  lazyStoreRef.current = store;\n  const tryResetStore = useCallback(() => {\n    const current = getStore(lazyStoreRef);\n    const state = current.getState();\n    if (state.phase !== 'IDLE') {\n      current.dispatch(flush());\n    }\n  }, []);\n  const isDragging = useCallback(() => {\n    const state = getStore(lazyStoreRef).getState();\n    if (state.phase === 'DROP_ANIMATING') {\n      return true;\n    }\n    if (state.phase === 'IDLE') {\n      return false;\n    }\n    return state.isDragging;\n  }, []);\n  const appCallbacks = useMemo(() => ({\n    isDragging,\n    tryAbort: tryResetStore\n  }), [isDragging, tryResetStore]);\n  setCallbacks(appCallbacks);\n  const getCanLift = useCallback(id => canStartDrag(getStore(lazyStoreRef).getState(), id), []);\n  const getIsMovementAllowed = useCallback(() => isMovementAllowed(getStore(lazyStoreRef).getState()), []);\n  const appContext = useMemo(() => ({\n    marshal: dimensionMarshal,\n    focus: focusMarshal,\n    contextId,\n    canLift: getCanLift,\n    isMovementAllowed: getIsMovementAllowed,\n    dragHandleUsageInstructionsId,\n    registry\n  }), [contextId, dimensionMarshal, dragHandleUsageInstructionsId, focusMarshal, getCanLift, getIsMovementAllowed, registry]);\n  useSensorMarshal({\n    contextId,\n    store,\n    registry,\n    customSensors: sensors || null,\n    enableDefaultSensors: props.enableDefaultSensors !== false\n  });\n  useEffect(() => {\n    return tryResetStore;\n  }, [tryResetStore]);\n  return React.createElement(AppContext.Provider, {\n    value: appContext\n  }, React.createElement(Provider, {\n    context: StoreContext,\n    store: store\n  }, props.children));\n}\n\nlet count = 0;\nfunction resetDeprecatedUniqueContextId() {\n  count = 0;\n}\nfunction useDeprecatedUniqueContextId() {\n  return useMemo(() => `${count++}`, []);\n}\nfunction useUniqueContextId() {\n  return React.useId();\n}\nvar useUniqueContextId$1 = 'useId' in React ? useUniqueContextId : useDeprecatedUniqueContextId;\n\nfunction resetServerContext() {\n  if ('useId' in React) {\n    process.env.NODE_ENV !== \"production\" ? warning(`It is not necessary to call resetServerContext when using React 18+`) : void 0;\n    return;\n  }\n  resetDeprecatedUniqueContextId();\n  resetDeprecatedUniqueId();\n}\nfunction DragDropContext(props) {\n  const contextId = useUniqueContextId$1();\n  const dragHandleUsageInstructions = props.dragHandleUsageInstructions || preset$1.dragHandleUsageInstructions;\n  return React.createElement(ErrorBoundary, null, setCallbacks => React.createElement(App, {\n    nonce: props.nonce,\n    contextId: contextId,\n    setCallbacks: setCallbacks,\n    dragHandleUsageInstructions: dragHandleUsageInstructions,\n    enableDefaultSensors: props.enableDefaultSensors,\n    sensors: props.sensors,\n    onBeforeCapture: props.onBeforeCapture,\n    onBeforeDragStart: props.onBeforeDragStart,\n    onDragStart: props.onDragStart,\n    onDragUpdate: props.onDragUpdate,\n    onDragEnd: props.onDragEnd,\n    autoScrollerOptions: props.autoScrollerOptions\n  }, props.children));\n}\n\nconst zIndexOptions = {\n  dragging: 5000,\n  dropAnimating: 4500\n};\nconst getDraggingTransition = (shouldAnimateDragMovement, dropping) => {\n  if (dropping) {\n    return transitions.drop(dropping.duration);\n  }\n  if (shouldAnimateDragMovement) {\n    return transitions.snap;\n  }\n  return transitions.fluid;\n};\nconst getDraggingOpacity = (isCombining, isDropAnimating) => {\n  if (!isCombining) {\n    return undefined;\n  }\n  return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;\n};\nconst getShouldDraggingAnimate = dragging => {\n  if (dragging.forceShouldAnimate != null) {\n    return dragging.forceShouldAnimate;\n  }\n  return dragging.mode === 'SNAP';\n};\nfunction getDraggingStyle(dragging) {\n  const dimension = dragging.dimension;\n  const box = dimension.client;\n  const {\n    offset,\n    combineWith,\n    dropping\n  } = dragging;\n  const isCombining = Boolean(combineWith);\n  const shouldAnimate = getShouldDraggingAnimate(dragging);\n  const isDropAnimating = Boolean(dropping);\n  const transform = isDropAnimating ? transforms.drop(offset, isCombining) : transforms.moveTo(offset);\n  const style = {\n    position: 'fixed',\n    top: box.marginBox.top,\n    left: box.marginBox.left,\n    boxSizing: 'border-box',\n    width: box.borderBox.width,\n    height: box.borderBox.height,\n    transition: getDraggingTransition(shouldAnimate, dropping),\n    transform,\n    opacity: getDraggingOpacity(isCombining, isDropAnimating),\n    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,\n    pointerEvents: 'none'\n  };\n  return style;\n}\nfunction getSecondaryStyle(secondary) {\n  return {\n    transform: transforms.moveTo(secondary.offset),\n    transition: secondary.shouldAnimateDisplacement ? undefined : 'none'\n  };\n}\nfunction getStyle$1(mapped) {\n  return mapped.type === 'DRAGGING' ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);\n}\n\nfunction getDimension$1(descriptor, el, windowScroll = origin) {\n  const computedStyles = window.getComputedStyle(el);\n  const borderBox = el.getBoundingClientRect();\n  const client = calculateBox(borderBox, computedStyles);\n  const page = withScroll(client, windowScroll);\n  const placeholder = {\n    client,\n    tagName: el.tagName.toLowerCase(),\n    display: computedStyles.display\n  };\n  const displaceBy = {\n    x: client.marginBox.width,\n    y: client.marginBox.height\n  };\n  const dimension = {\n    descriptor,\n    placeholder,\n    displaceBy,\n    client,\n    page\n  };\n  return dimension;\n}\n\nfunction useDraggablePublisher(args) {\n  const uniqueId = useUniqueId$1('draggable');\n  const {\n    descriptor,\n    registry,\n    getDraggableRef,\n    canDragInteractiveElements,\n    shouldRespectForcePress,\n    isEnabled\n  } = args;\n  const options = useMemo(() => ({\n    canDragInteractiveElements,\n    shouldRespectForcePress,\n    isEnabled\n  }), [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);\n  const getDimension = useCallback(windowScroll => {\n    const el = getDraggableRef();\n    !el ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot get dimension when no ref is set') : invariant(false) : void 0;\n    return getDimension$1(descriptor, el, windowScroll);\n  }, [descriptor, getDraggableRef]);\n  const entry = useMemo(() => ({\n    uniqueId,\n    descriptor,\n    options,\n    getDimension\n  }), [descriptor, getDimension, options, uniqueId]);\n  const publishedRef = useRef(entry);\n  const isFirstPublishRef = useRef(true);\n  useLayoutEffect(() => {\n    registry.draggable.register(publishedRef.current);\n    return () => registry.draggable.unregister(publishedRef.current);\n  }, [registry.draggable]);\n  useLayoutEffect(() => {\n    if (isFirstPublishRef.current) {\n      isFirstPublishRef.current = false;\n      return;\n    }\n    const last = publishedRef.current;\n    publishedRef.current = entry;\n    registry.draggable.update(entry, last);\n  }, [entry, registry.draggable]);\n}\n\nvar DroppableContext = React.createContext(null);\n\nfunction checkIsValidInnerRef(el) {\n  !(el && isHtmlElement(el)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `\n    provided.innerRef has not been provided with a HTMLElement.\n\n    You can find a guide on using the innerRef callback functions at:\n    https://github.com/hello-pangea/dnd/blob/main/docs/guides/using-inner-ref.md\n  `) : invariant(false) : void 0;\n}\n\nfunction useValidation$1(props, contextId, getRef) {\n  useDevSetupWarning(() => {\n    function prefix(id) {\n      return `Draggable[id: ${id}]: `;\n    }\n    const id = props.draggableId;\n    !id ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Draggable requires a draggableId') : invariant(false) : void 0;\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Draggable requires a [string] draggableId.\n      Provided: [type: ${typeof id}] (value: ${id})`) : invariant(false) : void 0;\n    !Number.isInteger(props.index) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${prefix(id)} requires an integer index prop`) : invariant(false) : void 0;\n    if (props.mapped.type === 'DRAGGING') {\n      return;\n    }\n    checkIsValidInnerRef(getRef());\n    if (props.isEnabled) {\n      !findDragHandle(contextId, id) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${prefix(id)} Unable to find drag handle`) : invariant(false) : void 0;\n    }\n  });\n}\nfunction useClonePropValidation(isClone) {\n  useDev(() => {\n    const initialRef = useRef(isClone);\n    useDevSetupWarning(() => {\n      !(isClone === initialRef.current) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Draggable isClone prop value changed during component life') : invariant(false) : void 0;\n    }, [isClone]);\n  });\n}\n\nfunction useRequiredContext(Context) {\n  const result = useContext(Context);\n  !result ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find required context') : invariant(false) : void 0;\n  return result;\n}\n\nfunction preventHtml5Dnd(event) {\n  event.preventDefault();\n}\nconst Draggable = props => {\n  const ref = useRef(null);\n  const setRef = useCallback((el = null) => {\n    ref.current = el;\n  }, []);\n  const getRef = useCallback(() => ref.current, []);\n  const {\n    contextId,\n    dragHandleUsageInstructionsId,\n    registry\n  } = useRequiredContext(AppContext);\n  const {\n    type,\n    droppableId\n  } = useRequiredContext(DroppableContext);\n  const descriptor = useMemo(() => ({\n    id: props.draggableId,\n    index: props.index,\n    type,\n    droppableId\n  }), [props.draggableId, props.index, type, droppableId]);\n  const {\n    children,\n    draggableId,\n    isEnabled,\n    shouldRespectForcePress,\n    canDragInteractiveElements,\n    isClone,\n    mapped,\n    dropAnimationFinished: dropAnimationFinishedAction\n  } = props;\n  useValidation$1(props, contextId, getRef);\n  useClonePropValidation(isClone);\n  if (!isClone) {\n    const forPublisher = useMemo(() => ({\n      descriptor,\n      registry,\n      getDraggableRef: getRef,\n      canDragInteractiveElements,\n      shouldRespectForcePress,\n      isEnabled\n    }), [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);\n    useDraggablePublisher(forPublisher);\n  }\n  const dragHandleProps = useMemo(() => isEnabled ? {\n    tabIndex: 0,\n    role: 'button',\n    'aria-describedby': dragHandleUsageInstructionsId,\n    'data-rfd-drag-handle-draggable-id': draggableId,\n    'data-rfd-drag-handle-context-id': contextId,\n    draggable: false,\n    onDragStart: preventHtml5Dnd\n  } : null, [contextId, dragHandleUsageInstructionsId, draggableId, isEnabled]);\n  const onMoveEnd = useCallback(event => {\n    if (mapped.type !== 'DRAGGING') {\n      return;\n    }\n    if (!mapped.dropping) {\n      return;\n    }\n    if (event.propertyName !== 'transform') {\n      return;\n    }\n    if (React.version.startsWith('16') || React.version.startsWith('17')) {\n      dropAnimationFinishedAction();\n    } else {\n      flushSync(dropAnimationFinishedAction);\n    }\n  }, [dropAnimationFinishedAction, mapped]);\n  const provided = useMemo(() => {\n    const style = getStyle$1(mapped);\n    const onTransitionEnd = mapped.type === 'DRAGGING' && mapped.dropping ? onMoveEnd : undefined;\n    const result = {\n      innerRef: setRef,\n      draggableProps: {\n        'data-rfd-draggable-context-id': contextId,\n        'data-rfd-draggable-id': draggableId,\n        style,\n        onTransitionEnd\n      },\n      dragHandleProps\n    };\n    return result;\n  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef]);\n  const rubric = useMemo(() => ({\n    draggableId: descriptor.id,\n    type: descriptor.type,\n    source: {\n      index: descriptor.index,\n      droppableId: descriptor.droppableId\n    }\n  }), [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);\n  return React.createElement(React.Fragment, null, children(provided, mapped.snapshot, rubric));\n};\nvar Draggable$1 = Draggable;\n\nvar isStrictEqual = ((a, b) => a === b);\n\nvar whatIsDraggedOverFromResult = (result => {\n  const {\n    combine,\n    destination\n  } = result;\n  if (destination) {\n    return destination.droppableId;\n  }\n  if (combine) {\n    return combine.droppableId;\n  }\n  return null;\n});\n\nconst getCombineWithFromResult = result => {\n  return result.combine ? result.combine.draggableId : null;\n};\nconst getCombineWithFromImpact = impact => {\n  return impact.at && impact.at.type === 'COMBINE' ? impact.at.combine.draggableId : null;\n};\nfunction getDraggableSelector() {\n  const memoizedOffset = memoizeOne((x, y) => ({\n    x,\n    y\n  }));\n  const getMemoizedSnapshot = memoizeOne((mode, isClone, draggingOver = null, combineWith = null, dropping = null) => ({\n    isDragging: true,\n    isClone,\n    isDropAnimating: Boolean(dropping),\n    dropAnimation: dropping,\n    mode,\n    draggingOver,\n    combineWith,\n    combineTargetFor: null\n  }));\n  const getMemoizedProps = memoizeOne((offset, mode, dimension, isClone, draggingOver = null, combineWith = null, forceShouldAnimate = null) => ({\n    mapped: {\n      type: 'DRAGGING',\n      dropping: null,\n      draggingOver,\n      combineWith,\n      mode,\n      offset,\n      dimension,\n      forceShouldAnimate,\n      snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)\n    }\n  }));\n  const selector = (state, ownProps) => {\n    if (isDragging(state)) {\n      if (state.critical.draggable.id !== ownProps.draggableId) {\n        return null;\n      }\n      const offset = state.current.client.offset;\n      const dimension = state.dimensions.draggables[ownProps.draggableId];\n      const draggingOver = whatIsDraggedOver(state.impact);\n      const combineWith = getCombineWithFromImpact(state.impact);\n      const forceShouldAnimate = state.forceShouldAnimate;\n      return getMemoizedProps(memoizedOffset(offset.x, offset.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (completed.result.draggableId !== ownProps.draggableId) {\n        return null;\n      }\n      const isClone = ownProps.isClone;\n      const dimension = state.dimensions.draggables[ownProps.draggableId];\n      const result = completed.result;\n      const mode = result.mode;\n      const draggingOver = whatIsDraggedOverFromResult(result);\n      const combineWith = getCombineWithFromResult(result);\n      const duration = state.dropDuration;\n      const dropping = {\n        duration,\n        curve: curves.drop,\n        moveTo: state.newHomeClientOffset,\n        opacity: combineWith ? combine.opacity.drop : null,\n        scale: combineWith ? combine.scale.drop : null\n      };\n      return {\n        mapped: {\n          type: 'DRAGGING',\n          offset: state.newHomeClientOffset,\n          dimension,\n          dropping,\n          draggingOver,\n          combineWith,\n          mode,\n          forceShouldAnimate: null,\n          snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, dropping)\n        }\n      };\n    }\n    return null;\n  };\n  return selector;\n}\nfunction getSecondarySnapshot(combineTargetFor = null) {\n  return {\n    isDragging: false,\n    isDropAnimating: false,\n    isClone: false,\n    dropAnimation: null,\n    mode: null,\n    draggingOver: null,\n    combineTargetFor,\n    combineWith: null\n  };\n}\nconst atRest = {\n  mapped: {\n    type: 'SECONDARY',\n    offset: origin,\n    combineTargetFor: null,\n    shouldAnimateDisplacement: true,\n    snapshot: getSecondarySnapshot(null)\n  }\n};\nfunction getSecondarySelector() {\n  const memoizedOffset = memoizeOne((x, y) => ({\n    x,\n    y\n  }));\n  const getMemoizedSnapshot = memoizeOne(getSecondarySnapshot);\n  const getMemoizedProps = memoizeOne((offset, combineTargetFor = null, shouldAnimateDisplacement) => ({\n    mapped: {\n      type: 'SECONDARY',\n      offset,\n      combineTargetFor,\n      shouldAnimateDisplacement,\n      snapshot: getMemoizedSnapshot(combineTargetFor)\n    }\n  }));\n  const getFallback = combineTargetFor => {\n    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;\n  };\n  const getProps = (ownId, draggingId, impact, afterCritical) => {\n    const visualDisplacement = impact.displaced.visible[ownId];\n    const isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);\n    const combine = tryGetCombine(impact);\n    const combineTargetFor = combine && combine.draggableId === ownId ? draggingId : null;\n    if (!visualDisplacement) {\n      if (!isAfterCriticalInVirtualList) {\n        return getFallback(combineTargetFor);\n      }\n      if (impact.displaced.invisible[ownId]) {\n        return null;\n      }\n      const change = negate(afterCritical.displacedBy.point);\n      const offset = memoizedOffset(change.x, change.y);\n      return getMemoizedProps(offset, combineTargetFor, true);\n    }\n    if (isAfterCriticalInVirtualList) {\n      return getFallback(combineTargetFor);\n    }\n    const displaceBy = impact.displacedBy.point;\n    const offset = memoizedOffset(displaceBy.x, displaceBy.y);\n    return getMemoizedProps(offset, combineTargetFor, visualDisplacement.shouldAnimate);\n  };\n  const selector = (state, ownProps) => {\n    if (isDragging(state)) {\n      if (state.critical.draggable.id === ownProps.draggableId) {\n        return null;\n      }\n      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (completed.result.draggableId === ownProps.draggableId) {\n        return null;\n      }\n      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);\n    }\n    return null;\n  };\n  return selector;\n}\nconst makeMapStateToProps$1 = () => {\n  const draggingSelector = getDraggableSelector();\n  const secondarySelector = getSecondarySelector();\n  const selector = (state, ownProps) => draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;\n  return selector;\n};\nconst mapDispatchToProps$1 = {\n  dropAnimationFinished: dropAnimationFinished\n};\nconst ConnectedDraggable = connect(makeMapStateToProps$1, mapDispatchToProps$1, null, {\n  context: StoreContext,\n  areStatePropsEqual: isStrictEqual\n})(Draggable$1);\nvar ConnectedDraggable$1 = ConnectedDraggable;\n\nfunction PrivateDraggable(props) {\n  const droppableContext = useRequiredContext(DroppableContext);\n  const isUsingCloneFor = droppableContext.isUsingCloneFor;\n  if (isUsingCloneFor === props.draggableId && !props.isClone) {\n    return null;\n  }\n  return React.createElement(ConnectedDraggable$1, props);\n}\nfunction PublicDraggable(props) {\n  const isEnabled = typeof props.isDragDisabled === 'boolean' ? !props.isDragDisabled : true;\n  const canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);\n  const shouldRespectForcePress = Boolean(props.shouldRespectForcePress);\n  return React.createElement(PrivateDraggable, _extends({}, props, {\n    isClone: false,\n    isEnabled: isEnabled,\n    canDragInteractiveElements: canDragInteractiveElements,\n    shouldRespectForcePress: shouldRespectForcePress\n  }));\n}\n\nconst isEqual = base => value => base === value;\nconst isScroll = isEqual('scroll');\nconst isAuto = isEqual('auto');\nconst isVisible = isEqual('visible');\nconst isEither = (overflow, fn) => fn(overflow.overflowX) || fn(overflow.overflowY);\nconst isBoth = (overflow, fn) => fn(overflow.overflowX) && fn(overflow.overflowY);\nconst isElementScrollable = el => {\n  const style = window.getComputedStyle(el);\n  const overflow = {\n    overflowX: style.overflowX,\n    overflowY: style.overflowY\n  };\n  return isEither(overflow, isScroll) || isEither(overflow, isAuto);\n};\nconst isBodyScrollable = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return false;\n  }\n  const body = getBodyElement();\n  const html = document.documentElement;\n  !html ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  if (!isElementScrollable(body)) {\n    return false;\n  }\n  const htmlStyle = window.getComputedStyle(html);\n  const htmlOverflow = {\n    overflowX: htmlStyle.overflowX,\n    overflowY: htmlStyle.overflowY\n  };\n  if (isBoth(htmlOverflow, isVisible)) {\n    return false;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(`\n    We have detected that your <body> element might be a scroll container.\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\n\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\n    we will be treating the <body> as *not* a scroll container\n\n    More information: https://github.com/hello-pangea/dnd/blob/main/docs/guides/how-we-detect-scroll-containers.md\n  `) : void 0;\n  return false;\n};\nconst getClosestScrollable = el => {\n  if (el == null) {\n    return null;\n  }\n  if (el === document.body) {\n    return isBodyScrollable() ? el : null;\n  }\n  if (el === document.documentElement) {\n    return null;\n  }\n  if (!isElementScrollable(el)) {\n    return getClosestScrollable(el.parentElement);\n  }\n  return el;\n};\n\nvar checkForNestedScrollContainers = (scrollable => {\n  if (!scrollable) {\n    return;\n  }\n  const anotherScrollParent = getClosestScrollable(scrollable.parentElement);\n  if (!anotherScrollParent) {\n    return;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(`\n    Droppable: unsupported nested scroll container detected.\n    A Droppable can only have one scroll parent (which can be itself)\n    Nested scroll containers are currently not supported.\n\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\n  `) : void 0;\n});\n\nvar getScroll = (el => ({\n  x: el.scrollLeft,\n  y: el.scrollTop\n}));\n\nconst getIsFixed = el => {\n  if (!el) {\n    return false;\n  }\n  const style = window.getComputedStyle(el);\n  if (style.position === 'fixed') {\n    return true;\n  }\n  return getIsFixed(el.parentElement);\n};\nvar getEnv = (start => {\n  const closestScrollable = getClosestScrollable(start);\n  const isFixedOnPage = getIsFixed(start);\n  return {\n    closestScrollable,\n    isFixedOnPage\n  };\n});\n\nvar getDroppableDimension = (({\n  descriptor,\n  isEnabled,\n  isCombineEnabled,\n  isFixedOnPage,\n  direction,\n  client,\n  page,\n  closest\n}) => {\n  const frame = (() => {\n    if (!closest) {\n      return null;\n    }\n    const {\n      scrollSize,\n      client: frameClient\n    } = closest;\n    const maxScroll = getMaxScroll({\n      scrollHeight: scrollSize.scrollHeight,\n      scrollWidth: scrollSize.scrollWidth,\n      height: frameClient.paddingBox.height,\n      width: frameClient.paddingBox.width\n    });\n    return {\n      pageMarginBox: closest.page.marginBox,\n      frameClient,\n      scrollSize,\n      shouldClipSubject: closest.shouldClipSubject,\n      scroll: {\n        initial: closest.scroll,\n        current: closest.scroll,\n        max: maxScroll,\n        diff: {\n          value: origin,\n          displacement: origin\n        }\n      }\n    };\n  })();\n  const axis = direction === 'vertical' ? vertical : horizontal;\n  const subject = getSubject({\n    page,\n    withPlaceholder: null,\n    axis,\n    frame\n  });\n  const dimension = {\n    descriptor,\n    isCombineEnabled,\n    isFixedOnPage,\n    axis,\n    isEnabled,\n    client,\n    page,\n    frame,\n    subject\n  };\n  return dimension;\n});\n\nconst getClient = (targetRef, closestScrollable) => {\n  const base = getBox(targetRef);\n  if (!closestScrollable) {\n    return base;\n  }\n  if (targetRef !== closestScrollable) {\n    return base;\n  }\n  const top = base.paddingBox.top - closestScrollable.scrollTop;\n  const left = base.paddingBox.left - closestScrollable.scrollLeft;\n  const bottom = top + closestScrollable.scrollHeight;\n  const right = left + closestScrollable.scrollWidth;\n  const paddingBox = {\n    top,\n    right,\n    bottom,\n    left\n  };\n  const borderBox = expand(paddingBox, base.border);\n  const client = createBox({\n    borderBox,\n    margin: base.margin,\n    border: base.border,\n    padding: base.padding\n  });\n  return client;\n};\nvar getDimension = (({\n  ref,\n  descriptor,\n  env,\n  windowScroll,\n  direction,\n  isDropDisabled,\n  isCombineEnabled,\n  shouldClipSubject\n}) => {\n  const closestScrollable = env.closestScrollable;\n  const client = getClient(ref, closestScrollable);\n  const page = withScroll(client, windowScroll);\n  const closest = (() => {\n    if (!closestScrollable) {\n      return null;\n    }\n    const frameClient = getBox(closestScrollable);\n    const scrollSize = {\n      scrollHeight: closestScrollable.scrollHeight,\n      scrollWidth: closestScrollable.scrollWidth\n    };\n    return {\n      client: frameClient,\n      page: withScroll(frameClient, windowScroll),\n      scroll: getScroll(closestScrollable),\n      scrollSize,\n      shouldClipSubject\n    };\n  })();\n  const dimension = getDroppableDimension({\n    descriptor,\n    isEnabled: !isDropDisabled,\n    isCombineEnabled,\n    isFixedOnPage: env.isFixedOnPage,\n    direction,\n    client,\n    page,\n    closest\n  });\n  return dimension;\n});\n\nconst immediate = {\n  passive: false\n};\nconst delayed = {\n  passive: true\n};\nvar getListenerOptions = (options => options.shouldPublishImmediately ? immediate : delayed);\n\nconst getClosestScrollableFromDrag = dragging => dragging && dragging.env.closestScrollable || null;\nfunction useDroppablePublisher(args) {\n  const whileDraggingRef = useRef(null);\n  const appContext = useRequiredContext(AppContext);\n  const uniqueId = useUniqueId$1('droppable');\n  const {\n    registry,\n    marshal\n  } = appContext;\n  const previousRef = usePrevious(args);\n  const descriptor = useMemo(() => ({\n    id: args.droppableId,\n    type: args.type,\n    mode: args.mode\n  }), [args.droppableId, args.mode, args.type]);\n  const publishedDescriptorRef = useRef(descriptor);\n  const memoizedUpdateScroll = useMemo(() => memoizeOne((x, y) => {\n    !whileDraggingRef.current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only update scroll when dragging') : invariant(false) : void 0;\n    const scroll = {\n      x,\n      y\n    };\n    marshal.updateDroppableScroll(descriptor.id, scroll);\n  }), [descriptor.id, marshal]);\n  const getClosestScroll = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    if (!dragging || !dragging.env.closestScrollable) {\n      return origin;\n    }\n    return getScroll(dragging.env.closestScrollable);\n  }, []);\n  const updateScroll = useCallback(() => {\n    const scroll = getClosestScroll();\n    memoizedUpdateScroll(scroll.x, scroll.y);\n  }, [getClosestScroll, memoizedUpdateScroll]);\n  const scheduleScrollUpdate = useMemo(() => rafSchd(updateScroll), [updateScroll]);\n  const onClosestScroll = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    const closest = getClosestScrollableFromDrag(dragging);\n    !(dragging && closest) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find scroll options while scrolling') : invariant(false) : void 0;\n    const options = dragging.scrollOptions;\n    if (options.shouldPublishImmediately) {\n      updateScroll();\n      return;\n    }\n    scheduleScrollUpdate();\n  }, [scheduleScrollUpdate, updateScroll]);\n  const getDimensionAndWatchScroll = useCallback((windowScroll, options) => {\n    !!whileDraggingRef.current ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot collect a droppable while a drag is occurring') : invariant(false) : void 0;\n    const previous = previousRef.current;\n    const ref = previous.getDroppableRef();\n    !ref ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot collect without a droppable ref') : invariant(false) : void 0;\n    const env = getEnv(ref);\n    const dragging = {\n      ref,\n      descriptor,\n      env,\n      scrollOptions: options\n    };\n    whileDraggingRef.current = dragging;\n    const dimension = getDimension({\n      ref,\n      descriptor,\n      env,\n      windowScroll,\n      direction: previous.direction,\n      isDropDisabled: previous.isDropDisabled,\n      isCombineEnabled: previous.isCombineEnabled,\n      shouldClipSubject: !previous.ignoreContainerClipping\n    });\n    const scrollable = env.closestScrollable;\n    if (scrollable) {\n      scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);\n      scrollable.addEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));\n      if (process.env.NODE_ENV !== 'production') {\n        checkForNestedScrollContainers(scrollable);\n      }\n    }\n    return dimension;\n  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);\n  const getScrollWhileDragging = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    const closest = getClosestScrollableFromDrag(dragging);\n    !(dragging && closest) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Can only recollect Droppable client for Droppables that have a scroll container') : invariant(false) : void 0;\n    return getScroll(closest);\n  }, []);\n  const dragStopped = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot stop drag when no active drag') : invariant(false) : void 0;\n    const closest = getClosestScrollableFromDrag(dragging);\n    whileDraggingRef.current = null;\n    if (!closest) {\n      return;\n    }\n    scheduleScrollUpdate.cancel();\n    closest.removeAttribute(scrollContainer.contextId);\n    closest.removeEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));\n  }, [onClosestScroll, scheduleScrollUpdate]);\n  const scroll = useCallback(change => {\n    const dragging = whileDraggingRef.current;\n    !dragging ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot scroll when there is no drag') : invariant(false) : void 0;\n    const closest = getClosestScrollableFromDrag(dragging);\n    !closest ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Cannot scroll a droppable with no closest scrollable') : invariant(false) : void 0;\n    closest.scrollTop += change.y;\n    closest.scrollLeft += change.x;\n  }, []);\n  const callbacks = useMemo(() => {\n    return {\n      getDimensionAndWatchScroll,\n      getScrollWhileDragging,\n      dragStopped,\n      scroll\n    };\n  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll]);\n  const entry = useMemo(() => ({\n    uniqueId,\n    descriptor,\n    callbacks\n  }), [callbacks, descriptor, uniqueId]);\n  useLayoutEffect(() => {\n    publishedDescriptorRef.current = entry.descriptor;\n    registry.droppable.register(entry);\n    return () => {\n      if (whileDraggingRef.current) {\n        process.env.NODE_ENV !== \"production\" ? warning('Unsupported: changing the droppableId or type of a Droppable during a drag') : void 0;\n        dragStopped();\n      }\n      registry.droppable.unregister(entry);\n    };\n  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);\n  useLayoutEffect(() => {\n    if (!whileDraggingRef.current) {\n      return;\n    }\n    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);\n  }, [args.isDropDisabled, marshal]);\n  useLayoutEffect(() => {\n    if (!whileDraggingRef.current) {\n      return;\n    }\n    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);\n  }, [args.isCombineEnabled, marshal]);\n}\n\nfunction noop() {}\nconst empty = {\n  width: 0,\n  height: 0,\n  margin: noSpacing\n};\nconst getSize = ({\n  isAnimatingOpenOnMount,\n  placeholder,\n  animate\n}) => {\n  if (isAnimatingOpenOnMount) {\n    return empty;\n  }\n  if (animate === 'close') {\n    return empty;\n  }\n  return {\n    height: placeholder.client.borderBox.height,\n    width: placeholder.client.borderBox.width,\n    margin: placeholder.client.margin\n  };\n};\nconst getStyle = ({\n  isAnimatingOpenOnMount,\n  placeholder,\n  animate\n}) => {\n  const size = getSize({\n    isAnimatingOpenOnMount,\n    placeholder,\n    animate\n  });\n  return {\n    display: placeholder.display,\n    boxSizing: 'border-box',\n    width: size.width,\n    height: size.height,\n    marginTop: size.margin.top,\n    marginRight: size.margin.right,\n    marginBottom: size.margin.bottom,\n    marginLeft: size.margin.left,\n    flexShrink: '0',\n    flexGrow: '0',\n    pointerEvents: 'none',\n    transition: animate !== 'none' ? transitions.placeholder : null\n  };\n};\nconst Placeholder = props => {\n  const animateOpenTimerRef = useRef(null);\n  const tryClearAnimateOpenTimer = useCallback(() => {\n    if (!animateOpenTimerRef.current) {\n      return;\n    }\n    clearTimeout(animateOpenTimerRef.current);\n    animateOpenTimerRef.current = null;\n  }, []);\n  const {\n    animate,\n    onTransitionEnd,\n    onClose,\n    contextId\n  } = props;\n  const [isAnimatingOpenOnMount, setIsAnimatingOpenOnMount] = useState(props.animate === 'open');\n  useEffect(() => {\n    if (!isAnimatingOpenOnMount) {\n      return noop;\n    }\n    if (animate !== 'open') {\n      tryClearAnimateOpenTimer();\n      setIsAnimatingOpenOnMount(false);\n      return noop;\n    }\n    if (animateOpenTimerRef.current) {\n      return noop;\n    }\n    animateOpenTimerRef.current = setTimeout(() => {\n      animateOpenTimerRef.current = null;\n      setIsAnimatingOpenOnMount(false);\n    });\n    return tryClearAnimateOpenTimer;\n  }, [animate, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);\n  const onSizeChangeEnd = useCallback(event => {\n    if (event.propertyName !== 'height') {\n      return;\n    }\n    onTransitionEnd();\n    if (animate === 'close') {\n      onClose();\n    }\n  }, [animate, onClose, onTransitionEnd]);\n  const style = getStyle({\n    isAnimatingOpenOnMount,\n    animate: props.animate,\n    placeholder: props.placeholder\n  });\n  return React.createElement(props.placeholder.tagName, {\n    style,\n    'data-rfd-placeholder-context-id': contextId,\n    onTransitionEnd: onSizeChangeEnd,\n    ref: props.innerRef\n  });\n};\nvar Placeholder$1 = React.memo(Placeholder);\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction runChecks(args, checks) {\n  checks.forEach(check => check(args));\n}\nconst shared = [function required({\n  props\n}) {\n  !props.droppableId ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A Droppable requires a droppableId prop') : invariant(false) : void 0;\n  !(typeof props.droppableId === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, `A Droppable requires a [string] droppableId. Provided: [${typeof props.droppableId}]`) : invariant(false) : void 0;\n}, function boolean({\n  props\n}) {\n  !isBoolean(props.isDropDisabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isDropDisabled must be a boolean') : invariant(false) : void 0;\n  !isBoolean(props.isCombineEnabled) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isCombineEnabled must be a boolean') : invariant(false) : void 0;\n  !isBoolean(props.ignoreContainerClipping) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ignoreContainerClipping must be a boolean') : invariant(false) : void 0;\n}, function ref({\n  getDroppableRef\n}) {\n  checkIsValidInnerRef(getDroppableRef());\n}];\nconst standard = [function placeholder({\n  props,\n  getPlaceholderRef\n}) {\n  if (!props.placeholder) {\n    return;\n  }\n  const ref = getPlaceholderRef();\n  if (ref) {\n    return;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(`\n      Droppable setup issue [droppableId: \"${props.droppableId}\"]:\n      DroppableProvided > placeholder could not be found.\n\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\n      More information: https://github.com/hello-pangea/dnd/blob/main/docs/api/droppable.md\n    `) : void 0;\n}];\nconst virtual = [function hasClone({\n  props\n}) {\n  !props.renderClone ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Must provide a clone render function (renderClone) for virtual lists') : invariant(false) : void 0;\n}, function hasNoPlaceholder({\n  getPlaceholderRef\n}) {\n  !!getPlaceholderRef() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected virtual list to not have a placeholder') : invariant(false) : void 0;\n}];\nfunction useValidation(args) {\n  useDevSetupWarning(() => {\n    runChecks(args, shared);\n    if (args.props.mode === 'standard') {\n      runChecks(args, standard);\n    }\n    if (args.props.mode === 'virtual') {\n      runChecks(args, virtual);\n    }\n  });\n}\n\nclass AnimateInOut extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isVisible: Boolean(this.props.on),\n      data: this.props.on,\n      animate: this.props.shouldAnimate && this.props.on ? 'open' : 'none'\n    };\n    this.onClose = () => {\n      if (this.state.animate !== 'close') {\n        return;\n      }\n      this.setState({\n        isVisible: false\n      });\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (!props.shouldAnimate) {\n      return {\n        isVisible: Boolean(props.on),\n        data: props.on,\n        animate: 'none'\n      };\n    }\n    if (props.on) {\n      return {\n        isVisible: true,\n        data: props.on,\n        animate: 'open'\n      };\n    }\n    if (state.isVisible) {\n      return {\n        isVisible: true,\n        data: state.data,\n        animate: 'close'\n      };\n    }\n    return {\n      isVisible: false,\n      animate: 'close',\n      data: null\n    };\n  }\n  render() {\n    if (!this.state.isVisible) {\n      return null;\n    }\n    const provided = {\n      onClose: this.onClose,\n      data: this.state.data,\n      animate: this.state.animate\n    };\n    return this.props.children(provided);\n  }\n}\n\nconst Droppable = props => {\n  const appContext = useContext(AppContext);\n  !appContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find app context') : invariant(false) : void 0;\n  const {\n    contextId,\n    isMovementAllowed\n  } = appContext;\n  const droppableRef = useRef(null);\n  const placeholderRef = useRef(null);\n  const {\n    children,\n    droppableId,\n    type,\n    mode,\n    direction,\n    ignoreContainerClipping,\n    isDropDisabled,\n    isCombineEnabled,\n    snapshot,\n    useClone,\n    updateViewportMaxScroll,\n    getContainerForClone\n  } = props;\n  const getDroppableRef = useCallback(() => droppableRef.current, []);\n  const setDroppableRef = useCallback((value = null) => {\n    droppableRef.current = value;\n  }, []);\n  const getPlaceholderRef = useCallback(() => placeholderRef.current, []);\n  const setPlaceholderRef = useCallback((value = null) => {\n    placeholderRef.current = value;\n  }, []);\n  useValidation({\n    props,\n    getDroppableRef,\n    getPlaceholderRef\n  });\n  const onPlaceholderTransitionEnd = useCallback(() => {\n    if (isMovementAllowed()) {\n      updateViewportMaxScroll({\n        maxScroll: getMaxWindowScroll()\n      });\n    }\n  }, [isMovementAllowed, updateViewportMaxScroll]);\n  useDroppablePublisher({\n    droppableId,\n    type,\n    mode,\n    direction,\n    isDropDisabled,\n    isCombineEnabled,\n    ignoreContainerClipping,\n    getDroppableRef\n  });\n  const placeholder = useMemo(() => React.createElement(AnimateInOut, {\n    on: props.placeholder,\n    shouldAnimate: props.shouldAnimatePlaceholder\n  }, ({\n    onClose,\n    data,\n    animate\n  }) => React.createElement(Placeholder$1, {\n    placeholder: data,\n    onClose: onClose,\n    innerRef: setPlaceholderRef,\n    animate: animate,\n    contextId: contextId,\n    onTransitionEnd: onPlaceholderTransitionEnd\n  })), [contextId, onPlaceholderTransitionEnd, props.placeholder, props.shouldAnimatePlaceholder, setPlaceholderRef]);\n  const provided = useMemo(() => ({\n    innerRef: setDroppableRef,\n    placeholder,\n    droppableProps: {\n      'data-rfd-droppable-id': droppableId,\n      'data-rfd-droppable-context-id': contextId\n    }\n  }), [contextId, droppableId, placeholder, setDroppableRef]);\n  const isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;\n  const droppableContext = useMemo(() => ({\n    droppableId,\n    type,\n    isUsingCloneFor\n  }), [droppableId, isUsingCloneFor, type]);\n  function getClone() {\n    if (!useClone) {\n      return null;\n    }\n    const {\n      dragging,\n      render\n    } = useClone;\n    const node = React.createElement(PrivateDraggable, {\n      draggableId: dragging.draggableId,\n      index: dragging.source.index,\n      isClone: true,\n      isEnabled: true,\n      shouldRespectForcePress: false,\n      canDragInteractiveElements: true\n    }, (draggableProvided, draggableSnapshot) => render(draggableProvided, draggableSnapshot, dragging));\n    return ReactDOM.createPortal(node, getContainerForClone());\n  }\n  return React.createElement(DroppableContext.Provider, {\n    value: droppableContext\n  }, children(provided, snapshot), getClone());\n};\nvar Droppable$1 = Droppable;\n\nfunction getBody() {\n  !document.body ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'document.body is not ready') : invariant(false) : void 0;\n  return document.body;\n}\nconst defaultProps = {\n  mode: 'standard',\n  type: 'DEFAULT',\n  direction: 'vertical',\n  isDropDisabled: false,\n  isCombineEnabled: false,\n  ignoreContainerClipping: false,\n  renderClone: null,\n  getContainerForClone: getBody\n};\nconst attachDefaultPropsToOwnProps = ownProps => {\n  let mergedProps = {\n    ...ownProps\n  };\n  let defaultPropKey;\n  for (defaultPropKey in defaultProps) {\n    if (ownProps[defaultPropKey] === undefined) {\n      mergedProps = {\n        ...mergedProps,\n        [defaultPropKey]: defaultProps[defaultPropKey]\n      };\n    }\n  }\n  return mergedProps;\n};\nconst isMatchingType = (type, critical) => type === critical.droppable.type;\nconst getDraggable = (critical, dimensions) => dimensions.draggables[critical.draggable.id];\nconst makeMapStateToProps = () => {\n  const idleWithAnimation = {\n    placeholder: null,\n    shouldAnimatePlaceholder: true,\n    snapshot: {\n      isDraggingOver: false,\n      draggingOverWith: null,\n      draggingFromThisWith: null,\n      isUsingPlaceholder: false\n    },\n    useClone: null\n  };\n  const idleWithoutAnimation = {\n    ...idleWithAnimation,\n    shouldAnimatePlaceholder: false\n  };\n  const getDraggableRubric = memoizeOne(descriptor => ({\n    draggableId: descriptor.id,\n    type: descriptor.type,\n    source: {\n      index: descriptor.index,\n      droppableId: descriptor.droppableId\n    }\n  }));\n  const getMapProps = memoizeOne((id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) => {\n    const draggableId = dragging.descriptor.id;\n    const isHome = dragging.descriptor.droppableId === id;\n    if (isHome) {\n      const useClone = renderClone ? {\n        render: renderClone,\n        dragging: getDraggableRubric(dragging.descriptor)\n      } : null;\n      const snapshot = {\n        isDraggingOver: isDraggingOverForConsumer,\n        draggingOverWith: isDraggingOverForConsumer ? draggableId : null,\n        draggingFromThisWith: draggableId,\n        isUsingPlaceholder: true\n      };\n      return {\n        placeholder: dragging.placeholder,\n        shouldAnimatePlaceholder: false,\n        snapshot,\n        useClone\n      };\n    }\n    if (!isEnabled) {\n      return idleWithoutAnimation;\n    }\n    if (!isDraggingOverForImpact) {\n      return idleWithAnimation;\n    }\n    const snapshot = {\n      isDraggingOver: isDraggingOverForConsumer,\n      draggingOverWith: draggableId,\n      draggingFromThisWith: null,\n      isUsingPlaceholder: true\n    };\n    return {\n      placeholder: dragging.placeholder,\n      shouldAnimatePlaceholder: true,\n      snapshot,\n      useClone: null\n    };\n  });\n  const selector = (state, ownProps) => {\n    const ownPropsWithDefaultProps = attachDefaultPropsToOwnProps(ownProps);\n    const id = ownPropsWithDefaultProps.droppableId;\n    const type = ownPropsWithDefaultProps.type;\n    const isEnabled = !ownPropsWithDefaultProps.isDropDisabled;\n    const renderClone = ownPropsWithDefaultProps.renderClone;\n    if (isDragging(state)) {\n      const critical = state.critical;\n      if (!isMatchingType(type, critical)) {\n        return idleWithoutAnimation;\n      }\n      const dragging = getDraggable(critical, state.dimensions);\n      const isDraggingOver = whatIsDraggedOver(state.impact) === id;\n      return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (!isMatchingType(type, completed.critical)) {\n        return idleWithoutAnimation;\n      }\n      const dragging = getDraggable(completed.critical, state.dimensions);\n      return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, dragging, renderClone);\n    }\n    if (state.phase === 'IDLE' && state.completed && !state.shouldFlush) {\n      const completed = state.completed;\n      if (!isMatchingType(type, completed.critical)) {\n        return idleWithoutAnimation;\n      }\n      const wasOver = whatIsDraggedOver(completed.impact) === id;\n      const wasCombining = Boolean(completed.impact.at && completed.impact.at.type === 'COMBINE');\n      const isHome = completed.critical.droppable.id === id;\n      if (wasOver) {\n        return wasCombining ? idleWithAnimation : idleWithoutAnimation;\n      }\n      if (isHome) {\n        return idleWithAnimation;\n      }\n      return idleWithoutAnimation;\n    }\n    return idleWithoutAnimation;\n  };\n  return selector;\n};\nconst mapDispatchToProps = {\n  updateViewportMaxScroll: updateViewportMaxScroll\n};\nconst ConnectedDroppable = connect(makeMapStateToProps, mapDispatchToProps, (stateProps, dispatchProps, ownProps) => {\n  return {\n    ...attachDefaultPropsToOwnProps(ownProps),\n    ...stateProps,\n    ...dispatchProps\n  };\n}, {\n  context: StoreContext,\n  areStatePropsEqual: isStrictEqual\n})(Droppable$1);\nvar ConnectedDroppable$1 = ConnectedDroppable;\n\nexport { DragDropContext, PublicDraggable as Draggable, ConnectedDroppable$1 as Droppable, resetServerContext, useKeyboardSensor, useMouseSensor, useTouchSensor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}