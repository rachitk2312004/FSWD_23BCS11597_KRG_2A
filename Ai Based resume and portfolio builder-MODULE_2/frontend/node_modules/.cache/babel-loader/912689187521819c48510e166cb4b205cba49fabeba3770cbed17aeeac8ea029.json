{"ast":null,"code":"var _jsxFileName = \"/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI, userAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      // Verify token and get user data\n      userAPI.getProfile().then(response => {\n        setUser(response.data);\n      }).catch(error => {\n        console.error('Auth verification failed:', error);\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n      const {\n        accessToken,\n        refreshToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(userData);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        accessToken,\n        refreshToken,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(newUser);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const chatLogin = async credentials => {\n    try {\n      const response = await authAPI.chatLogin(credentials);\n      const {\n        accessToken,\n        refreshToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(userData);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateUser = userData => {\n    setUser(prev => ({\n      ...prev,\n      ...userData\n    }));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    chatLogin,\n    logout,\n    updateUser,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","userAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","getProfile","then","response","data","catch","error","console","removeItem","finally","login","credentials","accessToken","refreshToken","userData","setItem","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","chatLogin","_error$response3","_error$response3$data","logout","updateUser","prev","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI, userAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      // Verify token and get user data\n      userAPI.getProfile()\n        .then(response => {\n          setUser(response.data);\n        })\n        .catch(error => {\n          console.error('Auth verification failed:', error);\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await authAPI.login(credentials);\n      const { accessToken, refreshToken, user: userData } = response.data;\n      \n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authAPI.register(userData);\n      const { accessToken, refreshToken, user: newUser } = response.data;\n      \n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(newUser);\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const chatLogin = async (credentials) => {\n    try {\n      const response = await authAPI.chatLogin(credentials);\n      const { accessToken, refreshToken, user: userData } = response.data;\n      \n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = (userData) => {\n    setUser(prev => ({ ...prev, ...userData }));\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    chatLogin,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}