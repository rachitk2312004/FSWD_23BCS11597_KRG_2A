{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('accessToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle token refresh\napi.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refreshToken');if(refreshToken){const response=await axios.post(\"\".concat(API_BASE_URL,\"/auth/refresh\"),{refreshToken:refreshToken});const{accessToken,refreshToken:newRefreshToken}=response.data;localStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',newRefreshToken);// Retry the original request\noriginalRequest.headers.Authorization=\"Bearer \".concat(accessToken);return api(originalRequest);}}catch(refreshError){// Refresh failed, redirect to login\nlocalStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');window.location.href='/login';}}return Promise.reject(error);});// Auth API\nexport const authAPI={login:credentials=>api.post('/auth/login',credentials),register:userData=>api.post('/auth/register',userData),chatLogin:credentials=>api.post('/auth/chat-login',credentials),refresh:refreshToken=>api.post('/auth/refresh',{refreshToken})};// User API\nexport const userAPI={getProfile:()=>api.get('/user/profile'),updateProfile:data=>api.put('/user/profile',data),changePassword:data=>api.post('/user/change-password',data)};// Resume API\nexport const resumeAPI={getResumes:()=>api.get('/resumes'),getResume:id=>api.get(\"/resumes/\".concat(id)),createResume:data=>api.post('/resumes',data),updateResume:(id,data)=>api.put(\"/resumes/\".concat(id),data),duplicateResume:id=>api.post(\"/resumes/\".concat(id,\"/duplicate\")),deleteResume:id=>api.delete(\"/resumes/\".concat(id)),getPublicResume:publicLink=>api.get(\"/resumes/public/\".concat(publicLink)),saveVersion:id=>api.post(\"/resumes/\".concat(id,\"/versions\")),listVersions:id=>api.get(\"/resumes/\".concat(id,\"/versions\")),restoreVersion:(id,versionId)=>api.post(\"/resumes/\".concat(id,\"/versions/\").concat(versionId,\"/restore\"))};// Portfolio API\nexport const portfolioAPI={getPortfolios:()=>api.get('/portfolios'),getPortfolio:id=>api.get(\"/portfolios/\".concat(id)),createPortfolio:data=>api.post('/portfolios',data),updatePortfolio:(id,data)=>api.put(\"/portfolios/\".concat(id),data),duplicatePortfolio:id=>api.post(\"/portfolios/\".concat(id,\"/duplicate\")),deletePortfolio:id=>api.delete(\"/portfolios/\".concat(id)),getPublicPortfolio:publicLink=>api.get(\"/portfolios/public/\".concat(publicLink))};// AI API\nexport const aiAPI={summary:payload=>api.post('/ai/summary',payload),skills:payload=>api.post('/ai/skills',payload),atsOptimize:payload=>api.post('/ai/ats-optimize',payload)};// Export API\nexport const exportAPI={pdf:(id,html)=>api.post(\"/export/pdf/\".concat(id),{html},{responseType:'blob'}),docx:(id,html)=>api.post(\"/export/docx/\".concat(id),{html},{responseType:'blob'})};// OCR API\nexport const ocrAPI={parseJD:file=>{const form=new FormData();form.append('file',file);return api.post('/ocr/parse-jd',form,{headers:{'Content-Type':'multipart/form-data'}});}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","accessToken","newRefreshToken","data","setItem","refreshError","removeItem","window","location","href","authAPI","login","credentials","register","userData","chatLogin","refresh","userAPI","getProfile","get","updateProfile","put","changePassword","resumeAPI","getResumes","getResume","id","createResume","updateResume","duplicateResume","deleteResume","delete","getPublicResume","publicLink","saveVersion","listVersions","restoreVersion","versionId","portfolioAPI","getPortfolios","getPortfolio","createPortfolio","updatePortfolio","duplicatePortfolio","deletePortfolio","getPublicPortfolio","aiAPI","summary","payload","skills","atsOptimize","exportAPI","pdf","html","responseType","docx","ocrAPI","parseJD","file","form","FormData","append"],"sources":["/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          const response = await axios.post(`${API_BASE_URL}/auth/refresh`, {\n            refreshToken: refreshToken\n          });\n          \n          const { accessToken, refreshToken: newRefreshToken } = response.data;\n          localStorage.setItem('accessToken', accessToken);\n          localStorage.setItem('refreshToken', newRefreshToken);\n          \n          // Retry the original request\n          originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        window.location.href = '/login';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  chatLogin: (credentials) => api.post('/auth/chat-login', credentials),\n  refresh: (refreshToken) => api.post('/auth/refresh', { refreshToken }),\n};\n\n// User API\nexport const userAPI = {\n  getProfile: () => api.get('/user/profile'),\n  updateProfile: (data) => api.put('/user/profile', data),\n  changePassword: (data) => api.post('/user/change-password', data),\n};\n\n// Resume API\nexport const resumeAPI = {\n  getResumes: () => api.get('/resumes'),\n  getResume: (id) => api.get(`/resumes/${id}`),\n  createResume: (data) => api.post('/resumes', data),\n  updateResume: (id, data) => api.put(`/resumes/${id}`, data),\n  duplicateResume: (id) => api.post(`/resumes/${id}/duplicate`),\n  deleteResume: (id) => api.delete(`/resumes/${id}`),\n  getPublicResume: (publicLink) => api.get(`/resumes/public/${publicLink}`),\n  saveVersion: (id) => api.post(`/resumes/${id}/versions`),\n  listVersions: (id) => api.get(`/resumes/${id}/versions`),\n  restoreVersion: (id, versionId) => api.post(`/resumes/${id}/versions/${versionId}/restore`),\n};\n\n// Portfolio API\nexport const portfolioAPI = {\n  getPortfolios: () => api.get('/portfolios'),\n  getPortfolio: (id) => api.get(`/portfolios/${id}`),\n  createPortfolio: (data) => api.post('/portfolios', data),\n  updatePortfolio: (id, data) => api.put(`/portfolios/${id}`, data),\n  duplicatePortfolio: (id) => api.post(`/portfolios/${id}/duplicate`),\n  deletePortfolio: (id) => api.delete(`/portfolios/${id}`),\n  getPublicPortfolio: (publicLink) => api.get(`/portfolios/public/${publicLink}`),\n};\n\n// AI API\nexport const aiAPI = {\n  summary: (payload) => api.post('/ai/summary', payload),\n  skills: (payload) => api.post('/ai/skills', payload),\n  atsOptimize: (payload) => api.post('/ai/ats-optimize', payload),\n};\n\n// Export API\nexport const exportAPI = {\n  pdf: (id, html) => api.post(`/export/pdf/${id}`, { html }, { responseType: 'blob' }),\n  docx: (id, html) => api.post(`/export/docx/${id}`, { html }, { responseType: 'blob' }),\n};\n\n// OCR API\nexport const ocrAPI = {\n  parseJD: (file) => {\n    const form = new FormData();\n    form.append('file', file);\n    return api.post('/ocr/parse-jd', form, { headers: { 'Content-Type': 'multipart/form-data' } });\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}