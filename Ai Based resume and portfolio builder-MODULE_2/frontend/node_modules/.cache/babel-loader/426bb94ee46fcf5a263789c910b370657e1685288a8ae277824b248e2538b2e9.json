{"ast":null,"code":"var _jsxFileName = \"/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/contexts/AutoSaveContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { resumeAPI, portfolioAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoSaveContext = /*#__PURE__*/createContext();\nexport const useAutoSave = () => {\n  _s();\n  const context = useContext(AutoSaveContext);\n  if (!context) {\n    throw new Error('useAutoSave must be used within an AutoSaveProvider');\n  }\n  return context;\n};\n_s(useAutoSave, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AutoSaveProvider = ({\n  children\n}) => {\n  _s2();\n  const [autoSaveEnabled, setAutoSaveEnabled] = useState(true);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const saveResume = useCallback(async (id, data) => {\n    if (!autoSaveEnabled || !id) return;\n    setIsSaving(true);\n    try {\n      await resumeAPI.updateResume(id, data);\n      setLastSaved(new Date());\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      toast.error('Auto-save failed');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [autoSaveEnabled]);\n  const savePortfolio = useCallback(async (id, data) => {\n    if (!autoSaveEnabled || !id) return;\n    setIsSaving(true);\n    try {\n      await portfolioAPI.updatePortfolio(id, data);\n      setLastSaved(new Date());\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      toast.error('Auto-save failed');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [autoSaveEnabled]);\n  const toggleAutoSave = useCallback(() => {\n    setAutoSaveEnabled(prev => !prev);\n    toast.success(`Auto-save ${!autoSaveEnabled ? 'enabled' : 'disabled'}`);\n  }, [autoSaveEnabled]);\n  const value = {\n    autoSaveEnabled,\n    lastSaved,\n    isSaving,\n    saveResume,\n    savePortfolio,\n    toggleAutoSave\n  };\n  return /*#__PURE__*/_jsxDEV(AutoSaveContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s2(AutoSaveProvider, \"fRyzc08ngSQwdoOwCGI2bBGLlFw=\");\n_c = AutoSaveProvider;\nvar _c;\n$RefreshReg$(_c, \"AutoSaveProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","resumeAPI","portfolioAPI","toast","jsxDEV","_jsxDEV","AutoSaveContext","useAutoSave","_s","context","Error","AutoSaveProvider","children","_s2","autoSaveEnabled","setAutoSaveEnabled","lastSaved","setLastSaved","isSaving","setIsSaving","saveResume","id","data","updateResume","Date","error","console","savePortfolio","updatePortfolio","toggleAutoSave","prev","success","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/contexts/AutoSaveContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport { resumeAPI, portfolioAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AutoSaveContext = createContext();\n\nexport const useAutoSave = () => {\n  const context = useContext(AutoSaveContext);\n  if (!context) {\n    throw new Error('useAutoSave must be used within an AutoSaveProvider');\n  }\n  return context;\n};\n\nexport const AutoSaveProvider = ({ children }) => {\n  const [autoSaveEnabled, setAutoSaveEnabled] = useState(true);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const saveResume = useCallback(async (id, data) => {\n    if (!autoSaveEnabled || !id) return;\n\n    setIsSaving(true);\n    try {\n      await resumeAPI.updateResume(id, data);\n      setLastSaved(new Date());\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      toast.error('Auto-save failed');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [autoSaveEnabled]);\n\n  const savePortfolio = useCallback(async (id, data) => {\n    if (!autoSaveEnabled || !id) return;\n\n    setIsSaving(true);\n    try {\n      await portfolioAPI.updatePortfolio(id, data);\n      setLastSaved(new Date());\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      toast.error('Auto-save failed');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [autoSaveEnabled]);\n\n  const toggleAutoSave = useCallback(() => {\n    setAutoSaveEnabled(prev => !prev);\n    toast.success(`Auto-save ${!autoSaveEnabled ? 'enabled' : 'disabled'}`);\n  }, [autoSaveEnabled]);\n\n  const value = {\n    autoSaveEnabled,\n    lastSaved,\n    isSaving,\n    saveResume,\n    savePortfolio,\n    toggleAutoSave,\n  };\n\n  return (\n    <AutoSaveContext.Provider value={value}>\n      {children}\n    </AutoSaveContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}