{"ast":null,"code":"import _objectSpread from\"/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI,userAPI}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('accessToken');if(token){// Verify token and get user data\nuserAPI.getProfile().then(response=>{setUser(response.data);}).catch(error=>{console.error('Auth verification failed:',error);localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');}).finally(()=>{setLoading(false);});}else{setLoading(false);}},[]);const login=async credentials=>{try{const response=await authAPI.login(credentials);const{accessToken,refreshToken,user:userData}=response.data;localStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);setUser(userData);toast.success('Login successful!');return{success:true};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed';toast.error(message);return{success:false,error:message};}};const register=async userData=>{try{const response=await authAPI.register(userData);const{accessToken,refreshToken,user:newUser}=response.data;localStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);setUser(newUser);toast.success('Registration successful!');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Registration failed';toast.error(message);return{success:false,error:message};}};const chatLogin=async credentials=>{try{const response=await authAPI.chatLogin(credentials);const{accessToken,refreshToken,user:userData}=response.data;localStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);setUser(userData);toast.success('Login successful!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Login failed';toast.error(message);return{success:false,error:message};}};const logout=()=>{localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');setUser(null);toast.success('Logged out successfully');};const updateUser=userData=>{setUser(prev=>_objectSpread(_objectSpread({},prev),userData));};const value={user,loading,login,register,chatLogin,logout,updateUser,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","userAPI","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","getProfile","then","response","data","catch","error","console","removeItem","finally","login","credentials","accessToken","refreshToken","userData","setItem","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","chatLogin","_error$response3","_error$response3$data","logout","updateUser","prev","_objectSpread","value","isAuthenticated","Provider"],"sources":["/Users/rachitkumar/Documents/Ai Based resume and portfolio builder/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI, userAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      // Verify token and get user data\n      userAPI.getProfile()\n        .then(response => {\n          setUser(response.data);\n        })\n        .catch(error => {\n          console.error('Auth verification failed:', error);\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await authAPI.login(credentials);\n      const { accessToken, refreshToken, user: userData } = response.data;\n      \n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authAPI.register(userData);\n      const { accessToken, refreshToken, user: newUser } = response.data;\n      \n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(newUser);\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const chatLogin = async (credentials) => {\n    try {\n      const response = await authAPI.chatLogin(credentials);\n      const { accessToken, refreshToken, user: userData } = response.data;\n      \n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateUser = (userData) => {\n    setUser(prev => ({ ...prev, ...userData }));\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    chatLogin,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}